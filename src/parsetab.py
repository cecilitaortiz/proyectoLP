
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startAND BOOL CHAR CLASS COMMA CONSOLE DIVIDE DOT DOUBLE ELSE EQ EQUALS FALSE FLOAT FOR GE GET GT ID IF INT LBRACE LE LIST LPAREN LT MINUS MOD NE NOT OR PLUS PUBLIC RBRACE READLINE RETURN RPAREN SEMICOLON SET STRING STRINGTYPE TIMES TRUE USING VAR VOID WRITELINEstart : var_declsvar_decls : var_decls var_decl\n                 | var_decltype : INT\n            | DOUBLE\n            | FLOAT\n            | BOOL\n            | STRINGTYPE\n            | CHAR\n            | VAR\n            | LISTexpr : INTexpr : FLOATexpr : DOUBLEexpr : STRINGexpr : CHARexpr : TRUEexpr : FALSEexpr : IDvar_decl : type ID EQUALS expr SEMICOLON\n                | type ID SEMICOLON'
    
_lr_action_items = {'INT':([0,2,3,13,15,16,26,],[5,5,-3,-2,19,-21,-20,]),'DOUBLE':([0,2,3,13,15,16,26,],[6,6,-3,-2,21,-21,-20,]),'FLOAT':([0,2,3,13,15,16,26,],[7,7,-3,-2,20,-21,-20,]),'BOOL':([0,2,3,13,16,26,],[8,8,-3,-2,-21,-20,]),'STRINGTYPE':([0,2,3,13,16,26,],[9,9,-3,-2,-21,-20,]),'CHAR':([0,2,3,13,15,16,26,],[10,10,-3,-2,23,-21,-20,]),'VAR':([0,2,3,13,16,26,],[11,11,-3,-2,-21,-20,]),'LIST':([0,2,3,13,16,26,],[12,12,-3,-2,-21,-20,]),'$end':([1,2,3,13,16,26,],[0,-1,-3,-2,-21,-20,]),'ID':([4,5,6,7,8,9,10,11,12,15,],[14,-4,-5,-6,-7,-8,-9,-10,-11,17,]),'EQUALS':([14,],[15,]),'SEMICOLON':([14,17,18,19,20,21,22,23,24,25,],[16,-19,26,-12,-13,-14,-15,-16,-17,-18,]),'STRING':([15,],[22,]),'TRUE':([15,],[24,]),'FALSE':([15,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'var_decls':([0,],[2,]),'var_decl':([0,2,],[3,13,]),'type':([0,2,],[4,4,]),'expr':([15,],[18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> var_decls','start',1,'p_start','syntax.py',5),
  ('var_decls -> var_decls var_decl','var_decls',2,'p_var_decls','syntax.py',9),
  ('var_decls -> var_decl','var_decls',1,'p_var_decls','syntax.py',10),
  ('type -> INT','type',1,'p_type','syntax.py',14),
  ('type -> DOUBLE','type',1,'p_type','syntax.py',15),
  ('type -> FLOAT','type',1,'p_type','syntax.py',16),
  ('type -> BOOL','type',1,'p_type','syntax.py',17),
  ('type -> STRINGTYPE','type',1,'p_type','syntax.py',18),
  ('type -> CHAR','type',1,'p_type','syntax.py',19),
  ('type -> VAR','type',1,'p_type','syntax.py',20),
  ('type -> LIST','type',1,'p_type','syntax.py',21),
  ('expr -> INT','expr',1,'p_expr_int','syntax.py',26),
  ('expr -> FLOAT','expr',1,'p_expr_float','syntax.py',31),
  ('expr -> DOUBLE','expr',1,'p_expr_double','syntax.py',36),
  ('expr -> STRING','expr',1,'p_expr_string','syntax.py',41),
  ('expr -> CHAR','expr',1,'p_expr_char','syntax.py',46),
  ('expr -> TRUE','expr',1,'p_expr_true','syntax.py',51),
  ('expr -> FALSE','expr',1,'p_expr_false','syntax.py',56),
  ('expr -> ID','expr',1,'p_expr_id','syntax.py',61),
  ('var_decl -> type ID EQUALS expr SEMICOLON','var_decl',5,'p_var_decl','syntax.py',66),
  ('var_decl -> type ID SEMICOLON','var_decl',3,'p_var_decl','syntax.py',67),
]
