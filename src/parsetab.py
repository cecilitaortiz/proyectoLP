
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftPLUSMINUSleftTIMESDIVIDErightUMINUSADD AND ASSIGN BOOL CHAR CLASS COLON COMMA CONSOLE DIVIDE DOT DOUBLE ELSE EQ FALSE FLOAT FLOAT_CONST FOR GE GT ID IF INT INT_CONST LBRACE LBRACKET LE LIST LPAREN LT MINUS MINUSEQUAL MINUSMINUS MOD NE NEW NOT OR PARSE PLUS PLUSEQUAL PLUSPLUS PRIVATE PROTECTED PUBLIC RBRACE RBRACKET READLINE RETURN RPAREN SEMICOLON STRING STRING_CONST TIMES TRUE USING VAR VOID WRITELINEprogram : declarationsdeclarations : declarations declarationdeclarations : declarationdeclarations : declaration : type ID ASSIGN expression SEMICOLONdeclaration : type ID SEMICOLONdeclaration : CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLONdeclaration : IF LPAREN expression RPAREN LBRACE declarations RBRACE else_partelse_part : ELSE LBRACE declarations RBRACEelse_part : ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_partelse_part : declaration : FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACEfor_init : type ID ASSIGN expressionfor_init : ID ASSIGN expressionfor_init : expressionfor_init : for_cond : expressionfor_cond : for_iter : ID ASSIGN expressionfor_iter : expressionfor_iter : type : INT\n           | FLOAT\n           | BOOL\n           | STRING\n           | CHAR\n           | VAR\n           | DOUBLE\n           | list_typelist_type : LIST LT type GTexpression : NEW LIST LT type GT LPAREN RPARENexpression : NEW LIST LT type GT LBRACE list_elements RBRACElist_elements : list_elements COMMA expressionlist_elements : expressionlist_elements : expression : ID LBRACKET expression RBRACKETdeclaration : ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLONdeclaration : ID DOT ADD LPAREN expression RPAREN SEMICOLONexpression : expression PLUS expression\n                 | expression MINUS expression\n                 | expression TIMES expression\n                 | expression DIVIDE expressionexpression : expression GT expression\n                 | expression LT expression\n                 | expression GE expression\n                 | expression LE expression\n                 | expression EQ expression\n                 | expression NE expressionexpression : LPAREN expression RPARENexpression : INT_CONST\n                 | FLOAT_CONSTexpression : TRUE\n                 | FALSEexpression : STRING_CONSTexpression : IDexpression : MINUS expression %prec UMINUSexpression : CONSOLE DOT READLINE LPAREN RPARENexpression : INT DOT PARSE LPAREN expression RPARENexpression : expression AND expressionexpression : expression OR expressionexpression : NOT expressiondeclaration : type ID LPAREN params RPAREN LBRACE declarations RBRACEparams : params COMMA paramparams : paramparams : param : type IDexpression : ID LPAREN args RPARENargs : args COMMA expressionargs : expressionargs : declaration : ID LPAREN args RPAREN SEMICOLONdeclaration : RETURN expression SEMICOLONdeclaration : access_modifier CLASS ID LBRACE class_members RBRACEdeclaration : CLASS ID LBRACE class_members RBRACEaccess_modifier : PUBLIC\n                      | PRIVATE\n                      | PROTECTEDaccess_modifier : class_members : class_members class_memberclass_members : class_memberclass_members : class_member : access_modifier type ID SEMICOLONclass_member : access_modifier type ID ASSIGN expression SEMICOLONclass_member : type ID SEMICOLONclass_member : type ID ASSIGN expression SEMICOLONclass_member : access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACEclass_member : type ID LPAREN params RPAREN LBRACE declarations RBRACEclass_member : access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACEclass_member : VOID ID LPAREN params RPAREN LBRACE declarations RBRACEclass_member : access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACEclass_member : ID LPAREN params RPAREN LBRACE declarations RBRACE'
    
_lr_action_items = {'CONSOLE':([0,2,3,9,24,26,28,30,31,34,36,44,48,49,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,91,93,94,96,98,125,129,131,134,137,143,146,153,158,159,164,170,173,174,175,176,177,182,186,193,194,197,201,209,211,214,215,218,220,221,222,223,224,227,228,229,230,231,232,234,235,237,243,244,245,246,],[6,6,-3,42,-2,42,42,42,42,42,42,42,42,-6,-72,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-5,42,-71,6,42,42,-74,6,6,42,-73,42,6,-37,-38,-7,-11,42,42,-62,-8,42,6,6,6,42,6,6,6,6,6,42,6,6,6,6,6,6,-9,-12,6,6,6,6,-11,-10,]),'IF':([0,2,3,24,49,62,125,131,134,146,153,158,164,173,174,175,176,177,193,194,195,201,209,211,215,218,220,221,222,224,227,228,229,230,231,232,234,235,237,243,244,245,246,],[7,7,-3,-2,-6,-72,-5,-71,7,-74,7,7,-73,7,-37,-38,-7,-11,-62,-8,210,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-9,-12,7,7,7,7,-11,-10,]),'FOR':([0,2,3,24,49,62,125,131,134,146,153,158,164,173,174,175,176,177,193,194,201,209,211,215,218,220,221,222,224,227,228,229,230,231,232,234,235,237,243,244,245,246,],[8,8,-3,-2,-6,-72,-5,-71,8,-74,8,8,-73,8,-37,-38,-7,-11,-62,-8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-9,-12,8,8,8,8,-11,-10,]),'ID':([0,2,3,4,9,11,12,13,14,15,16,17,18,19,20,21,22,24,26,28,30,31,34,36,44,45,48,49,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,84,87,91,93,94,96,98,117,119,120,121,122,123,124,125,129,131,134,137,143,144,146,147,148,150,153,158,159,164,169,170,173,174,175,176,177,182,185,186,193,194,197,201,206,209,211,214,215,216,218,220,221,222,223,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[5,5,-3,25,35,46,-22,-23,-24,-25,-26,-27,-28,-29,-75,-76,-77,-2,35,35,35,59,35,35,35,83,35,-6,97,-22,-72,35,35,35,35,35,35,35,35,35,35,35,35,35,35,118,126,35,35,35,35,35,118,118,-80,149,151,152,-30,-5,35,-71,5,35,35,118,-74,-79,166,168,5,5,179,-73,-84,35,5,-37,-38,-7,-11,35,-82,35,-62,-8,35,5,-85,5,5,35,5,-83,5,5,5,5,35,5,-91,5,5,5,5,5,-9,-12,5,-90,5,-87,-89,-86,-88,5,5,-11,-10,]),'RETURN':([0,2,3,24,49,62,125,131,134,146,153,158,164,173,174,175,176,177,193,194,201,209,211,215,218,220,221,222,224,227,228,229,230,231,232,234,235,237,243,244,245,246,],[9,9,-3,-2,-6,-72,-5,-71,9,-74,9,9,-73,9,-37,-38,-7,-11,-62,-8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-9,-12,9,9,9,9,-11,-10,]),'CLASS':([0,2,3,10,20,21,22,24,49,62,125,131,134,146,153,158,164,173,174,175,176,177,193,194,201,209,211,215,218,220,221,222,224,227,228,229,230,231,232,234,235,237,243,244,245,246,],[11,11,-3,45,-75,-76,-77,-2,-6,-72,-5,-71,11,-74,11,11,-73,11,-37,-38,-7,-11,-62,-8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-9,-12,11,11,11,11,-11,-10,]),'INT':([0,2,3,9,20,21,22,24,26,28,30,31,34,36,44,47,48,49,50,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,84,91,93,94,96,98,111,117,119,120,121,125,128,129,131,134,137,143,144,145,146,147,153,158,159,164,167,169,170,171,172,173,174,175,176,177,182,185,186,187,189,193,194,197,201,206,209,211,214,215,216,218,220,221,222,223,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[12,12,-3,43,-75,-76,-77,-2,43,43,43,61,43,43,43,12,43,-6,12,-72,43,43,43,43,43,43,43,43,43,43,43,43,43,43,12,43,43,43,43,43,12,12,12,-80,12,-5,12,43,-71,12,43,43,12,12,-74,-79,12,12,43,-73,12,-84,43,12,12,12,-37,-38,-7,-11,43,-82,43,12,12,-62,-8,43,12,-85,12,12,43,12,-83,12,12,12,12,43,12,-91,12,12,12,12,12,-9,-12,12,-90,12,-87,-89,-86,-88,12,12,-11,-10,]),'FLOAT':([0,2,3,20,21,22,24,31,47,49,50,62,84,111,117,119,120,121,125,128,131,134,144,145,146,147,153,158,164,167,169,171,172,173,174,175,176,177,185,187,189,193,194,201,206,209,211,215,216,218,220,221,222,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[13,13,-3,-75,-76,-77,-2,13,13,-6,13,-72,13,13,13,13,-80,13,-5,13,-71,13,13,13,-74,-79,13,13,-73,13,-84,13,13,13,-37,-38,-7,-11,-82,13,13,-62,-8,13,-85,13,13,13,-83,13,13,13,13,13,-91,13,13,13,13,13,-9,-12,13,-90,13,-87,-89,-86,-88,13,13,-11,-10,]),'BOOL':([0,2,3,20,21,22,24,31,47,49,50,62,84,111,117,119,120,121,125,128,131,134,144,145,146,147,153,158,164,167,169,171,172,173,174,175,176,177,185,187,189,193,194,201,206,209,211,215,216,218,220,221,222,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[14,14,-3,-75,-76,-77,-2,14,14,-6,14,-72,14,14,14,14,-80,14,-5,14,-71,14,14,14,-74,-79,14,14,-73,14,-84,14,14,14,-37,-38,-7,-11,-82,14,14,-62,-8,14,-85,14,14,14,-83,14,14,14,14,14,-91,14,14,14,14,14,-9,-12,14,-90,14,-87,-89,-86,-88,14,14,-11,-10,]),'STRING':([0,2,3,20,21,22,24,31,47,49,50,62,84,111,117,119,120,121,125,128,131,134,144,145,146,147,153,158,164,167,169,171,172,173,174,175,176,177,185,187,189,193,194,201,206,209,211,215,216,218,220,221,222,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[15,15,-3,-75,-76,-77,-2,15,15,-6,15,-72,15,15,15,15,-80,15,-5,15,-71,15,15,15,-74,-79,15,15,-73,15,-84,15,15,15,-37,-38,-7,-11,-82,15,15,-62,-8,15,-85,15,15,15,-83,15,15,15,15,15,-91,15,15,15,15,15,-9,-12,15,-90,15,-87,-89,-86,-88,15,15,-11,-10,]),'CHAR':([0,2,3,20,21,22,24,31,47,49,50,62,84,111,117,119,120,121,125,128,131,134,144,145,146,147,153,158,164,167,169,171,172,173,174,175,176,177,185,187,189,193,194,201,206,209,211,215,216,218,220,221,222,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[16,16,-3,-75,-76,-77,-2,16,16,-6,16,-72,16,16,16,16,-80,16,-5,16,-71,16,16,16,-74,-79,16,16,-73,16,-84,16,16,16,-37,-38,-7,-11,-82,16,16,-62,-8,16,-85,16,16,16,-83,16,16,16,16,16,-91,16,16,16,16,16,-9,-12,16,-90,16,-87,-89,-86,-88,16,16,-11,-10,]),'VAR':([0,2,3,20,21,22,24,31,47,49,50,62,84,111,117,119,120,121,125,128,131,134,144,145,146,147,153,158,164,167,169,171,172,173,174,175,176,177,185,187,189,193,194,201,206,209,211,215,216,218,220,221,222,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[17,17,-3,-75,-76,-77,-2,17,17,-6,17,-72,17,17,17,17,-80,17,-5,17,-71,17,17,17,-74,-79,17,17,-73,17,-84,17,17,17,-37,-38,-7,-11,-82,17,17,-62,-8,17,-85,17,17,17,-83,17,17,17,17,17,-91,17,17,17,17,17,-9,-12,17,-90,17,-87,-89,-86,-88,17,17,-11,-10,]),'DOUBLE':([0,2,3,20,21,22,24,31,47,49,50,62,84,111,117,119,120,121,125,128,131,134,144,145,146,147,153,158,164,167,169,171,172,173,174,175,176,177,185,187,189,193,194,201,206,209,211,215,216,218,220,221,222,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[18,18,-3,-75,-76,-77,-2,18,18,-6,18,-72,18,18,18,18,-80,18,-5,18,-71,18,18,18,-74,-79,18,18,-73,18,-84,18,18,18,-37,-38,-7,-11,-82,18,18,-62,-8,18,-85,18,18,18,-83,18,18,18,18,18,-91,18,18,18,18,18,-9,-12,18,-90,18,-87,-89,-86,-88,18,18,-11,-10,]),'PUBLIC':([0,2,3,24,49,62,84,117,119,120,125,131,134,144,146,147,153,158,164,169,173,174,175,176,177,185,193,194,201,206,209,211,215,216,218,220,221,222,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[20,20,-3,-2,-6,-72,20,20,20,-80,-5,-71,20,20,-74,-79,20,20,-73,-84,20,-37,-38,-7,-11,-82,-62,-8,20,-85,20,20,20,-83,20,20,20,20,20,-91,20,20,20,20,20,-9,-12,20,-90,20,-87,-89,-86,-88,20,20,-11,-10,]),'PRIVATE':([0,2,3,24,49,62,84,117,119,120,125,131,134,144,146,147,153,158,164,169,173,174,175,176,177,185,193,194,201,206,209,211,215,216,218,220,221,222,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[21,21,-3,-2,-6,-72,21,21,21,-80,-5,-71,21,21,-74,-79,21,21,-73,-84,21,-37,-38,-7,-11,-82,-62,-8,21,-85,21,21,21,-83,21,21,21,21,21,-91,21,21,21,21,21,-9,-12,21,-90,21,-87,-89,-86,-88,21,21,-11,-10,]),'PROTECTED':([0,2,3,24,49,62,84,117,119,120,125,131,134,144,146,147,153,158,164,169,173,174,175,176,177,185,193,194,201,206,209,211,215,216,218,220,221,222,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[22,22,-3,-2,-6,-72,22,22,22,-80,-5,-71,22,22,-74,-79,22,22,-73,-84,22,-37,-38,-7,-11,-82,-62,-8,22,-85,22,22,22,-83,22,22,22,22,22,-91,22,22,22,22,22,-9,-12,22,-90,22,-87,-89,-86,-88,22,22,-11,-10,]),'LIST':([0,2,3,20,21,22,24,31,33,47,49,50,62,84,111,117,119,120,121,125,128,131,134,144,145,146,147,153,158,164,167,169,171,172,173,174,175,176,177,185,187,189,193,194,201,206,209,211,215,216,218,220,221,222,224,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[23,23,-3,-75,-76,-77,-2,23,75,23,-6,23,-72,23,23,23,23,-80,23,-5,23,-71,23,23,23,-74,-79,23,23,-73,23,-84,23,23,23,-37,-38,-7,-11,-82,23,23,-62,-8,23,-85,23,23,23,-83,23,23,23,23,23,-91,23,23,23,23,23,-9,-12,23,-90,23,-87,-89,-86,-88,23,23,-11,-10,]),'$end':([0,1,2,3,24,49,62,125,131,146,164,174,175,176,177,193,194,232,234,245,246,],[-4,0,-1,-3,-2,-6,-72,-5,-71,-74,-73,-37,-38,-7,-11,-62,-8,-9,-12,-11,-10,]),'RBRACE':([3,24,35,37,38,39,40,41,49,62,79,82,84,99,100,101,102,103,104,105,106,107,108,109,110,112,117,119,120,125,131,134,140,141,144,146,147,153,158,162,164,169,173,174,175,176,177,182,183,185,193,194,198,199,200,201,206,209,211,213,215,216,218,220,221,222,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,],[-3,-2,-55,-50,-51,-52,-53,-54,-6,-72,-56,-61,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-59,-60,-49,-81,146,-80,-5,-71,-4,-36,-67,164,-74,-79,-4,177,-57,-73,-84,193,-37,-38,-7,-11,-35,-58,-82,-62,-8,-31,213,-34,-4,-85,-4,-4,-32,226,-83,-4,-4,-4,232,234,-33,-91,-4,236,-4,238,239,-9,-12,241,-90,242,-87,-89,-86,-88,-4,245,-11,-10,]),'LBRACKET':([5,35,59,179,],[26,77,77,77,]),'DOT':([5,6,42,43,61,],[27,29,80,81,81,]),'LPAREN':([5,7,8,9,25,26,28,30,31,34,35,36,44,48,52,55,59,63,64,65,66,67,68,69,70,71,72,73,74,77,78,91,93,94,96,98,115,116,118,129,137,143,149,151,152,159,161,166,168,170,179,182,186,197,210,214,223,],[28,30,31,34,50,34,34,34,34,34,78,34,34,34,91,94,78,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,142,143,145,34,34,34,167,171,172,34,181,187,189,34,78,34,34,34,223,34,34,]),'NEW':([9,26,28,30,31,34,36,44,48,63,64,65,66,67,68,69,70,71,72,73,74,77,78,91,93,94,96,98,129,137,143,159,170,182,186,197,214,223,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'INT_CONST':([9,26,28,30,31,34,36,44,48,63,64,65,66,67,68,69,70,71,72,73,74,77,78,91,93,94,96,98,129,137,143,159,170,182,186,197,214,223,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'FLOAT_CONST':([9,26,28,30,31,34,36,44,48,63,64,65,66,67,68,69,70,71,72,73,74,77,78,91,93,94,96,98,129,137,143,159,170,182,186,197,214,223,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'TRUE':([9,26,28,30,31,34,36,44,48,63,64,65,66,67,68,69,70,71,72,73,74,77,78,91,93,94,96,98,129,137,143,159,170,182,186,197,214,223,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'FALSE':([9,26,28,30,31,34,36,44,48,63,64,65,66,67,68,69,70,71,72,73,74,77,78,91,93,94,96,98,129,137,143,159,170,182,186,197,214,223,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'STRING_CONST':([9,26,28,30,31,34,36,44,48,63,64,65,66,67,68,69,70,71,72,73,74,77,78,91,93,94,96,98,129,137,143,159,170,182,186,197,214,223,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'MINUS':([9,26,28,30,31,32,34,35,36,37,38,39,40,41,44,48,51,54,56,59,60,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,82,86,91,93,94,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,129,130,132,133,136,137,138,140,141,143,155,159,160,162,163,170,179,180,182,183,186,190,197,198,200,202,212,213,214,223,225,233,],[36,36,36,36,36,64,36,-55,36,-50,-51,-52,-53,-54,36,36,64,64,64,-55,64,36,36,36,36,36,36,36,36,36,36,36,36,64,36,36,-56,64,64,36,36,36,36,36,-39,-40,-41,-42,64,64,64,64,64,64,64,64,-49,64,36,64,64,64,64,36,64,-36,-67,36,64,36,64,-57,64,36,-55,64,36,-58,36,64,36,-31,64,64,64,-32,36,36,64,64,]),'NOT':([9,26,28,30,31,34,36,44,48,63,64,65,66,67,68,69,70,71,72,73,74,77,78,91,93,94,96,98,129,137,143,159,170,182,186,197,214,223,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'GT':([12,13,14,15,16,17,18,19,32,35,37,38,39,40,41,51,54,56,59,60,76,79,82,85,86,99,100,101,102,103,104,105,106,107,108,109,110,112,113,124,130,132,133,136,138,139,140,141,155,160,162,163,179,180,183,190,198,200,202,212,213,225,233,],[-22,-23,-24,-25,-26,-27,-28,-29,67,-55,-50,-51,-52,-53,-54,67,67,67,-55,67,67,-56,-61,124,67,-39,-40,-41,-42,67,67,67,67,67,67,-59,-60,-49,67,-30,67,67,67,67,67,161,-36,-67,67,67,-57,67,-55,67,-58,67,-31,67,67,67,-32,67,67,]),'VOID':([20,21,22,84,117,119,120,121,144,147,169,185,206,216,226,236,238,239,241,242,],[-75,-76,-77,123,123,123,-80,150,123,-79,-84,-82,-85,-83,-91,-90,-87,-89,-86,-88,]),'LT':([23,32,35,37,38,39,40,41,51,54,56,59,60,75,76,79,82,86,99,100,101,102,103,104,105,106,107,108,109,110,112,113,130,132,133,136,138,140,141,155,160,162,163,179,180,183,190,198,200,202,212,213,225,233,],[47,68,-55,-50,-51,-52,-53,-54,68,68,68,-55,68,111,68,-56,-61,68,-39,-40,-41,-42,68,68,68,68,68,68,-59,-60,-49,68,68,68,68,68,68,-36,-67,68,68,-57,68,-55,68,-58,68,-31,68,68,68,-32,68,68,]),'ASSIGN':([25,59,90,97,151,166,179,],[48,98,129,137,170,186,197,]),'SEMICOLON':([25,31,32,35,37,38,39,40,41,57,59,60,79,82,86,92,96,99,100,101,102,103,104,105,106,107,108,109,110,112,135,136,138,140,141,151,155,156,157,160,162,166,183,190,198,202,213,],[49,-16,62,-55,-50,-51,-52,-53,-54,96,-55,-15,-56,-61,125,131,-18,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-59,-60,-49,159,-17,-14,-36,-67,169,174,175,176,-13,-57,185,-58,206,-31,216,-32,]),'ADD':([27,],[52,]),'RPAREN':([28,35,37,38,39,40,41,50,53,54,56,76,78,79,82,88,89,99,100,101,102,103,104,105,106,107,108,109,110,112,114,126,130,132,133,140,141,142,145,154,159,162,163,165,167,171,172,178,179,180,181,183,187,188,189,191,192,198,203,205,212,213,233,],[-70,-55,-50,-51,-52,-53,-54,-65,92,-69,95,112,-70,-56,-61,127,-64,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-59,-60,-49,141,-66,156,-68,157,-36,-67,162,-65,-63,-21,-57,183,184,-65,-65,-65,196,-55,-20,198,-58,-65,204,-65,207,208,-31,217,219,-19,-32,240,]),'COMMA':([28,35,37,38,39,40,41,50,53,54,78,79,82,88,89,99,100,101,102,103,104,105,106,107,108,109,110,112,114,126,132,140,141,145,154,162,165,167,171,172,182,183,187,188,189,191,192,198,199,200,203,205,213,225,],[-70,-55,-50,-51,-52,-53,-54,-65,93,-69,-70,-56,-61,128,-64,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-59,-60,-49,93,-66,-68,-36,-67,-65,-63,-57,128,-65,-65,-65,-35,-58,-65,128,-65,128,128,-31,214,-34,128,128,-32,-33,]),'WRITELINE':([29,],[55,]),'PLUS':([32,35,37,38,39,40,41,51,54,56,59,60,76,79,82,86,99,100,101,102,103,104,105,106,107,108,109,110,112,113,130,132,133,136,138,140,141,155,160,162,163,179,180,183,190,198,200,202,212,213,225,233,],[63,-55,-50,-51,-52,-53,-54,63,63,63,-55,63,63,-56,63,63,-39,-40,-41,-42,63,63,63,63,63,63,63,63,-49,63,63,63,63,63,63,-36,-67,63,63,-57,63,-55,63,-58,63,-31,63,63,63,-32,63,63,]),'TIMES':([32,35,37,38,39,40,41,51,54,56,59,60,76,79,82,86,99,100,101,102,103,104,105,106,107,108,109,110,112,113,130,132,133,136,138,140,141,155,160,162,163,179,180,183,190,198,200,202,212,213,225,233,],[65,-55,-50,-51,-52,-53,-54,65,65,65,-55,65,65,-56,65,65,65,65,-41,-42,65,65,65,65,65,65,65,65,-49,65,65,65,65,65,65,-36,-67,65,65,-57,65,-55,65,-58,65,-31,65,65,65,-32,65,65,]),'DIVIDE':([32,35,37,38,39,40,41,51,54,56,59,60,76,79,82,86,99,100,101,102,103,104,105,106,107,108,109,110,112,113,130,132,133,136,138,140,141,155,160,162,163,179,180,183,190,198,200,202,212,213,225,233,],[66,-55,-50,-51,-52,-53,-54,66,66,66,-55,66,66,-56,66,66,66,66,-41,-42,66,66,66,66,66,66,66,66,-49,66,66,66,66,66,66,-36,-67,66,66,-57,66,-55,66,-58,66,-31,66,66,66,-32,66,66,]),'GE':([32,35,37,38,39,40,41,51,54,56,59,60,76,79,82,86,99,100,101,102,103,104,105,106,107,108,109,110,112,113,130,132,133,136,138,140,141,155,160,162,163,179,180,183,190,198,200,202,212,213,225,233,],[69,-55,-50,-51,-52,-53,-54,69,69,69,-55,69,69,-56,-61,69,-39,-40,-41,-42,69,69,69,69,69,69,-59,-60,-49,69,69,69,69,69,69,-36,-67,69,69,-57,69,-55,69,-58,69,-31,69,69,69,-32,69,69,]),'LE':([32,35,37,38,39,40,41,51,54,56,59,60,76,79,82,86,99,100,101,102,103,104,105,106,107,108,109,110,112,113,130,132,133,136,138,140,141,155,160,162,163,179,180,183,190,198,200,202,212,213,225,233,],[70,-55,-50,-51,-52,-53,-54,70,70,70,-55,70,70,-56,-61,70,-39,-40,-41,-42,70,70,70,70,70,70,-59,-60,-49,70,70,70,70,70,70,-36,-67,70,70,-57,70,-55,70,-58,70,-31,70,70,70,-32,70,70,]),'EQ':([32,35,37,38,39,40,41,51,54,56,59,60,76,79,82,86,99,100,101,102,103,104,105,106,107,108,109,110,112,113,130,132,133,136,138,140,141,155,160,162,163,179,180,183,190,198,200,202,212,213,225,233,],[71,-55,-50,-51,-52,-53,-54,71,71,71,-55,71,71,-56,-61,71,-39,-40,-41,-42,71,71,71,71,71,71,-59,-60,-49,71,71,71,71,71,71,-36,-67,71,71,-57,71,-55,71,-58,71,-31,71,71,71,-32,71,71,]),'NE':([32,35,37,38,39,40,41,51,54,56,59,60,76,79,82,86,99,100,101,102,103,104,105,106,107,108,109,110,112,113,130,132,133,136,138,140,141,155,160,162,163,179,180,183,190,198,200,202,212,213,225,233,],[72,-55,-50,-51,-52,-53,-54,72,72,72,-55,72,72,-56,-61,72,-39,-40,-41,-42,72,72,72,72,72,72,-59,-60,-49,72,72,72,72,72,72,-36,-67,72,72,-57,72,-55,72,-58,72,-31,72,72,72,-32,72,72,]),'AND':([32,35,37,38,39,40,41,51,54,56,59,60,76,79,82,86,99,100,101,102,103,104,105,106,107,108,109,110,112,113,130,132,133,136,138,140,141,155,160,162,163,179,180,183,190,198,200,202,212,213,225,233,],[73,-55,-50,-51,-52,-53,-54,73,73,73,-55,73,73,-56,-61,73,-39,-40,-41,-42,73,73,73,73,73,73,-59,73,-49,73,73,73,73,73,73,-36,-67,73,73,-57,73,-55,73,-58,73,-31,73,73,73,-32,73,73,]),'OR':([32,35,37,38,39,40,41,51,54,56,59,60,76,79,82,86,99,100,101,102,103,104,105,106,107,108,109,110,112,113,130,132,133,136,138,140,141,155,160,162,163,179,180,183,190,198,200,202,212,213,225,233,],[74,-55,-50,-51,-52,-53,-54,74,74,74,-55,74,74,-56,-61,74,-39,-40,-41,-42,74,74,74,74,74,74,-59,-60,-49,74,74,74,74,74,74,-36,-67,74,74,-57,74,-55,74,-58,74,-31,74,74,74,-32,74,74,]),'RBRACKET':([35,37,38,39,40,41,51,79,82,99,100,101,102,103,104,105,106,107,108,109,110,112,113,140,141,162,183,198,213,],[-55,-50,-51,-52,-53,-54,90,-56,-61,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-59,-60,-49,140,-36,-67,-57,-58,-31,-32,]),'LBRACE':([46,83,95,127,161,184,195,196,204,207,208,217,219,240,],[84,117,134,153,182,201,209,211,218,220,221,227,229,243,]),'READLINE':([80,],[115,]),'PARSE':([81,],[116,]),'ELSE':([177,245,],[195,195,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declarations':([0,134,153,201,209,211,218,220,221,227,229,243,],[2,158,173,215,222,224,228,230,231,235,237,244,]),'declaration':([0,2,134,153,158,173,201,209,211,215,218,220,221,222,224,227,228,229,230,231,235,237,243,244,],[3,24,3,3,24,24,3,3,3,24,3,3,3,24,24,3,24,3,24,24,24,24,3,24,]),'type':([0,2,31,47,50,84,111,117,119,121,128,134,144,145,153,158,167,171,172,173,187,189,201,209,211,215,218,220,221,222,224,227,228,229,230,231,235,237,243,244,],[4,4,58,85,87,122,139,122,122,148,87,4,122,87,4,4,87,87,87,4,87,87,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'access_modifier':([0,2,84,117,119,134,144,153,158,173,201,209,211,215,218,220,221,222,224,227,228,229,230,231,235,237,243,244,],[10,10,121,121,121,10,121,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'list_type':([0,2,31,47,50,84,111,117,119,121,128,134,144,145,153,158,167,171,172,173,187,189,201,209,211,215,218,220,221,222,224,227,228,229,230,231,235,237,243,244,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'expression':([9,26,28,30,31,34,36,44,48,63,64,65,66,67,68,69,70,71,72,73,74,77,78,91,93,94,96,98,129,137,143,159,170,182,186,197,214,223,],[32,51,54,56,60,76,79,82,86,99,100,101,102,103,104,105,106,107,108,109,110,113,54,130,132,133,136,138,155,160,163,180,190,200,202,212,225,233,]),'args':([28,78,],[53,114,]),'for_init':([31,],[57,]),'params':([50,145,167,171,172,187,189,],[88,165,188,191,192,203,205,]),'param':([50,128,145,167,171,172,187,189,],[89,154,89,89,89,89,89,89,]),'class_members':([84,117,],[119,144,]),'class_member':([84,117,119,144,],[120,120,147,147,]),'for_cond':([96,],[135,]),'for_iter':([159,],[178,]),'else_part':([177,245,],[194,246,]),'list_elements':([182,],[199,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations','program',1,'p_program','syntax.py',17),
  ('declarations -> declarations declaration','declarations',2,'p_declarations_multiple','syntax.py',23),
  ('declarations -> declaration','declarations',1,'p_declarations_single','syntax.py',27),
  ('declarations -> <empty>','declarations',0,'p_declarations_empty','syntax.py',31),
  ('declaration -> type ID ASSIGN expression SEMICOLON','declaration',5,'p_declaration_init','syntax.py',51),
  ('declaration -> type ID SEMICOLON','declaration',3,'p_declaration_noinit','syntax.py',56),
  ('declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON','declaration',7,'p_declaration_print','syntax.py',63),
  ('declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part','declaration',8,'p_declaration_if_else','syntax.py',70),
  ('else_part -> ELSE LBRACE declarations RBRACE','else_part',4,'p_else_part_else','syntax.py',75),
  ('else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part','else_part',9,'p_else_part_elseif','syntax.py',80),
  ('else_part -> <empty>','else_part',0,'p_else_part_empty','syntax.py',85),
  ('declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE','declaration',11,'p_declaration_for','syntax.py',91),
  ('for_init -> type ID ASSIGN expression','for_init',4,'p_for_init_decl','syntax.py',97),
  ('for_init -> ID ASSIGN expression','for_init',3,'p_for_init_assign','syntax.py',101),
  ('for_init -> expression','for_init',1,'p_for_init_expr','syntax.py',105),
  ('for_init -> <empty>','for_init',0,'p_for_init_empty','syntax.py',109),
  ('for_cond -> expression','for_cond',1,'p_for_cond_expr','syntax.py',114),
  ('for_cond -> <empty>','for_cond',0,'p_for_cond_empty','syntax.py',118),
  ('for_iter -> ID ASSIGN expression','for_iter',3,'p_for_iter_assign','syntax.py',123),
  ('for_iter -> expression','for_iter',1,'p_for_iter_expr','syntax.py',127),
  ('for_iter -> <empty>','for_iter',0,'p_for_iter_empty','syntax.py',131),
  ('type -> INT','type',1,'p_type','syntax.py',137),
  ('type -> FLOAT','type',1,'p_type','syntax.py',138),
  ('type -> BOOL','type',1,'p_type','syntax.py',139),
  ('type -> STRING','type',1,'p_type','syntax.py',140),
  ('type -> CHAR','type',1,'p_type','syntax.py',141),
  ('type -> VAR','type',1,'p_type','syntax.py',142),
  ('type -> DOUBLE','type',1,'p_type','syntax.py',143),
  ('type -> list_type','type',1,'p_type','syntax.py',144),
  ('list_type -> LIST LT type GT','list_type',4,'p_list_type','syntax.py',149),
  ('expression -> NEW LIST LT type GT LPAREN RPAREN','expression',7,'p_expression_new_list','syntax.py',154),
  ('expression -> NEW LIST LT type GT LBRACE list_elements RBRACE','expression',8,'p_expression_new_list_init','syntax.py',159),
  ('list_elements -> list_elements COMMA expression','list_elements',3,'p_list_elements_multiple','syntax.py',164),
  ('list_elements -> expression','list_elements',1,'p_list_elements_single','syntax.py',168),
  ('list_elements -> <empty>','list_elements',0,'p_list_elements_empty','syntax.py',172),
  ('expression -> ID LBRACKET expression RBRACKET','expression',4,'p_expression_list_access','syntax.py',177),
  ('declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON','declaration',7,'p_declaration_list_assign','syntax.py',182),
  ('declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON','declaration',7,'p_declaration_list_add','syntax.py',188),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','syntax.py',195),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','syntax.py',196),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','syntax.py',197),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','syntax.py',198),
  ('expression -> expression GT expression','expression',3,'p_expression_relop','syntax.py',202),
  ('expression -> expression LT expression','expression',3,'p_expression_relop','syntax.py',203),
  ('expression -> expression GE expression','expression',3,'p_expression_relop','syntax.py',204),
  ('expression -> expression LE expression','expression',3,'p_expression_relop','syntax.py',205),
  ('expression -> expression EQ expression','expression',3,'p_expression_relop','syntax.py',206),
  ('expression -> expression NE expression','expression',3,'p_expression_relop','syntax.py',207),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','syntax.py',211),
  ('expression -> INT_CONST','expression',1,'p_expression_number','syntax.py',215),
  ('expression -> FLOAT_CONST','expression',1,'p_expression_number','syntax.py',216),
  ('expression -> TRUE','expression',1,'p_expression_bool','syntax.py',220),
  ('expression -> FALSE','expression',1,'p_expression_bool','syntax.py',221),
  ('expression -> STRING_CONST','expression',1,'p_expression_string','syntax.py',225),
  ('expression -> ID','expression',1,'p_expression_id','syntax.py',229),
  ('expression -> MINUS expression','expression',2,'p_expression_negative','syntax.py',234),
  ('expression -> CONSOLE DOT READLINE LPAREN RPAREN','expression',5,'p_expression_readline','syntax.py',239),
  ('expression -> INT DOT PARSE LPAREN expression RPAREN','expression',6,'p_expression_parse_readline','syntax.py',244),
  ('expression -> expression AND expression','expression',3,'p_expression_and','syntax.py',249),
  ('expression -> expression OR expression','expression',3,'p_expression_or','syntax.py',254),
  ('expression -> NOT expression','expression',2,'p_expression_not','syntax.py',259),
  ('declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE','declaration',8,'p_declaration_function','syntax.py',265),
  ('params -> params COMMA param','params',3,'p_params_multiple','syntax.py',270),
  ('params -> param','params',1,'p_params_single','syntax.py',274),
  ('params -> <empty>','params',0,'p_params_empty','syntax.py',278),
  ('param -> type ID','param',2,'p_param','syntax.py',282),
  ('expression -> ID LPAREN args RPAREN','expression',4,'p_expression_func_call','syntax.py',287),
  ('args -> args COMMA expression','args',3,'p_args_multiple','syntax.py',293),
  ('args -> expression','args',1,'p_args_single','syntax.py',297),
  ('args -> <empty>','args',0,'p_args_empty','syntax.py',301),
  ('declaration -> ID LPAREN args RPAREN SEMICOLON','declaration',5,'p_declaration_func_call','syntax.py',306),
  ('declaration -> RETURN expression SEMICOLON','declaration',3,'p_declaration_return','syntax.py',313),
  ('declaration -> access_modifier CLASS ID LBRACE class_members RBRACE','declaration',6,'p_declaration_class','syntax.py',320),
  ('declaration -> CLASS ID LBRACE class_members RBRACE','declaration',5,'p_declaration_class_no_modifier','syntax.py',325),
  ('access_modifier -> PUBLIC','access_modifier',1,'p_access_modifier','syntax.py',332),
  ('access_modifier -> PRIVATE','access_modifier',1,'p_access_modifier','syntax.py',333),
  ('access_modifier -> PROTECTED','access_modifier',1,'p_access_modifier','syntax.py',334),
  ('access_modifier -> <empty>','access_modifier',0,'p_access_modifier_empty','syntax.py',337),
  ('class_members -> class_members class_member','class_members',2,'p_class_members_multiple','syntax.py',342),
  ('class_members -> class_member','class_members',1,'p_class_members_single','syntax.py',346),
  ('class_members -> <empty>','class_members',0,'p_class_members_empty','syntax.py',350),
  ('class_member -> access_modifier type ID SEMICOLON','class_member',4,'p_class_member_field','syntax.py',356),
  ('class_member -> access_modifier type ID ASSIGN expression SEMICOLON','class_member',6,'p_class_member_field_init','syntax.py',361),
  ('class_member -> type ID SEMICOLON','class_member',3,'p_class_member_field_no_modifier','syntax.py',366),
  ('class_member -> type ID ASSIGN expression SEMICOLON','class_member',5,'p_class_member_field_init_no_modifier','syntax.py',371),
  ('class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE','class_member',9,'p_class_member_method','syntax.py',378),
  ('class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE','class_member',8,'p_class_member_method_no_modifier','syntax.py',383),
  ('class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE','class_member',9,'p_class_member_void_method','syntax.py',390),
  ('class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE','class_member',8,'p_class_member_void_method_no_modifier','syntax.py',395),
  ('class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE','class_member',8,'p_class_member_constructor','syntax.py',402),
  ('class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE','class_member',7,'p_class_member_constructor_no_modifier','syntax.py',407),
]
