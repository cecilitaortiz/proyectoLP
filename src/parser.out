Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    AND
    CHAR
    CLASS
    COLON
    COMMA
    DOUBLE
    LBRACKET
    LIST
    MINUSEQUAL
    MINUSMINUS
    MOD
    NEW
    NOT
    OR
    PARSE
    PLUSEQUAL
    PLUSPLUS
    PRIVATE
    PROTECTED
    PUBLIC
    RBRACKET
    READLINE
    RETURN
    STRING
    USING
    VAR
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> declarations
Rule 2     declarations -> declarations declaration
Rule 3     declarations -> declaration
Rule 4     declarations -> <empty>
Rule 5     declaration -> type ID ASSIGN expression SEMICOLON
Rule 6     declaration -> type ID SEMICOLON
Rule 7     declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
Rule 8     declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
Rule 9     else_part -> ELSE LBRACE declarations RBRACE
Rule 10    else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
Rule 11    else_part -> <empty>
Rule 12    declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
Rule 13    for_init -> type ID ASSIGN expression
Rule 14    for_init -> ID ASSIGN expression
Rule 15    for_init -> expression
Rule 16    for_init -> <empty>
Rule 17    for_cond -> expression
Rule 18    for_cond -> <empty>
Rule 19    for_iter -> ID ASSIGN expression
Rule 20    for_iter -> expression
Rule 21    for_iter -> <empty>
Rule 22    type -> INT
Rule 23    type -> FLOAT
Rule 24    type -> BOOL
Rule 25    type -> STRINGTYPE
Rule 26    expression -> expression PLUS expression
Rule 27    expression -> expression MINUS expression
Rule 28    expression -> expression TIMES expression
Rule 29    expression -> expression DIVIDE expression
Rule 30    expression -> expression GT expression
Rule 31    expression -> expression LT expression
Rule 32    expression -> expression GE expression
Rule 33    expression -> expression LE expression
Rule 34    expression -> expression EQ expression
Rule 35    expression -> expression NE expression
Rule 36    expression -> LPAREN expression RPAREN
Rule 37    expression -> INT_CONST
Rule 38    expression -> FLOAT_CONST
Rule 39    expression -> TRUE
Rule 40    expression -> FALSE
Rule 41    expression -> STRING_CONST
Rule 42    expression -> ID

Terminals, with rules where they appear

ADD                  : 
AND                  : 
ASSIGN               : 5 13 14 19
BOOL                 : 24
CHAR                 : 
CLASS                : 
COLON                : 
COMMA                : 
CONSOLE              : 7
DIVIDE               : 29
DOT                  : 7
DOUBLE               : 
ELSE                 : 9 10
EQ                   : 34
FALSE                : 40
FLOAT                : 23
FLOAT_CONST          : 38
FOR                  : 12
GE                   : 32
GT                   : 30
ID                   : 5 6 13 14 19 42
IF                   : 8 10
INT                  : 22
INT_CONST            : 37
LBRACE               : 8 9 10 12
LBRACKET             : 
LE                   : 33
LIST                 : 
LPAREN               : 7 8 10 12 36
LT                   : 31
MINUS                : 27
MINUSEQUAL           : 
MINUSMINUS           : 
MOD                  : 
NE                   : 35
NEW                  : 
NOT                  : 
OR                   : 
PARSE                : 
PLUS                 : 26
PLUSEQUAL            : 
PLUSPLUS             : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RBRACE               : 8 9 10 12
RBRACKET             : 
READLINE             : 
RETURN               : 
RPAREN               : 7 8 10 12 36
SEMICOLON            : 5 6 7 12 12
STRING               : 
STRINGTYPE           : 25
STRING_CONST         : 41
TIMES                : 28
TRUE                 : 39
USING                : 
VAR                  : 
VOID                 : 
WRITELINE            : 7
error                : 

Nonterminals, with rules where they appear

declaration          : 2 3
declarations         : 1 2 8 9 10 12
else_part            : 8 10
expression           : 5 7 8 10 13 14 15 17 19 20 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36
for_cond             : 12
for_init             : 12
for_iter             : 12
program              : 0
type                 : 5 6 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declarations
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRINGTYPE

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
    $end            reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 5
    IF              shift and go to state 6
    FOR             shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    STRINGTYPE      shift and go to state 11

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRINGTYPE      [ reduce using rule 4 (declarations -> .) ]

    program                        shift and go to state 1
    declarations                   shift and go to state 2
    declaration                    shift and go to state 3
    type                           shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> declarations .
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRINGTYPE

    $end            reduce using rule 1 (program -> declarations .)
    CONSOLE         shift and go to state 5
    IF              shift and go to state 6
    FOR             shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    STRINGTYPE      shift and go to state 11

    declaration                    shift and go to state 12
    type                           shift and go to state 4

state 3

    (3) declarations -> declaration .

    CONSOLE         reduce using rule 3 (declarations -> declaration .)
    IF              reduce using rule 3 (declarations -> declaration .)
    FOR             reduce using rule 3 (declarations -> declaration .)
    INT             reduce using rule 3 (declarations -> declaration .)
    FLOAT           reduce using rule 3 (declarations -> declaration .)
    BOOL            reduce using rule 3 (declarations -> declaration .)
    STRINGTYPE      reduce using rule 3 (declarations -> declaration .)
    $end            reduce using rule 3 (declarations -> declaration .)
    RBRACE          reduce using rule 3 (declarations -> declaration .)


state 4

    (5) declaration -> type . ID ASSIGN expression SEMICOLON
    (6) declaration -> type . ID SEMICOLON

    ID              shift and go to state 13


state 5

    (7) declaration -> CONSOLE . DOT WRITELINE LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 14


state 6

    (8) declaration -> IF . LPAREN expression RPAREN LBRACE declarations RBRACE else_part

    LPAREN          shift and go to state 15


state 7

    (12) declaration -> FOR . LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE

    LPAREN          shift and go to state 16


state 8

    (22) type -> INT .

    ID              reduce using rule 22 (type -> INT .)


state 9

    (23) type -> FLOAT .

    ID              reduce using rule 23 (type -> FLOAT .)


state 10

    (24) type -> BOOL .

    ID              reduce using rule 24 (type -> BOOL .)


state 11

    (25) type -> STRINGTYPE .

    ID              reduce using rule 25 (type -> STRINGTYPE .)


state 12

    (2) declarations -> declarations declaration .

    CONSOLE         reduce using rule 2 (declarations -> declarations declaration .)
    IF              reduce using rule 2 (declarations -> declarations declaration .)
    FOR             reduce using rule 2 (declarations -> declarations declaration .)
    INT             reduce using rule 2 (declarations -> declarations declaration .)
    FLOAT           reduce using rule 2 (declarations -> declarations declaration .)
    BOOL            reduce using rule 2 (declarations -> declarations declaration .)
    STRINGTYPE      reduce using rule 2 (declarations -> declarations declaration .)
    $end            reduce using rule 2 (declarations -> declarations declaration .)
    RBRACE          reduce using rule 2 (declarations -> declarations declaration .)


state 13

    (5) declaration -> type ID . ASSIGN expression SEMICOLON
    (6) declaration -> type ID . SEMICOLON

    ASSIGN          shift and go to state 17
    SEMICOLON       shift and go to state 18


state 14

    (7) declaration -> CONSOLE DOT . WRITELINE LPAREN expression RPAREN SEMICOLON

    WRITELINE       shift and go to state 19


state 15

    (8) declaration -> IF LPAREN . expression RPAREN LBRACE declarations RBRACE else_part
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 21

state 16

    (12) declaration -> FOR LPAREN . for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (13) for_init -> . type ID ASSIGN expression
    (14) for_init -> . ID ASSIGN expression
    (15) for_init -> . expression
    (16) for_init -> .
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRINGTYPE
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    ID              shift and go to state 30
    SEMICOLON       reduce using rule 16 (for_init -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    STRINGTYPE      shift and go to state 11
    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26

    for_init                       shift and go to state 28
    type                           shift and go to state 29
    expression                     shift and go to state 31

state 17

    (5) declaration -> type ID ASSIGN . expression SEMICOLON
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 32

state 18

    (6) declaration -> type ID SEMICOLON .

    CONSOLE         reduce using rule 6 (declaration -> type ID SEMICOLON .)
    IF              reduce using rule 6 (declaration -> type ID SEMICOLON .)
    FOR             reduce using rule 6 (declaration -> type ID SEMICOLON .)
    INT             reduce using rule 6 (declaration -> type ID SEMICOLON .)
    FLOAT           reduce using rule 6 (declaration -> type ID SEMICOLON .)
    BOOL            reduce using rule 6 (declaration -> type ID SEMICOLON .)
    STRINGTYPE      reduce using rule 6 (declaration -> type ID SEMICOLON .)
    $end            reduce using rule 6 (declaration -> type ID SEMICOLON .)
    RBRACE          reduce using rule 6 (declaration -> type ID SEMICOLON .)


state 19

    (7) declaration -> CONSOLE DOT WRITELINE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 33


state 20

    (36) expression -> LPAREN . expression RPAREN
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 34

state 21

    (8) declaration -> IF LPAREN expression . RPAREN LBRACE declarations RBRACE else_part
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    RPAREN          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 22

    (37) expression -> INT_CONST .

    RPAREN          reduce using rule 37 (expression -> INT_CONST .)
    PLUS            reduce using rule 37 (expression -> INT_CONST .)
    MINUS           reduce using rule 37 (expression -> INT_CONST .)
    TIMES           reduce using rule 37 (expression -> INT_CONST .)
    DIVIDE          reduce using rule 37 (expression -> INT_CONST .)
    GT              reduce using rule 37 (expression -> INT_CONST .)
    LT              reduce using rule 37 (expression -> INT_CONST .)
    GE              reduce using rule 37 (expression -> INT_CONST .)
    LE              reduce using rule 37 (expression -> INT_CONST .)
    EQ              reduce using rule 37 (expression -> INT_CONST .)
    NE              reduce using rule 37 (expression -> INT_CONST .)
    SEMICOLON       reduce using rule 37 (expression -> INT_CONST .)


state 23

    (38) expression -> FLOAT_CONST .

    RPAREN          reduce using rule 38 (expression -> FLOAT_CONST .)
    PLUS            reduce using rule 38 (expression -> FLOAT_CONST .)
    MINUS           reduce using rule 38 (expression -> FLOAT_CONST .)
    TIMES           reduce using rule 38 (expression -> FLOAT_CONST .)
    DIVIDE          reduce using rule 38 (expression -> FLOAT_CONST .)
    GT              reduce using rule 38 (expression -> FLOAT_CONST .)
    LT              reduce using rule 38 (expression -> FLOAT_CONST .)
    GE              reduce using rule 38 (expression -> FLOAT_CONST .)
    LE              reduce using rule 38 (expression -> FLOAT_CONST .)
    EQ              reduce using rule 38 (expression -> FLOAT_CONST .)
    NE              reduce using rule 38 (expression -> FLOAT_CONST .)
    SEMICOLON       reduce using rule 38 (expression -> FLOAT_CONST .)


state 24

    (39) expression -> TRUE .

    RPAREN          reduce using rule 39 (expression -> TRUE .)
    PLUS            reduce using rule 39 (expression -> TRUE .)
    MINUS           reduce using rule 39 (expression -> TRUE .)
    TIMES           reduce using rule 39 (expression -> TRUE .)
    DIVIDE          reduce using rule 39 (expression -> TRUE .)
    GT              reduce using rule 39 (expression -> TRUE .)
    LT              reduce using rule 39 (expression -> TRUE .)
    GE              reduce using rule 39 (expression -> TRUE .)
    LE              reduce using rule 39 (expression -> TRUE .)
    EQ              reduce using rule 39 (expression -> TRUE .)
    NE              reduce using rule 39 (expression -> TRUE .)
    SEMICOLON       reduce using rule 39 (expression -> TRUE .)


state 25

    (40) expression -> FALSE .

    RPAREN          reduce using rule 40 (expression -> FALSE .)
    PLUS            reduce using rule 40 (expression -> FALSE .)
    MINUS           reduce using rule 40 (expression -> FALSE .)
    TIMES           reduce using rule 40 (expression -> FALSE .)
    DIVIDE          reduce using rule 40 (expression -> FALSE .)
    GT              reduce using rule 40 (expression -> FALSE .)
    LT              reduce using rule 40 (expression -> FALSE .)
    GE              reduce using rule 40 (expression -> FALSE .)
    LE              reduce using rule 40 (expression -> FALSE .)
    EQ              reduce using rule 40 (expression -> FALSE .)
    NE              reduce using rule 40 (expression -> FALSE .)
    SEMICOLON       reduce using rule 40 (expression -> FALSE .)


state 26

    (41) expression -> STRING_CONST .

    RPAREN          reduce using rule 41 (expression -> STRING_CONST .)
    PLUS            reduce using rule 41 (expression -> STRING_CONST .)
    MINUS           reduce using rule 41 (expression -> STRING_CONST .)
    TIMES           reduce using rule 41 (expression -> STRING_CONST .)
    DIVIDE          reduce using rule 41 (expression -> STRING_CONST .)
    GT              reduce using rule 41 (expression -> STRING_CONST .)
    LT              reduce using rule 41 (expression -> STRING_CONST .)
    GE              reduce using rule 41 (expression -> STRING_CONST .)
    LE              reduce using rule 41 (expression -> STRING_CONST .)
    EQ              reduce using rule 41 (expression -> STRING_CONST .)
    NE              reduce using rule 41 (expression -> STRING_CONST .)
    SEMICOLON       reduce using rule 41 (expression -> STRING_CONST .)


state 27

    (42) expression -> ID .

    RPAREN          reduce using rule 42 (expression -> ID .)
    PLUS            reduce using rule 42 (expression -> ID .)
    MINUS           reduce using rule 42 (expression -> ID .)
    TIMES           reduce using rule 42 (expression -> ID .)
    DIVIDE          reduce using rule 42 (expression -> ID .)
    GT              reduce using rule 42 (expression -> ID .)
    LT              reduce using rule 42 (expression -> ID .)
    GE              reduce using rule 42 (expression -> ID .)
    LE              reduce using rule 42 (expression -> ID .)
    EQ              reduce using rule 42 (expression -> ID .)
    NE              reduce using rule 42 (expression -> ID .)
    SEMICOLON       reduce using rule 42 (expression -> ID .)


state 28

    (12) declaration -> FOR LPAREN for_init . SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE

    SEMICOLON       shift and go to state 46


state 29

    (13) for_init -> type . ID ASSIGN expression

    ID              shift and go to state 47


state 30

    (14) for_init -> ID . ASSIGN expression
    (42) expression -> ID .

    ASSIGN          shift and go to state 48
    PLUS            reduce using rule 42 (expression -> ID .)
    MINUS           reduce using rule 42 (expression -> ID .)
    TIMES           reduce using rule 42 (expression -> ID .)
    DIVIDE          reduce using rule 42 (expression -> ID .)
    GT              reduce using rule 42 (expression -> ID .)
    LT              reduce using rule 42 (expression -> ID .)
    GE              reduce using rule 42 (expression -> ID .)
    LE              reduce using rule 42 (expression -> ID .)
    EQ              reduce using rule 42 (expression -> ID .)
    NE              reduce using rule 42 (expression -> ID .)
    SEMICOLON       reduce using rule 42 (expression -> ID .)


state 31

    (15) for_init -> expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    SEMICOLON       reduce using rule 15 (for_init -> expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 32

    (5) declaration -> type ID ASSIGN expression . SEMICOLON
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    SEMICOLON       shift and go to state 49
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 33

    (7) declaration -> CONSOLE DOT WRITELINE LPAREN . expression RPAREN SEMICOLON
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 50

state 34

    (36) expression -> LPAREN expression . RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    RPAREN          shift and go to state 51
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 35

    (8) declaration -> IF LPAREN expression RPAREN . LBRACE declarations RBRACE else_part

    LBRACE          shift and go to state 52


state 36

    (26) expression -> expression PLUS . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 53

state 37

    (27) expression -> expression MINUS . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 54

state 38

    (28) expression -> expression TIMES . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 55

state 39

    (29) expression -> expression DIVIDE . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 56

state 40

    (30) expression -> expression GT . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 57

state 41

    (31) expression -> expression LT . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 58

state 42

    (32) expression -> expression GE . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 59

state 43

    (33) expression -> expression LE . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 60

state 44

    (34) expression -> expression EQ . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 61

state 45

    (35) expression -> expression NE . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 62

state 46

    (12) declaration -> FOR LPAREN for_init SEMICOLON . for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (17) for_cond -> . expression
    (18) for_cond -> .
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    SEMICOLON       reduce using rule 18 (for_cond -> .)
    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    for_cond                       shift and go to state 63
    expression                     shift and go to state 64

state 47

    (13) for_init -> type ID . ASSIGN expression

    ASSIGN          shift and go to state 65


state 48

    (14) for_init -> ID ASSIGN . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 66

state 49

    (5) declaration -> type ID ASSIGN expression SEMICOLON .

    CONSOLE         reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    STRINGTYPE      reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)


state 50

    (7) declaration -> CONSOLE DOT WRITELINE LPAREN expression . RPAREN SEMICOLON
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    RPAREN          shift and go to state 67
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 51

    (36) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 36 (expression -> LPAREN expression RPAREN .)


state 52

    (8) declaration -> IF LPAREN expression RPAREN LBRACE . declarations RBRACE else_part
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRINGTYPE

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 5
    IF              shift and go to state 6
    FOR             shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    STRINGTYPE      shift and go to state 11

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRINGTYPE      [ reduce using rule 4 (declarations -> .) ]

    declarations                   shift and go to state 68
    declaration                    shift and go to state 3
    type                           shift and go to state 4

state 53

    (26) expression -> expression PLUS expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    RPAREN          reduce using rule 26 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 26 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 26 (expression -> expression PLUS expression .)
    GT              reduce using rule 26 (expression -> expression PLUS expression .)
    LT              reduce using rule 26 (expression -> expression PLUS expression .)
    GE              reduce using rule 26 (expression -> expression PLUS expression .)
    LE              reduce using rule 26 (expression -> expression PLUS expression .)
    EQ              reduce using rule 26 (expression -> expression PLUS expression .)
    NE              reduce using rule 26 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! GT              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 41 ]
  ! GE              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NE              [ shift and go to state 45 ]


state 54

    (27) expression -> expression MINUS expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    RPAREN          reduce using rule 27 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 27 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 27 (expression -> expression MINUS expression .)
    GT              reduce using rule 27 (expression -> expression MINUS expression .)
    LT              reduce using rule 27 (expression -> expression MINUS expression .)
    GE              reduce using rule 27 (expression -> expression MINUS expression .)
    LE              reduce using rule 27 (expression -> expression MINUS expression .)
    EQ              reduce using rule 27 (expression -> expression MINUS expression .)
    NE              reduce using rule 27 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! GT              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 41 ]
  ! GE              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NE              [ shift and go to state 45 ]


state 55

    (28) expression -> expression TIMES expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    RPAREN          reduce using rule 28 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 28 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 28 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 28 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 28 (expression -> expression TIMES expression .)
    GT              reduce using rule 28 (expression -> expression TIMES expression .)
    LT              reduce using rule 28 (expression -> expression TIMES expression .)
    GE              reduce using rule 28 (expression -> expression TIMES expression .)
    LE              reduce using rule 28 (expression -> expression TIMES expression .)
    EQ              reduce using rule 28 (expression -> expression TIMES expression .)
    NE              reduce using rule 28 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! TIMES           [ shift and go to state 38 ]
  ! DIVIDE          [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 41 ]
  ! GE              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NE              [ shift and go to state 45 ]


state 56

    (29) expression -> expression DIVIDE expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    RPAREN          reduce using rule 29 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 29 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 29 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 29 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 29 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 29 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 29 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 29 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 29 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 29 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 29 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! TIMES           [ shift and go to state 38 ]
  ! DIVIDE          [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 41 ]
  ! GE              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NE              [ shift and go to state 45 ]


state 57

    (30) expression -> expression GT expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    RPAREN          reduce using rule 30 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression GT expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! PLUS            [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 30 (expression -> expression GT expression .) ]


state 58

    (31) expression -> expression LT expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    RPAREN          reduce using rule 31 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression LT expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! PLUS            [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 31 (expression -> expression LT expression .) ]


state 59

    (32) expression -> expression GE expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    RPAREN          reduce using rule 32 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression GE expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! PLUS            [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! NE              [ reduce using rule 32 (expression -> expression GE expression .) ]


state 60

    (33) expression -> expression LE expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    RPAREN          reduce using rule 33 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression LE expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! PLUS            [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! NE              [ reduce using rule 33 (expression -> expression LE expression .) ]


state 61

    (34) expression -> expression EQ expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    RPAREN          reduce using rule 34 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression EQ expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! PLUS            [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 34 (expression -> expression EQ expression .) ]


state 62

    (35) expression -> expression NE expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    RPAREN          reduce using rule 35 (expression -> expression NE expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression NE expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! PLUS            [ reduce using rule 35 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 35 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 35 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 35 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 35 (expression -> expression NE expression .) ]
  ! EQ              [ reduce using rule 35 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 35 (expression -> expression NE expression .) ]


state 63

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond . SEMICOLON for_iter RPAREN LBRACE declarations RBRACE

    SEMICOLON       shift and go to state 69


state 64

    (17) for_cond -> expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    SEMICOLON       reduce using rule 17 (for_cond -> expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 65

    (13) for_init -> type ID ASSIGN . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 70

state 66

    (14) for_init -> ID ASSIGN expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    SEMICOLON       reduce using rule 14 (for_init -> ID ASSIGN expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 67

    (7) declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 71


state 68

    (8) declaration -> IF LPAREN expression RPAREN LBRACE declarations . RBRACE else_part
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRINGTYPE

    RBRACE          shift and go to state 72
    CONSOLE         shift and go to state 5
    IF              shift and go to state 6
    FOR             shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    STRINGTYPE      shift and go to state 11

    declaration                    shift and go to state 12
    type                           shift and go to state 4

state 69

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON . for_iter RPAREN LBRACE declarations RBRACE
    (19) for_iter -> . ID ASSIGN expression
    (20) for_iter -> . expression
    (21) for_iter -> .
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    ID              shift and go to state 74
    RPAREN          reduce using rule 21 (for_iter -> .)
    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26

    for_iter                       shift and go to state 73
    expression                     shift and go to state 75

state 70

    (13) for_init -> type ID ASSIGN expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    SEMICOLON       reduce using rule 13 (for_init -> type ID ASSIGN expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 71

    (7) declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .

    CONSOLE         reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    STRINGTYPE      reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)


state 72

    (8) declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE . else_part
    (9) else_part -> . ELSE LBRACE declarations RBRACE
    (10) else_part -> . ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (11) else_part -> .

    ELSE            shift and go to state 77
    CONSOLE         reduce using rule 11 (else_part -> .)
    IF              reduce using rule 11 (else_part -> .)
    FOR             reduce using rule 11 (else_part -> .)
    INT             reduce using rule 11 (else_part -> .)
    FLOAT           reduce using rule 11 (else_part -> .)
    BOOL            reduce using rule 11 (else_part -> .)
    STRINGTYPE      reduce using rule 11 (else_part -> .)
    $end            reduce using rule 11 (else_part -> .)
    RBRACE          reduce using rule 11 (else_part -> .)

    else_part                      shift and go to state 76

state 73

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter . RPAREN LBRACE declarations RBRACE

    RPAREN          shift and go to state 78


state 74

    (19) for_iter -> ID . ASSIGN expression
    (42) expression -> ID .

    ASSIGN          shift and go to state 79
    PLUS            reduce using rule 42 (expression -> ID .)
    MINUS           reduce using rule 42 (expression -> ID .)
    TIMES           reduce using rule 42 (expression -> ID .)
    DIVIDE          reduce using rule 42 (expression -> ID .)
    GT              reduce using rule 42 (expression -> ID .)
    LT              reduce using rule 42 (expression -> ID .)
    GE              reduce using rule 42 (expression -> ID .)
    LE              reduce using rule 42 (expression -> ID .)
    EQ              reduce using rule 42 (expression -> ID .)
    NE              reduce using rule 42 (expression -> ID .)
    RPAREN          reduce using rule 42 (expression -> ID .)


state 75

    (20) for_iter -> expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    RPAREN          reduce using rule 20 (for_iter -> expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 76

    (8) declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .

    CONSOLE         reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    IF              reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    FOR             reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    INT             reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    FLOAT           reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    BOOL            reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    STRINGTYPE      reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    $end            reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    RBRACE          reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)


state 77

    (9) else_part -> ELSE . LBRACE declarations RBRACE
    (10) else_part -> ELSE . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part

    LBRACE          shift and go to state 80
    IF              shift and go to state 81


state 78

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN . LBRACE declarations RBRACE

    LBRACE          shift and go to state 82


state 79

    (19) for_iter -> ID ASSIGN . expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 83

state 80

    (9) else_part -> ELSE LBRACE . declarations RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRINGTYPE

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 5
    IF              shift and go to state 6
    FOR             shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    STRINGTYPE      shift and go to state 11

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRINGTYPE      [ reduce using rule 4 (declarations -> .) ]

    declarations                   shift and go to state 84
    declaration                    shift and go to state 3
    type                           shift and go to state 4

state 81

    (10) else_part -> ELSE IF . LPAREN expression RPAREN LBRACE declarations RBRACE else_part

    LPAREN          shift and go to state 85


state 82

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE . declarations RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRINGTYPE

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 5
    IF              shift and go to state 6
    FOR             shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    STRINGTYPE      shift and go to state 11

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRINGTYPE      [ reduce using rule 4 (declarations -> .) ]

    declarations                   shift and go to state 86
    declaration                    shift and go to state 3
    type                           shift and go to state 4

state 83

    (19) for_iter -> ID ASSIGN expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    RPAREN          reduce using rule 19 (for_iter -> ID ASSIGN expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 84

    (9) else_part -> ELSE LBRACE declarations . RBRACE
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRINGTYPE

    RBRACE          shift and go to state 87
    CONSOLE         shift and go to state 5
    IF              shift and go to state 6
    FOR             shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    STRINGTYPE      shift and go to state 11

    declaration                    shift and go to state 12
    type                           shift and go to state 4

state 85

    (10) else_part -> ELSE IF LPAREN . expression RPAREN LBRACE declarations RBRACE else_part
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression EQ expression
    (35) expression -> . expression NE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . INT_CONST
    (38) expression -> . FLOAT_CONST
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . STRING_CONST
    (42) expression -> . ID

    LPAREN          shift and go to state 20
    INT_CONST       shift and go to state 22
    FLOAT_CONST     shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    STRING_CONST    shift and go to state 26
    ID              shift and go to state 27

    expression                     shift and go to state 88

state 86

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations . RBRACE
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRINGTYPE

    RBRACE          shift and go to state 89
    CONSOLE         shift and go to state 5
    IF              shift and go to state 6
    FOR             shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    STRINGTYPE      shift and go to state 11

    declaration                    shift and go to state 12
    type                           shift and go to state 4

state 87

    (9) else_part -> ELSE LBRACE declarations RBRACE .

    CONSOLE         reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    IF              reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    FOR             reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    INT             reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    FLOAT           reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    BOOL            reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    STRINGTYPE      reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    $end            reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    RBRACE          reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)


state 88

    (10) else_part -> ELSE IF LPAREN expression . RPAREN LBRACE declarations RBRACE else_part
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . EQ expression
    (35) expression -> expression . NE expression

    RPAREN          shift and go to state 90
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 89

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .

    CONSOLE         reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    IF              reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    FOR             reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    INT             reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    FLOAT           reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    BOOL            reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    STRINGTYPE      reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    $end            reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    RBRACE          reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)


state 90

    (10) else_part -> ELSE IF LPAREN expression RPAREN . LBRACE declarations RBRACE else_part

    LBRACE          shift and go to state 91


state 91

    (10) else_part -> ELSE IF LPAREN expression RPAREN LBRACE . declarations RBRACE else_part
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRINGTYPE

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 5
    IF              shift and go to state 6
    FOR             shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    STRINGTYPE      shift and go to state 11

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRINGTYPE      [ reduce using rule 4 (declarations -> .) ]

    declarations                   shift and go to state 92
    declaration                    shift and go to state 3
    type                           shift and go to state 4

state 92

    (10) else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations . RBRACE else_part
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRINGTYPE

    RBRACE          shift and go to state 93
    CONSOLE         shift and go to state 5
    IF              shift and go to state 6
    FOR             shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    STRINGTYPE      shift and go to state 11

    declaration                    shift and go to state 12
    type                           shift and go to state 4

state 93

    (10) else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE . else_part
    (9) else_part -> . ELSE LBRACE declarations RBRACE
    (10) else_part -> . ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (11) else_part -> .

    ELSE            shift and go to state 77
    CONSOLE         reduce using rule 11 (else_part -> .)
    IF              reduce using rule 11 (else_part -> .)
    FOR             reduce using rule 11 (else_part -> .)
    INT             reduce using rule 11 (else_part -> .)
    FLOAT           reduce using rule 11 (else_part -> .)
    BOOL            reduce using rule 11 (else_part -> .)
    STRINGTYPE      reduce using rule 11 (else_part -> .)
    $end            reduce using rule 11 (else_part -> .)
    RBRACE          reduce using rule 11 (else_part -> .)

    else_part                      shift and go to state 94

state 94

    (10) else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .

    CONSOLE         reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    IF              reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    FOR             reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    INT             reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    FLOAT           reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    BOOL            reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    STRINGTYPE      reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    $end            reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    RBRACE          reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CONSOLE in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 0 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 52 resolved as shift
WARNING: shift/reduce conflict for IF in state 52 resolved as shift
WARNING: shift/reduce conflict for FOR in state 52 resolved as shift
WARNING: shift/reduce conflict for INT in state 52 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 52 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 52 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for GT in state 57 resolved as shift
WARNING: shift/reduce conflict for LT in state 57 resolved as shift
WARNING: shift/reduce conflict for GE in state 57 resolved as shift
WARNING: shift/reduce conflict for LE in state 57 resolved as shift
WARNING: shift/reduce conflict for EQ in state 57 resolved as shift
WARNING: shift/reduce conflict for NE in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 58 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 58 resolved as shift
WARNING: shift/reduce conflict for GT in state 58 resolved as shift
WARNING: shift/reduce conflict for LT in state 58 resolved as shift
WARNING: shift/reduce conflict for GE in state 58 resolved as shift
WARNING: shift/reduce conflict for LE in state 58 resolved as shift
WARNING: shift/reduce conflict for EQ in state 58 resolved as shift
WARNING: shift/reduce conflict for NE in state 58 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for GT in state 59 resolved as shift
WARNING: shift/reduce conflict for LT in state 59 resolved as shift
WARNING: shift/reduce conflict for GE in state 59 resolved as shift
WARNING: shift/reduce conflict for LE in state 59 resolved as shift
WARNING: shift/reduce conflict for EQ in state 59 resolved as shift
WARNING: shift/reduce conflict for NE in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for GT in state 60 resolved as shift
WARNING: shift/reduce conflict for LT in state 60 resolved as shift
WARNING: shift/reduce conflict for GE in state 60 resolved as shift
WARNING: shift/reduce conflict for LE in state 60 resolved as shift
WARNING: shift/reduce conflict for EQ in state 60 resolved as shift
WARNING: shift/reduce conflict for NE in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for GT in state 61 resolved as shift
WARNING: shift/reduce conflict for LT in state 61 resolved as shift
WARNING: shift/reduce conflict for GE in state 61 resolved as shift
WARNING: shift/reduce conflict for LE in state 61 resolved as shift
WARNING: shift/reduce conflict for EQ in state 61 resolved as shift
WARNING: shift/reduce conflict for NE in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for GT in state 62 resolved as shift
WARNING: shift/reduce conflict for LT in state 62 resolved as shift
WARNING: shift/reduce conflict for GE in state 62 resolved as shift
WARNING: shift/reduce conflict for LE in state 62 resolved as shift
WARNING: shift/reduce conflict for EQ in state 62 resolved as shift
WARNING: shift/reduce conflict for NE in state 62 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 80 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 82 resolved as shift
WARNING: shift/reduce conflict for IF in state 82 resolved as shift
WARNING: shift/reduce conflict for FOR in state 82 resolved as shift
WARNING: shift/reduce conflict for INT in state 82 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 82 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 82 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 91 resolved as shift
WARNING: shift/reduce conflict for IF in state 91 resolved as shift
WARNING: shift/reduce conflict for FOR in state 91 resolved as shift
WARNING: shift/reduce conflict for INT in state 91 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 91 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 91 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 91 resolved as shift
