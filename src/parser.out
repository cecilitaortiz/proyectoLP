Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    MINUSEQUAL
    MINUSMINUS
    MOD
    PLUSEQUAL
    PLUSPLUS
    USING

Grammar

Rule 0     S' -> program
Rule 1     program -> declarations
Rule 2     declarations -> declarations declaration
Rule 3     declarations -> declaration
Rule 4     declarations -> <empty>
Rule 5     declaration -> type ID ASSIGN expression SEMICOLON
Rule 6     declaration -> type ID SEMICOLON
Rule 7     declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
Rule 8     declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
Rule 9     else_part -> ELSE LBRACE declarations RBRACE
Rule 10    else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
Rule 11    else_part -> <empty>
Rule 12    declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
Rule 13    for_init -> type ID ASSIGN expression
Rule 14    for_init -> ID ASSIGN expression
Rule 15    for_init -> expression
Rule 16    for_init -> <empty>
Rule 17    for_cond -> expression
Rule 18    for_cond -> <empty>
Rule 19    for_iter -> ID ASSIGN expression
Rule 20    for_iter -> expression
Rule 21    for_iter -> <empty>
Rule 22    type -> INT
Rule 23    type -> FLOAT
Rule 24    type -> BOOL
Rule 25    type -> STRING
Rule 26    type -> CHAR
Rule 27    type -> VAR
Rule 28    type -> DOUBLE
Rule 29    type -> list_type
Rule 30    list_type -> LIST LT type GT
Rule 31    expression -> NEW LIST LT type GT LPAREN RPAREN
Rule 32    expression -> NEW LIST LT type GT LBRACE list_elements RBRACE
Rule 33    list_elements -> list_elements COMMA expression
Rule 34    list_elements -> expression
Rule 35    list_elements -> <empty>
Rule 36    expression -> ID LBRACKET expression RBRACKET
Rule 37    declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
Rule 38    declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON
Rule 39    expression -> expression PLUS expression
Rule 40    expression -> expression MINUS expression
Rule 41    expression -> expression TIMES expression
Rule 42    expression -> expression DIVIDE expression
Rule 43    expression -> expression GT expression
Rule 44    expression -> expression LT expression
Rule 45    expression -> expression GE expression
Rule 46    expression -> expression LE expression
Rule 47    expression -> expression EQ expression
Rule 48    expression -> expression NE expression
Rule 49    expression -> LPAREN expression RPAREN
Rule 50    expression -> INT_CONST
Rule 51    expression -> FLOAT_CONST
Rule 52    expression -> TRUE
Rule 53    expression -> FALSE
Rule 54    expression -> STRING_CONST
Rule 55    expression -> ID
Rule 56    expression -> MINUS expression
Rule 57    expression -> CONSOLE DOT READLINE LPAREN RPAREN
Rule 58    expression -> INT DOT PARSE LPAREN expression RPAREN
Rule 59    expression -> expression AND expression
Rule 60    expression -> expression OR expression
Rule 61    expression -> NOT expression
Rule 62    declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE
Rule 63    params -> params COMMA param
Rule 64    params -> param
Rule 65    params -> <empty>
Rule 66    param -> type ID
Rule 67    expression -> ID LPAREN args RPAREN
Rule 68    args -> args COMMA expression
Rule 69    args -> expression
Rule 70    args -> <empty>
Rule 71    declaration -> ID LPAREN args RPAREN SEMICOLON
Rule 72    declaration -> RETURN expression SEMICOLON
Rule 73    declaration -> access_modifier CLASS ID LBRACE class_members RBRACE
Rule 74    declaration -> CLASS ID LBRACE class_members RBRACE
Rule 75    access_modifier -> PUBLIC
Rule 76    access_modifier -> PRIVATE
Rule 77    access_modifier -> PROTECTED
Rule 78    access_modifier -> <empty>
Rule 79    class_members -> class_members class_member
Rule 80    class_members -> class_member
Rule 81    class_members -> <empty>
Rule 82    class_member -> access_modifier type ID SEMICOLON
Rule 83    class_member -> access_modifier type ID ASSIGN expression SEMICOLON
Rule 84    class_member -> type ID SEMICOLON
Rule 85    class_member -> type ID ASSIGN expression SEMICOLON
Rule 86    class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE
Rule 87    class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE
Rule 88    class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE
Rule 89    class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE
Rule 90    class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE
Rule 91    class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE
Rule 92    declaration -> ID ASSIGN expression SEMICOLON

Terminals, with rules where they appear

ADD                  : 38
AND                  : 59
ASSIGN               : 5 13 14 19 37 83 85 92
BOOL                 : 24
CHAR                 : 26
CLASS                : 73 74
COLON                : 
COMMA                : 33 63 68
CONSOLE              : 7 57
DIVIDE               : 42
DOT                  : 7 38 57 58
DOUBLE               : 28
ELSE                 : 9 10
EQ                   : 47
FALSE                : 53
FLOAT                : 23
FLOAT_CONST          : 51
FOR                  : 12
GE                   : 45
GT                   : 30 31 32 43
ID                   : 5 6 13 14 19 36 37 38 55 62 66 67 71 73 74 82 83 84 85 86 87 88 89 90 91 92
IF                   : 8 10
INT                  : 22 58
INT_CONST            : 50
LBRACE               : 8 9 10 12 32 62 73 74 86 87 88 89 90 91
LBRACKET             : 36 37
LE                   : 46
LIST                 : 30 31 32
LPAREN               : 7 8 10 12 31 38 49 57 58 62 67 71 86 87 88 89 90 91
LT                   : 30 31 32 44
MINUS                : 40 56
MINUSEQUAL           : 
MINUSMINUS           : 
MOD                  : 
NE                   : 48
NEW                  : 31 32
NOT                  : 61
OR                   : 60
PARSE                : 58
PLUS                 : 39
PLUSEQUAL            : 
PLUSPLUS             : 
PRIVATE              : 76
PROTECTED            : 77
PUBLIC               : 75
RBRACE               : 8 9 10 12 32 62 73 74 86 87 88 89 90 91
RBRACKET             : 36 37
READLINE             : 57
RETURN               : 72
RPAREN               : 7 8 10 12 31 38 49 57 58 62 67 71 86 87 88 89 90 91
SEMICOLON            : 5 6 7 12 12 37 38 71 72 82 83 84 85 92
STRING               : 25
STRING_CONST         : 54
TIMES                : 41
TRUE                 : 52
USING                : 
VAR                  : 27
VOID                 : 88 89
WRITELINE            : 7
error                : 

Nonterminals, with rules where they appear

access_modifier      : 73 82 83 86 88 90
args                 : 67 68 71
class_member         : 79 80
class_members        : 73 74 79
declaration          : 2 3
declarations         : 1 2 8 9 10 12 62 86 87 88 89 90 91
else_part            : 8 10
expression           : 5 7 8 10 13 14 15 17 19 20 33 34 36 37 37 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 56 58 59 59 60 60 61 68 69 72 83 85 92
for_cond             : 12
for_init             : 12
for_iter             : 12
list_elements        : 32 33
list_type            : 29
param                : 63 64
params               : 62 63 86 87 88 89 90 91
program              : 0
type                 : 5 6 13 30 31 32 62 66 82 83 84 85 86 87

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declarations
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    $end            reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    program                        shift and go to state 1
    declarations                   shift and go to state 2
    declaration                    shift and go to state 3
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 1

    (0) S' -> program .



state 2

    (1) program -> declarations .
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    $end            reduce using rule 1 (program -> declarations .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declaration                    shift and go to state 24
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 3

    (3) declarations -> declaration .

    CONSOLE         reduce using rule 3 (declarations -> declaration .)
    IF              reduce using rule 3 (declarations -> declaration .)
    FOR             reduce using rule 3 (declarations -> declaration .)
    ID              reduce using rule 3 (declarations -> declaration .)
    RETURN          reduce using rule 3 (declarations -> declaration .)
    CLASS           reduce using rule 3 (declarations -> declaration .)
    INT             reduce using rule 3 (declarations -> declaration .)
    FLOAT           reduce using rule 3 (declarations -> declaration .)
    BOOL            reduce using rule 3 (declarations -> declaration .)
    STRING          reduce using rule 3 (declarations -> declaration .)
    CHAR            reduce using rule 3 (declarations -> declaration .)
    VAR             reduce using rule 3 (declarations -> declaration .)
    DOUBLE          reduce using rule 3 (declarations -> declaration .)
    PUBLIC          reduce using rule 3 (declarations -> declaration .)
    PRIVATE         reduce using rule 3 (declarations -> declaration .)
    PROTECTED       reduce using rule 3 (declarations -> declaration .)
    LIST            reduce using rule 3 (declarations -> declaration .)
    $end            reduce using rule 3 (declarations -> declaration .)
    RBRACE          reduce using rule 3 (declarations -> declaration .)


state 4

    (5) declaration -> type . ID ASSIGN expression SEMICOLON
    (6) declaration -> type . ID SEMICOLON
    (62) declaration -> type . ID LPAREN params RPAREN LBRACE declarations RBRACE

    ID              shift and go to state 25


state 5

    (37) declaration -> ID . LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> ID . DOT ADD LPAREN expression RPAREN SEMICOLON
    (71) declaration -> ID . LPAREN args RPAREN SEMICOLON
    (92) declaration -> ID . ASSIGN expression SEMICOLON

    LBRACKET        shift and go to state 26
    DOT             shift and go to state 28
    LPAREN          shift and go to state 29
    ASSIGN          shift and go to state 27


state 6

    (7) declaration -> CONSOLE . DOT WRITELINE LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 30


state 7

    (8) declaration -> IF . LPAREN expression RPAREN LBRACE declarations RBRACE else_part

    LPAREN          shift and go to state 31


state 8

    (12) declaration -> FOR . LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE

    LPAREN          shift and go to state 32


state 9

    (72) declaration -> RETURN . expression SEMICOLON
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 33

state 10

    (73) declaration -> access_modifier . CLASS ID LBRACE class_members RBRACE

    CLASS           shift and go to state 46


state 11

    (74) declaration -> CLASS . ID LBRACE class_members RBRACE

    ID              shift and go to state 47


state 12

    (22) type -> INT .

    ID              reduce using rule 22 (type -> INT .)
    GT              reduce using rule 22 (type -> INT .)


state 13

    (23) type -> FLOAT .

    ID              reduce using rule 23 (type -> FLOAT .)
    GT              reduce using rule 23 (type -> FLOAT .)


state 14

    (24) type -> BOOL .

    ID              reduce using rule 24 (type -> BOOL .)
    GT              reduce using rule 24 (type -> BOOL .)


state 15

    (25) type -> STRING .

    ID              reduce using rule 25 (type -> STRING .)
    GT              reduce using rule 25 (type -> STRING .)


state 16

    (26) type -> CHAR .

    ID              reduce using rule 26 (type -> CHAR .)
    GT              reduce using rule 26 (type -> CHAR .)


state 17

    (27) type -> VAR .

    ID              reduce using rule 27 (type -> VAR .)
    GT              reduce using rule 27 (type -> VAR .)


state 18

    (28) type -> DOUBLE .

    ID              reduce using rule 28 (type -> DOUBLE .)
    GT              reduce using rule 28 (type -> DOUBLE .)


state 19

    (29) type -> list_type .

    ID              reduce using rule 29 (type -> list_type .)
    GT              reduce using rule 29 (type -> list_type .)


state 20

    (75) access_modifier -> PUBLIC .

    CLASS           reduce using rule 75 (access_modifier -> PUBLIC .)
    VOID            reduce using rule 75 (access_modifier -> PUBLIC .)
    ID              reduce using rule 75 (access_modifier -> PUBLIC .)
    INT             reduce using rule 75 (access_modifier -> PUBLIC .)
    FLOAT           reduce using rule 75 (access_modifier -> PUBLIC .)
    BOOL            reduce using rule 75 (access_modifier -> PUBLIC .)
    STRING          reduce using rule 75 (access_modifier -> PUBLIC .)
    CHAR            reduce using rule 75 (access_modifier -> PUBLIC .)
    VAR             reduce using rule 75 (access_modifier -> PUBLIC .)
    DOUBLE          reduce using rule 75 (access_modifier -> PUBLIC .)
    LIST            reduce using rule 75 (access_modifier -> PUBLIC .)


state 21

    (76) access_modifier -> PRIVATE .

    CLASS           reduce using rule 76 (access_modifier -> PRIVATE .)
    VOID            reduce using rule 76 (access_modifier -> PRIVATE .)
    ID              reduce using rule 76 (access_modifier -> PRIVATE .)
    INT             reduce using rule 76 (access_modifier -> PRIVATE .)
    FLOAT           reduce using rule 76 (access_modifier -> PRIVATE .)
    BOOL            reduce using rule 76 (access_modifier -> PRIVATE .)
    STRING          reduce using rule 76 (access_modifier -> PRIVATE .)
    CHAR            reduce using rule 76 (access_modifier -> PRIVATE .)
    VAR             reduce using rule 76 (access_modifier -> PRIVATE .)
    DOUBLE          reduce using rule 76 (access_modifier -> PRIVATE .)
    LIST            reduce using rule 76 (access_modifier -> PRIVATE .)


state 22

    (77) access_modifier -> PROTECTED .

    CLASS           reduce using rule 77 (access_modifier -> PROTECTED .)
    VOID            reduce using rule 77 (access_modifier -> PROTECTED .)
    ID              reduce using rule 77 (access_modifier -> PROTECTED .)
    INT             reduce using rule 77 (access_modifier -> PROTECTED .)
    FLOAT           reduce using rule 77 (access_modifier -> PROTECTED .)
    BOOL            reduce using rule 77 (access_modifier -> PROTECTED .)
    STRING          reduce using rule 77 (access_modifier -> PROTECTED .)
    CHAR            reduce using rule 77 (access_modifier -> PROTECTED .)
    VAR             reduce using rule 77 (access_modifier -> PROTECTED .)
    DOUBLE          reduce using rule 77 (access_modifier -> PROTECTED .)
    LIST            reduce using rule 77 (access_modifier -> PROTECTED .)


state 23

    (30) list_type -> LIST . LT type GT

    LT              shift and go to state 48


state 24

    (2) declarations -> declarations declaration .

    CONSOLE         reduce using rule 2 (declarations -> declarations declaration .)
    IF              reduce using rule 2 (declarations -> declarations declaration .)
    FOR             reduce using rule 2 (declarations -> declarations declaration .)
    ID              reduce using rule 2 (declarations -> declarations declaration .)
    RETURN          reduce using rule 2 (declarations -> declarations declaration .)
    CLASS           reduce using rule 2 (declarations -> declarations declaration .)
    INT             reduce using rule 2 (declarations -> declarations declaration .)
    FLOAT           reduce using rule 2 (declarations -> declarations declaration .)
    BOOL            reduce using rule 2 (declarations -> declarations declaration .)
    STRING          reduce using rule 2 (declarations -> declarations declaration .)
    CHAR            reduce using rule 2 (declarations -> declarations declaration .)
    VAR             reduce using rule 2 (declarations -> declarations declaration .)
    DOUBLE          reduce using rule 2 (declarations -> declarations declaration .)
    PUBLIC          reduce using rule 2 (declarations -> declarations declaration .)
    PRIVATE         reduce using rule 2 (declarations -> declarations declaration .)
    PROTECTED       reduce using rule 2 (declarations -> declarations declaration .)
    LIST            reduce using rule 2 (declarations -> declarations declaration .)
    $end            reduce using rule 2 (declarations -> declarations declaration .)
    RBRACE          reduce using rule 2 (declarations -> declarations declaration .)


state 25

    (5) declaration -> type ID . ASSIGN expression SEMICOLON
    (6) declaration -> type ID . SEMICOLON
    (62) declaration -> type ID . LPAREN params RPAREN LBRACE declarations RBRACE

    ASSIGN          shift and go to state 49
    SEMICOLON       shift and go to state 50
    LPAREN          shift and go to state 51


state 26

    (37) declaration -> ID LBRACKET . expression RBRACKET ASSIGN expression SEMICOLON
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 52

state 27

    (92) declaration -> ID ASSIGN . expression SEMICOLON
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 53

state 28

    (38) declaration -> ID DOT . ADD LPAREN expression RPAREN SEMICOLON

    ADD             shift and go to state 54


state 29

    (71) declaration -> ID LPAREN . args RPAREN SEMICOLON
    (68) args -> . args COMMA expression
    (69) args -> . expression
    (70) args -> .
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    RPAREN          reduce using rule 70 (args -> .)
    COMMA           reduce using rule 70 (args -> .)
    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    args                           shift and go to state 55
    expression                     shift and go to state 56

state 30

    (7) declaration -> CONSOLE DOT . WRITELINE LPAREN expression RPAREN SEMICOLON

    WRITELINE       shift and go to state 57


state 31

    (8) declaration -> IF LPAREN . expression RPAREN LBRACE declarations RBRACE else_part
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 58

state 32

    (12) declaration -> FOR LPAREN . for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (13) for_init -> . type ID ASSIGN expression
    (14) for_init -> . ID ASSIGN expression
    (15) for_init -> . expression
    (16) for_init -> .
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN
    (30) list_type -> . LIST LT type GT

    ID              shift and go to state 61
    SEMICOLON       reduce using rule 16 (for_init -> .)
    INT             shift and go to state 63
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    NEW             shift and go to state 34
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    NOT             shift and go to state 45
    LIST            shift and go to state 23

    for_init                       shift and go to state 59
    type                           shift and go to state 60
    expression                     shift and go to state 62
    list_type                      shift and go to state 19

state 33

    (72) declaration -> RETURN expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       shift and go to state 64
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 34

    (31) expression -> NEW . LIST LT type GT LPAREN RPAREN
    (32) expression -> NEW . LIST LT type GT LBRACE list_elements RBRACE

    LIST            shift and go to state 77


state 35

    (49) expression -> LPAREN . expression RPAREN
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 78

state 36

    (36) expression -> ID . LBRACKET expression RBRACKET
    (55) expression -> ID .
    (67) expression -> ID . LPAREN args RPAREN

    LBRACKET        shift and go to state 79
    SEMICOLON       reduce using rule 55 (expression -> ID .)
    PLUS            reduce using rule 55 (expression -> ID .)
    MINUS           reduce using rule 55 (expression -> ID .)
    TIMES           reduce using rule 55 (expression -> ID .)
    DIVIDE          reduce using rule 55 (expression -> ID .)
    GT              reduce using rule 55 (expression -> ID .)
    LT              reduce using rule 55 (expression -> ID .)
    GE              reduce using rule 55 (expression -> ID .)
    LE              reduce using rule 55 (expression -> ID .)
    EQ              reduce using rule 55 (expression -> ID .)
    NE              reduce using rule 55 (expression -> ID .)
    AND             reduce using rule 55 (expression -> ID .)
    OR              reduce using rule 55 (expression -> ID .)
    RBRACKET        reduce using rule 55 (expression -> ID .)
    RPAREN          reduce using rule 55 (expression -> ID .)
    COMMA           reduce using rule 55 (expression -> ID .)
    RBRACE          reduce using rule 55 (expression -> ID .)
    LPAREN          shift and go to state 80


state 37

    (56) expression -> MINUS . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 81

state 38

    (50) expression -> INT_CONST .

    SEMICOLON       reduce using rule 50 (expression -> INT_CONST .)
    PLUS            reduce using rule 50 (expression -> INT_CONST .)
    MINUS           reduce using rule 50 (expression -> INT_CONST .)
    TIMES           reduce using rule 50 (expression -> INT_CONST .)
    DIVIDE          reduce using rule 50 (expression -> INT_CONST .)
    GT              reduce using rule 50 (expression -> INT_CONST .)
    LT              reduce using rule 50 (expression -> INT_CONST .)
    GE              reduce using rule 50 (expression -> INT_CONST .)
    LE              reduce using rule 50 (expression -> INT_CONST .)
    EQ              reduce using rule 50 (expression -> INT_CONST .)
    NE              reduce using rule 50 (expression -> INT_CONST .)
    AND             reduce using rule 50 (expression -> INT_CONST .)
    OR              reduce using rule 50 (expression -> INT_CONST .)
    RBRACKET        reduce using rule 50 (expression -> INT_CONST .)
    RPAREN          reduce using rule 50 (expression -> INT_CONST .)
    COMMA           reduce using rule 50 (expression -> INT_CONST .)
    RBRACE          reduce using rule 50 (expression -> INT_CONST .)


state 39

    (51) expression -> FLOAT_CONST .

    SEMICOLON       reduce using rule 51 (expression -> FLOAT_CONST .)
    PLUS            reduce using rule 51 (expression -> FLOAT_CONST .)
    MINUS           reduce using rule 51 (expression -> FLOAT_CONST .)
    TIMES           reduce using rule 51 (expression -> FLOAT_CONST .)
    DIVIDE          reduce using rule 51 (expression -> FLOAT_CONST .)
    GT              reduce using rule 51 (expression -> FLOAT_CONST .)
    LT              reduce using rule 51 (expression -> FLOAT_CONST .)
    GE              reduce using rule 51 (expression -> FLOAT_CONST .)
    LE              reduce using rule 51 (expression -> FLOAT_CONST .)
    EQ              reduce using rule 51 (expression -> FLOAT_CONST .)
    NE              reduce using rule 51 (expression -> FLOAT_CONST .)
    AND             reduce using rule 51 (expression -> FLOAT_CONST .)
    OR              reduce using rule 51 (expression -> FLOAT_CONST .)
    RBRACKET        reduce using rule 51 (expression -> FLOAT_CONST .)
    RPAREN          reduce using rule 51 (expression -> FLOAT_CONST .)
    COMMA           reduce using rule 51 (expression -> FLOAT_CONST .)
    RBRACE          reduce using rule 51 (expression -> FLOAT_CONST .)


state 40

    (52) expression -> TRUE .

    SEMICOLON       reduce using rule 52 (expression -> TRUE .)
    PLUS            reduce using rule 52 (expression -> TRUE .)
    MINUS           reduce using rule 52 (expression -> TRUE .)
    TIMES           reduce using rule 52 (expression -> TRUE .)
    DIVIDE          reduce using rule 52 (expression -> TRUE .)
    GT              reduce using rule 52 (expression -> TRUE .)
    LT              reduce using rule 52 (expression -> TRUE .)
    GE              reduce using rule 52 (expression -> TRUE .)
    LE              reduce using rule 52 (expression -> TRUE .)
    EQ              reduce using rule 52 (expression -> TRUE .)
    NE              reduce using rule 52 (expression -> TRUE .)
    AND             reduce using rule 52 (expression -> TRUE .)
    OR              reduce using rule 52 (expression -> TRUE .)
    RBRACKET        reduce using rule 52 (expression -> TRUE .)
    RPAREN          reduce using rule 52 (expression -> TRUE .)
    COMMA           reduce using rule 52 (expression -> TRUE .)
    RBRACE          reduce using rule 52 (expression -> TRUE .)


state 41

    (53) expression -> FALSE .

    SEMICOLON       reduce using rule 53 (expression -> FALSE .)
    PLUS            reduce using rule 53 (expression -> FALSE .)
    MINUS           reduce using rule 53 (expression -> FALSE .)
    TIMES           reduce using rule 53 (expression -> FALSE .)
    DIVIDE          reduce using rule 53 (expression -> FALSE .)
    GT              reduce using rule 53 (expression -> FALSE .)
    LT              reduce using rule 53 (expression -> FALSE .)
    GE              reduce using rule 53 (expression -> FALSE .)
    LE              reduce using rule 53 (expression -> FALSE .)
    EQ              reduce using rule 53 (expression -> FALSE .)
    NE              reduce using rule 53 (expression -> FALSE .)
    AND             reduce using rule 53 (expression -> FALSE .)
    OR              reduce using rule 53 (expression -> FALSE .)
    RBRACKET        reduce using rule 53 (expression -> FALSE .)
    RPAREN          reduce using rule 53 (expression -> FALSE .)
    COMMA           reduce using rule 53 (expression -> FALSE .)
    RBRACE          reduce using rule 53 (expression -> FALSE .)


state 42

    (54) expression -> STRING_CONST .

    SEMICOLON       reduce using rule 54 (expression -> STRING_CONST .)
    PLUS            reduce using rule 54 (expression -> STRING_CONST .)
    MINUS           reduce using rule 54 (expression -> STRING_CONST .)
    TIMES           reduce using rule 54 (expression -> STRING_CONST .)
    DIVIDE          reduce using rule 54 (expression -> STRING_CONST .)
    GT              reduce using rule 54 (expression -> STRING_CONST .)
    LT              reduce using rule 54 (expression -> STRING_CONST .)
    GE              reduce using rule 54 (expression -> STRING_CONST .)
    LE              reduce using rule 54 (expression -> STRING_CONST .)
    EQ              reduce using rule 54 (expression -> STRING_CONST .)
    NE              reduce using rule 54 (expression -> STRING_CONST .)
    AND             reduce using rule 54 (expression -> STRING_CONST .)
    OR              reduce using rule 54 (expression -> STRING_CONST .)
    RBRACKET        reduce using rule 54 (expression -> STRING_CONST .)
    RPAREN          reduce using rule 54 (expression -> STRING_CONST .)
    COMMA           reduce using rule 54 (expression -> STRING_CONST .)
    RBRACE          reduce using rule 54 (expression -> STRING_CONST .)


state 43

    (57) expression -> CONSOLE . DOT READLINE LPAREN RPAREN

    DOT             shift and go to state 82


state 44

    (58) expression -> INT . DOT PARSE LPAREN expression RPAREN

    DOT             shift and go to state 83


state 45

    (61) expression -> NOT . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 84

state 46

    (73) declaration -> access_modifier CLASS . ID LBRACE class_members RBRACE

    ID              shift and go to state 85


state 47

    (74) declaration -> CLASS ID . LBRACE class_members RBRACE

    LBRACE          shift and go to state 86


state 48

    (30) list_type -> LIST LT . type GT
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

    type                           shift and go to state 87
    list_type                      shift and go to state 19

state 49

    (5) declaration -> type ID ASSIGN . expression SEMICOLON
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 88

state 50

    (6) declaration -> type ID SEMICOLON .

    CONSOLE         reduce using rule 6 (declaration -> type ID SEMICOLON .)
    IF              reduce using rule 6 (declaration -> type ID SEMICOLON .)
    FOR             reduce using rule 6 (declaration -> type ID SEMICOLON .)
    ID              reduce using rule 6 (declaration -> type ID SEMICOLON .)
    RETURN          reduce using rule 6 (declaration -> type ID SEMICOLON .)
    CLASS           reduce using rule 6 (declaration -> type ID SEMICOLON .)
    INT             reduce using rule 6 (declaration -> type ID SEMICOLON .)
    FLOAT           reduce using rule 6 (declaration -> type ID SEMICOLON .)
    BOOL            reduce using rule 6 (declaration -> type ID SEMICOLON .)
    STRING          reduce using rule 6 (declaration -> type ID SEMICOLON .)
    CHAR            reduce using rule 6 (declaration -> type ID SEMICOLON .)
    VAR             reduce using rule 6 (declaration -> type ID SEMICOLON .)
    DOUBLE          reduce using rule 6 (declaration -> type ID SEMICOLON .)
    PUBLIC          reduce using rule 6 (declaration -> type ID SEMICOLON .)
    PRIVATE         reduce using rule 6 (declaration -> type ID SEMICOLON .)
    PROTECTED       reduce using rule 6 (declaration -> type ID SEMICOLON .)
    LIST            reduce using rule 6 (declaration -> type ID SEMICOLON .)
    $end            reduce using rule 6 (declaration -> type ID SEMICOLON .)
    RBRACE          reduce using rule 6 (declaration -> type ID SEMICOLON .)


state 51

    (62) declaration -> type ID LPAREN . params RPAREN LBRACE declarations RBRACE
    (63) params -> . params COMMA param
    (64) params -> . param
    (65) params -> .
    (66) param -> . type ID
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

    RPAREN          reduce using rule 65 (params -> .)
    COMMA           reduce using rule 65 (params -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

    type                           shift and go to state 89
    params                         shift and go to state 90
    param                          shift and go to state 91
    list_type                      shift and go to state 19

state 52

    (37) declaration -> ID LBRACKET expression . RBRACKET ASSIGN expression SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RBRACKET        shift and go to state 92
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 53

    (92) declaration -> ID ASSIGN expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       shift and go to state 93
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 54

    (38) declaration -> ID DOT ADD . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 94


state 55

    (71) declaration -> ID LPAREN args . RPAREN SEMICOLON
    (68) args -> args . COMMA expression

    RPAREN          shift and go to state 95
    COMMA           shift and go to state 96


state 56

    (69) args -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RPAREN          reduce using rule 69 (args -> expression .)
    COMMA           reduce using rule 69 (args -> expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 57

    (7) declaration -> CONSOLE DOT WRITELINE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 97


state 58

    (8) declaration -> IF LPAREN expression . RPAREN LBRACE declarations RBRACE else_part
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RPAREN          shift and go to state 98
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 59

    (12) declaration -> FOR LPAREN for_init . SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE

    SEMICOLON       shift and go to state 99


state 60

    (13) for_init -> type . ID ASSIGN expression

    ID              shift and go to state 100


state 61

    (14) for_init -> ID . ASSIGN expression
    (36) expression -> ID . LBRACKET expression RBRACKET
    (55) expression -> ID .
    (67) expression -> ID . LPAREN args RPAREN

    ASSIGN          shift and go to state 101
    LBRACKET        shift and go to state 79
    PLUS            reduce using rule 55 (expression -> ID .)
    MINUS           reduce using rule 55 (expression -> ID .)
    TIMES           reduce using rule 55 (expression -> ID .)
    DIVIDE          reduce using rule 55 (expression -> ID .)
    GT              reduce using rule 55 (expression -> ID .)
    LT              reduce using rule 55 (expression -> ID .)
    GE              reduce using rule 55 (expression -> ID .)
    LE              reduce using rule 55 (expression -> ID .)
    EQ              reduce using rule 55 (expression -> ID .)
    NE              reduce using rule 55 (expression -> ID .)
    AND             reduce using rule 55 (expression -> ID .)
    OR              reduce using rule 55 (expression -> ID .)
    SEMICOLON       reduce using rule 55 (expression -> ID .)
    LPAREN          shift and go to state 80


state 62

    (15) for_init -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 15 (for_init -> expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 63

    (22) type -> INT .
    (58) expression -> INT . DOT PARSE LPAREN expression RPAREN

    ID              reduce using rule 22 (type -> INT .)
    DOT             shift and go to state 83


state 64

    (72) declaration -> RETURN expression SEMICOLON .

    CONSOLE         reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    IF              reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    ID              reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    CLASS           reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    INT             reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    BOOL            reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    CHAR            reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    VAR             reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    DOUBLE          reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    PUBLIC          reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    PRIVATE         reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    PROTECTED       reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    LIST            reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    $end            reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 72 (declaration -> RETURN expression SEMICOLON .)


state 65

    (39) expression -> expression PLUS . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 102

state 66

    (40) expression -> expression MINUS . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 103

state 67

    (41) expression -> expression TIMES . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 104

state 68

    (42) expression -> expression DIVIDE . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 105

state 69

    (43) expression -> expression GT . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 106

state 70

    (44) expression -> expression LT . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 107

state 71

    (45) expression -> expression GE . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 108

state 72

    (46) expression -> expression LE . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 109

state 73

    (47) expression -> expression EQ . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 110

state 74

    (48) expression -> expression NE . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 111

state 75

    (59) expression -> expression AND . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 112

state 76

    (60) expression -> expression OR . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 113

state 77

    (31) expression -> NEW LIST . LT type GT LPAREN RPAREN
    (32) expression -> NEW LIST . LT type GT LBRACE list_elements RBRACE

    LT              shift and go to state 114


state 78

    (49) expression -> LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RPAREN          shift and go to state 115
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 79

    (36) expression -> ID LBRACKET . expression RBRACKET
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 116

state 80

    (67) expression -> ID LPAREN . args RPAREN
    (68) args -> . args COMMA expression
    (69) args -> . expression
    (70) args -> .
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    RPAREN          reduce using rule 70 (args -> .)
    COMMA           reduce using rule 70 (args -> .)
    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    args                           shift and go to state 117
    expression                     shift and go to state 56

state 81

    (56) expression -> MINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 56 (expression -> MINUS expression .)
    PLUS            reduce using rule 56 (expression -> MINUS expression .)
    MINUS           reduce using rule 56 (expression -> MINUS expression .)
    TIMES           reduce using rule 56 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 56 (expression -> MINUS expression .)
    GT              reduce using rule 56 (expression -> MINUS expression .)
    LT              reduce using rule 56 (expression -> MINUS expression .)
    GE              reduce using rule 56 (expression -> MINUS expression .)
    LE              reduce using rule 56 (expression -> MINUS expression .)
    EQ              reduce using rule 56 (expression -> MINUS expression .)
    NE              reduce using rule 56 (expression -> MINUS expression .)
    AND             reduce using rule 56 (expression -> MINUS expression .)
    OR              reduce using rule 56 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 56 (expression -> MINUS expression .)
    RPAREN          reduce using rule 56 (expression -> MINUS expression .)
    COMMA           reduce using rule 56 (expression -> MINUS expression .)
    RBRACE          reduce using rule 56 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! GT              [ shift and go to state 69 ]
  ! LT              [ shift and go to state 70 ]
  ! GE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! EQ              [ shift and go to state 73 ]
  ! NE              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]


state 82

    (57) expression -> CONSOLE DOT . READLINE LPAREN RPAREN

    READLINE        shift and go to state 118


state 83

    (58) expression -> INT DOT . PARSE LPAREN expression RPAREN

    PARSE           shift and go to state 119


state 84

    (61) expression -> NOT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 61 (expression -> NOT expression .)
    GT              reduce using rule 61 (expression -> NOT expression .)
    LT              reduce using rule 61 (expression -> NOT expression .)
    GE              reduce using rule 61 (expression -> NOT expression .)
    LE              reduce using rule 61 (expression -> NOT expression .)
    EQ              reduce using rule 61 (expression -> NOT expression .)
    NE              reduce using rule 61 (expression -> NOT expression .)
    AND             reduce using rule 61 (expression -> NOT expression .)
    OR              reduce using rule 61 (expression -> NOT expression .)
    RBRACKET        reduce using rule 61 (expression -> NOT expression .)
    RPAREN          reduce using rule 61 (expression -> NOT expression .)
    COMMA           reduce using rule 61 (expression -> NOT expression .)
    RBRACE          reduce using rule 61 (expression -> NOT expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68

  ! PLUS            [ reduce using rule 61 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 61 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> NOT expression .) ]
  ! GT              [ shift and go to state 69 ]
  ! LT              [ shift and go to state 70 ]
  ! GE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! EQ              [ shift and go to state 73 ]
  ! NE              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]


state 85

    (73) declaration -> access_modifier CLASS ID . LBRACE class_members RBRACE

    LBRACE          shift and go to state 120


state 86

    (74) declaration -> CLASS ID LBRACE . class_members RBRACE
    (79) class_members -> . class_members class_member
    (80) class_members -> . class_member
    (81) class_members -> .
    (82) class_member -> . access_modifier type ID SEMICOLON
    (83) class_member -> . access_modifier type ID ASSIGN expression SEMICOLON
    (84) class_member -> . type ID SEMICOLON
    (85) class_member -> . type ID ASSIGN expression SEMICOLON
    (86) class_member -> . access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (87) class_member -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (88) class_member -> . access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE
    (89) class_member -> . VOID ID LPAREN params RPAREN LBRACE declarations RBRACE
    (90) class_member -> . access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE
    (91) class_member -> . ID LPAREN params RPAREN LBRACE declarations RBRACE
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for BOOL resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for STRING resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for VAR resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for LIST resolved using rule 78 (access_modifier -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 81 (class_members -> .)
    VOID            shift and go to state 126
    ID              shift and go to state 121
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

  ! VOID            [ reduce using rule 81 (class_members -> .) ]
  ! ID              [ reduce using rule 81 (class_members -> .) ]
  ! PUBLIC          [ reduce using rule 81 (class_members -> .) ]
  ! PRIVATE         [ reduce using rule 81 (class_members -> .) ]
  ! PROTECTED       [ reduce using rule 81 (class_members -> .) ]
  ! INT             [ reduce using rule 81 (class_members -> .) ]
  ! FLOAT           [ reduce using rule 81 (class_members -> .) ]
  ! BOOL            [ reduce using rule 81 (class_members -> .) ]
  ! STRING          [ reduce using rule 81 (class_members -> .) ]
  ! CHAR            [ reduce using rule 81 (class_members -> .) ]
  ! VAR             [ reduce using rule 81 (class_members -> .) ]
  ! DOUBLE          [ reduce using rule 81 (class_members -> .) ]
  ! LIST            [ reduce using rule 81 (class_members -> .) ]
  ! VOID            [ reduce using rule 78 (access_modifier -> .) ]
  ! ID              [ reduce using rule 78 (access_modifier -> .) ]
  ! INT             [ reduce using rule 78 (access_modifier -> .) ]
  ! FLOAT           [ reduce using rule 78 (access_modifier -> .) ]
  ! BOOL            [ reduce using rule 78 (access_modifier -> .) ]
  ! STRING          [ reduce using rule 78 (access_modifier -> .) ]
  ! CHAR            [ reduce using rule 78 (access_modifier -> .) ]
  ! VAR             [ reduce using rule 78 (access_modifier -> .) ]
  ! DOUBLE          [ reduce using rule 78 (access_modifier -> .) ]
  ! LIST            [ reduce using rule 78 (access_modifier -> .) ]

    class_members                  shift and go to state 122
    class_member                   shift and go to state 123
    access_modifier                shift and go to state 124
    type                           shift and go to state 125
    list_type                      shift and go to state 19

state 87

    (30) list_type -> LIST LT type . GT

    GT              shift and go to state 127


state 88

    (5) declaration -> type ID ASSIGN expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       shift and go to state 128
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 89

    (66) param -> type . ID

    ID              shift and go to state 129


state 90

    (62) declaration -> type ID LPAREN params . RPAREN LBRACE declarations RBRACE
    (63) params -> params . COMMA param

    RPAREN          shift and go to state 130
    COMMA           shift and go to state 131


state 91

    (64) params -> param .

    RPAREN          reduce using rule 64 (params -> param .)
    COMMA           reduce using rule 64 (params -> param .)


state 92

    (37) declaration -> ID LBRACKET expression RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 132


state 93

    (92) declaration -> ID ASSIGN expression SEMICOLON .

    CONSOLE         reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    PUBLIC          reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    PRIVATE         reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    PROTECTED       reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    LIST            reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 92 (declaration -> ID ASSIGN expression SEMICOLON .)


state 94

    (38) declaration -> ID DOT ADD LPAREN . expression RPAREN SEMICOLON
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 133

state 95

    (71) declaration -> ID LPAREN args RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 134


state 96

    (68) args -> args COMMA . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 135

state 97

    (7) declaration -> CONSOLE DOT WRITELINE LPAREN . expression RPAREN SEMICOLON
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 136

state 98

    (8) declaration -> IF LPAREN expression RPAREN . LBRACE declarations RBRACE else_part

    LBRACE          shift and go to state 137


state 99

    (12) declaration -> FOR LPAREN for_init SEMICOLON . for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (17) for_cond -> . expression
    (18) for_cond -> .
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    SEMICOLON       reduce using rule 18 (for_cond -> .)
    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    for_cond                       shift and go to state 138
    expression                     shift and go to state 139

state 100

    (13) for_init -> type ID . ASSIGN expression

    ASSIGN          shift and go to state 140


state 101

    (14) for_init -> ID ASSIGN . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 141

state 102

    (39) expression -> expression PLUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 39 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 39 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 39 (expression -> expression PLUS expression .)
    GT              reduce using rule 39 (expression -> expression PLUS expression .)
    LT              reduce using rule 39 (expression -> expression PLUS expression .)
    GE              reduce using rule 39 (expression -> expression PLUS expression .)
    LE              reduce using rule 39 (expression -> expression PLUS expression .)
    EQ              reduce using rule 39 (expression -> expression PLUS expression .)
    NE              reduce using rule 39 (expression -> expression PLUS expression .)
    AND             reduce using rule 39 (expression -> expression PLUS expression .)
    OR              reduce using rule 39 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 39 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 39 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 39 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68

  ! TIMES           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! GT              [ shift and go to state 69 ]
  ! LT              [ shift and go to state 70 ]
  ! GE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! EQ              [ shift and go to state 73 ]
  ! NE              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]


state 103

    (40) expression -> expression MINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 40 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 40 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 40 (expression -> expression MINUS expression .)
    GT              reduce using rule 40 (expression -> expression MINUS expression .)
    LT              reduce using rule 40 (expression -> expression MINUS expression .)
    GE              reduce using rule 40 (expression -> expression MINUS expression .)
    LE              reduce using rule 40 (expression -> expression MINUS expression .)
    EQ              reduce using rule 40 (expression -> expression MINUS expression .)
    NE              reduce using rule 40 (expression -> expression MINUS expression .)
    AND             reduce using rule 40 (expression -> expression MINUS expression .)
    OR              reduce using rule 40 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 40 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 40 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 40 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68

  ! TIMES           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! GT              [ shift and go to state 69 ]
  ! LT              [ shift and go to state 70 ]
  ! GE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! EQ              [ shift and go to state 73 ]
  ! NE              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]


state 104

    (41) expression -> expression TIMES expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 41 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 41 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 41 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 41 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 41 (expression -> expression TIMES expression .)
    GT              reduce using rule 41 (expression -> expression TIMES expression .)
    LT              reduce using rule 41 (expression -> expression TIMES expression .)
    GE              reduce using rule 41 (expression -> expression TIMES expression .)
    LE              reduce using rule 41 (expression -> expression TIMES expression .)
    EQ              reduce using rule 41 (expression -> expression TIMES expression .)
    NE              reduce using rule 41 (expression -> expression TIMES expression .)
    AND             reduce using rule 41 (expression -> expression TIMES expression .)
    OR              reduce using rule 41 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 41 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 41 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 41 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 41 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! GT              [ shift and go to state 69 ]
  ! LT              [ shift and go to state 70 ]
  ! GE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! EQ              [ shift and go to state 73 ]
  ! NE              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]


state 105

    (42) expression -> expression DIVIDE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 42 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 42 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 42 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 42 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 42 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 42 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 42 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 42 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 42 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 42 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 42 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 42 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 42 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 42 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 42 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 42 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 42 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! GT              [ shift and go to state 69 ]
  ! LT              [ shift and go to state 70 ]
  ! GE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! EQ              [ shift and go to state 73 ]
  ! NE              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]


state 106

    (43) expression -> expression GT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 43 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 43 (expression -> expression GT expression .)
    RPAREN          reduce using rule 43 (expression -> expression GT expression .)
    COMMA           reduce using rule 43 (expression -> expression GT expression .)
    RBRACE          reduce using rule 43 (expression -> expression GT expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76

  ! PLUS            [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 43 (expression -> expression GT expression .) ]


state 107

    (44) expression -> expression LT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 44 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 44 (expression -> expression LT expression .)
    RPAREN          reduce using rule 44 (expression -> expression LT expression .)
    COMMA           reduce using rule 44 (expression -> expression LT expression .)
    RBRACE          reduce using rule 44 (expression -> expression LT expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76

  ! PLUS            [ reduce using rule 44 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 44 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 44 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 44 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 44 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 44 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 44 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 44 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression LT expression .) ]


state 108

    (45) expression -> expression GE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 45 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 45 (expression -> expression GE expression .)
    RPAREN          reduce using rule 45 (expression -> expression GE expression .)
    COMMA           reduce using rule 45 (expression -> expression GE expression .)
    RBRACE          reduce using rule 45 (expression -> expression GE expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76

  ! PLUS            [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! NE              [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! AND             [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression GE expression .) ]


state 109

    (46) expression -> expression LE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 46 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 46 (expression -> expression LE expression .)
    RPAREN          reduce using rule 46 (expression -> expression LE expression .)
    COMMA           reduce using rule 46 (expression -> expression LE expression .)
    RBRACE          reduce using rule 46 (expression -> expression LE expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76

  ! PLUS            [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! NE              [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression LE expression .) ]


state 110

    (47) expression -> expression EQ expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 47 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 47 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 47 (expression -> expression EQ expression .)
    COMMA           reduce using rule 47 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 47 (expression -> expression EQ expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76

  ! PLUS            [ reduce using rule 47 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 47 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 47 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 47 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 47 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 47 (expression -> expression EQ expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression EQ expression .) ]


state 111

    (48) expression -> expression NE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 48 (expression -> expression NE expression .)
    RBRACKET        reduce using rule 48 (expression -> expression NE expression .)
    RPAREN          reduce using rule 48 (expression -> expression NE expression .)
    COMMA           reduce using rule 48 (expression -> expression NE expression .)
    RBRACE          reduce using rule 48 (expression -> expression NE expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76

  ! PLUS            [ reduce using rule 48 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 48 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 48 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 48 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 48 (expression -> expression NE expression .) ]
  ! EQ              [ reduce using rule 48 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 48 (expression -> expression NE expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression NE expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression NE expression .) ]


state 112

    (59) expression -> expression AND expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 59 (expression -> expression AND expression .)
    GT              reduce using rule 59 (expression -> expression AND expression .)
    LT              reduce using rule 59 (expression -> expression AND expression .)
    GE              reduce using rule 59 (expression -> expression AND expression .)
    LE              reduce using rule 59 (expression -> expression AND expression .)
    EQ              reduce using rule 59 (expression -> expression AND expression .)
    NE              reduce using rule 59 (expression -> expression AND expression .)
    AND             reduce using rule 59 (expression -> expression AND expression .)
    OR              reduce using rule 59 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 59 (expression -> expression AND expression .)
    RPAREN          reduce using rule 59 (expression -> expression AND expression .)
    COMMA           reduce using rule 59 (expression -> expression AND expression .)
    RBRACE          reduce using rule 59 (expression -> expression AND expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68

  ! PLUS            [ reduce using rule 59 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression AND expression .) ]
  ! GT              [ shift and go to state 69 ]
  ! LT              [ shift and go to state 70 ]
  ! GE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! EQ              [ shift and go to state 73 ]
  ! NE              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]


state 113

    (60) expression -> expression OR expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 60 (expression -> expression OR expression .)
    GT              reduce using rule 60 (expression -> expression OR expression .)
    LT              reduce using rule 60 (expression -> expression OR expression .)
    GE              reduce using rule 60 (expression -> expression OR expression .)
    LE              reduce using rule 60 (expression -> expression OR expression .)
    EQ              reduce using rule 60 (expression -> expression OR expression .)
    NE              reduce using rule 60 (expression -> expression OR expression .)
    OR              reduce using rule 60 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 60 (expression -> expression OR expression .)
    RPAREN          reduce using rule 60 (expression -> expression OR expression .)
    COMMA           reduce using rule 60 (expression -> expression OR expression .)
    RBRACE          reduce using rule 60 (expression -> expression OR expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    AND             shift and go to state 75

  ! PLUS            [ reduce using rule 60 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 60 (expression -> expression OR expression .) ]
  ! GT              [ shift and go to state 69 ]
  ! LT              [ shift and go to state 70 ]
  ! GE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! EQ              [ shift and go to state 73 ]
  ! NE              [ shift and go to state 74 ]
  ! OR              [ shift and go to state 76 ]


state 114

    (31) expression -> NEW LIST LT . type GT LPAREN RPAREN
    (32) expression -> NEW LIST LT . type GT LBRACE list_elements RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

    type                           shift and go to state 142
    list_type                      shift and go to state 19

state 115

    (49) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)


state 116

    (36) expression -> ID LBRACKET expression . RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RBRACKET        shift and go to state 143
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 117

    (67) expression -> ID LPAREN args . RPAREN
    (68) args -> args . COMMA expression

    RPAREN          shift and go to state 144
    COMMA           shift and go to state 96


state 118

    (57) expression -> CONSOLE DOT READLINE . LPAREN RPAREN

    LPAREN          shift and go to state 145


state 119

    (58) expression -> INT DOT PARSE . LPAREN expression RPAREN

    LPAREN          shift and go to state 146


state 120

    (73) declaration -> access_modifier CLASS ID LBRACE . class_members RBRACE
    (79) class_members -> . class_members class_member
    (80) class_members -> . class_member
    (81) class_members -> .
    (82) class_member -> . access_modifier type ID SEMICOLON
    (83) class_member -> . access_modifier type ID ASSIGN expression SEMICOLON
    (84) class_member -> . type ID SEMICOLON
    (85) class_member -> . type ID ASSIGN expression SEMICOLON
    (86) class_member -> . access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (87) class_member -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (88) class_member -> . access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE
    (89) class_member -> . VOID ID LPAREN params RPAREN LBRACE declarations RBRACE
    (90) class_member -> . access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE
    (91) class_member -> . ID LPAREN params RPAREN LBRACE declarations RBRACE
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for BOOL resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for STRING resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for VAR resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 78 (access_modifier -> .)
  ! reduce/reduce conflict for LIST resolved using rule 78 (access_modifier -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 81 (class_members -> .)
    VOID            shift and go to state 126
    ID              shift and go to state 121
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

  ! VOID            [ reduce using rule 81 (class_members -> .) ]
  ! ID              [ reduce using rule 81 (class_members -> .) ]
  ! PUBLIC          [ reduce using rule 81 (class_members -> .) ]
  ! PRIVATE         [ reduce using rule 81 (class_members -> .) ]
  ! PROTECTED       [ reduce using rule 81 (class_members -> .) ]
  ! INT             [ reduce using rule 81 (class_members -> .) ]
  ! FLOAT           [ reduce using rule 81 (class_members -> .) ]
  ! BOOL            [ reduce using rule 81 (class_members -> .) ]
  ! STRING          [ reduce using rule 81 (class_members -> .) ]
  ! CHAR            [ reduce using rule 81 (class_members -> .) ]
  ! VAR             [ reduce using rule 81 (class_members -> .) ]
  ! DOUBLE          [ reduce using rule 81 (class_members -> .) ]
  ! LIST            [ reduce using rule 81 (class_members -> .) ]
  ! VOID            [ reduce using rule 78 (access_modifier -> .) ]
  ! ID              [ reduce using rule 78 (access_modifier -> .) ]
  ! INT             [ reduce using rule 78 (access_modifier -> .) ]
  ! FLOAT           [ reduce using rule 78 (access_modifier -> .) ]
  ! BOOL            [ reduce using rule 78 (access_modifier -> .) ]
  ! STRING          [ reduce using rule 78 (access_modifier -> .) ]
  ! CHAR            [ reduce using rule 78 (access_modifier -> .) ]
  ! VAR             [ reduce using rule 78 (access_modifier -> .) ]
  ! DOUBLE          [ reduce using rule 78 (access_modifier -> .) ]
  ! LIST            [ reduce using rule 78 (access_modifier -> .) ]

    access_modifier                shift and go to state 124
    class_members                  shift and go to state 147
    class_member                   shift and go to state 123
    type                           shift and go to state 125
    list_type                      shift and go to state 19

state 121

    (91) class_member -> ID . LPAREN params RPAREN LBRACE declarations RBRACE

    LPAREN          shift and go to state 148


state 122

    (74) declaration -> CLASS ID LBRACE class_members . RBRACE
    (79) class_members -> class_members . class_member
    (82) class_member -> . access_modifier type ID SEMICOLON
    (83) class_member -> . access_modifier type ID ASSIGN expression SEMICOLON
    (84) class_member -> . type ID SEMICOLON
    (85) class_member -> . type ID ASSIGN expression SEMICOLON
    (86) class_member -> . access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (87) class_member -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (88) class_member -> . access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE
    (89) class_member -> . VOID ID LPAREN params RPAREN LBRACE declarations RBRACE
    (90) class_member -> . access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE
    (91) class_member -> . ID LPAREN params RPAREN LBRACE declarations RBRACE
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          shift and go to state 149
    VOID            shift and go to state 126
    ID              shift and go to state 121
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

  ! VOID            [ reduce using rule 78 (access_modifier -> .) ]
  ! ID              [ reduce using rule 78 (access_modifier -> .) ]
  ! INT             [ reduce using rule 78 (access_modifier -> .) ]
  ! FLOAT           [ reduce using rule 78 (access_modifier -> .) ]
  ! BOOL            [ reduce using rule 78 (access_modifier -> .) ]
  ! STRING          [ reduce using rule 78 (access_modifier -> .) ]
  ! CHAR            [ reduce using rule 78 (access_modifier -> .) ]
  ! VAR             [ reduce using rule 78 (access_modifier -> .) ]
  ! DOUBLE          [ reduce using rule 78 (access_modifier -> .) ]
  ! LIST            [ reduce using rule 78 (access_modifier -> .) ]

    class_member                   shift and go to state 150
    access_modifier                shift and go to state 124
    type                           shift and go to state 125
    list_type                      shift and go to state 19

state 123

    (80) class_members -> class_member .

    RBRACE          reduce using rule 80 (class_members -> class_member .)
    VOID            reduce using rule 80 (class_members -> class_member .)
    ID              reduce using rule 80 (class_members -> class_member .)
    PUBLIC          reduce using rule 80 (class_members -> class_member .)
    PRIVATE         reduce using rule 80 (class_members -> class_member .)
    PROTECTED       reduce using rule 80 (class_members -> class_member .)
    INT             reduce using rule 80 (class_members -> class_member .)
    FLOAT           reduce using rule 80 (class_members -> class_member .)
    BOOL            reduce using rule 80 (class_members -> class_member .)
    STRING          reduce using rule 80 (class_members -> class_member .)
    CHAR            reduce using rule 80 (class_members -> class_member .)
    VAR             reduce using rule 80 (class_members -> class_member .)
    DOUBLE          reduce using rule 80 (class_members -> class_member .)
    LIST            reduce using rule 80 (class_members -> class_member .)


state 124

    (82) class_member -> access_modifier . type ID SEMICOLON
    (83) class_member -> access_modifier . type ID ASSIGN expression SEMICOLON
    (86) class_member -> access_modifier . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (88) class_member -> access_modifier . VOID ID LPAREN params RPAREN LBRACE declarations RBRACE
    (90) class_member -> access_modifier . ID LPAREN params RPAREN LBRACE declarations RBRACE
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

    VOID            shift and go to state 153
    ID              shift and go to state 152
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

    type                           shift and go to state 151
    list_type                      shift and go to state 19

state 125

    (84) class_member -> type . ID SEMICOLON
    (85) class_member -> type . ID ASSIGN expression SEMICOLON
    (87) class_member -> type . ID LPAREN params RPAREN LBRACE declarations RBRACE

    ID              shift and go to state 154


state 126

    (89) class_member -> VOID . ID LPAREN params RPAREN LBRACE declarations RBRACE

    ID              shift and go to state 155


state 127

    (30) list_type -> LIST LT type GT .

    ID              reduce using rule 30 (list_type -> LIST LT type GT .)
    GT              reduce using rule 30 (list_type -> LIST LT type GT .)


state 128

    (5) declaration -> type ID ASSIGN expression SEMICOLON .

    CONSOLE         reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    PUBLIC          reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    PRIVATE         reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    PROTECTED       reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    LIST            reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 5 (declaration -> type ID ASSIGN expression SEMICOLON .)


state 129

    (66) param -> type ID .

    RPAREN          reduce using rule 66 (param -> type ID .)
    COMMA           reduce using rule 66 (param -> type ID .)


state 130

    (62) declaration -> type ID LPAREN params RPAREN . LBRACE declarations RBRACE

    LBRACE          shift and go to state 156


state 131

    (63) params -> params COMMA . param
    (66) param -> . type ID
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

    param                          shift and go to state 157
    type                           shift and go to state 89
    list_type                      shift and go to state 19

state 132

    (37) declaration -> ID LBRACKET expression RBRACKET ASSIGN . expression SEMICOLON
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 158

state 133

    (38) declaration -> ID DOT ADD LPAREN expression . RPAREN SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RPAREN          shift and go to state 159
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 134

    (71) declaration -> ID LPAREN args RPAREN SEMICOLON .

    CONSOLE         reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    IF              reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    FOR             reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    ID              reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    CLASS           reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    INT             reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    FLOAT           reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    BOOL            reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    STRING          reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    CHAR            reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    VAR             reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    LIST            reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    $end            reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)
    RBRACE          reduce using rule 71 (declaration -> ID LPAREN args RPAREN SEMICOLON .)


state 135

    (68) args -> args COMMA expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RPAREN          reduce using rule 68 (args -> args COMMA expression .)
    COMMA           reduce using rule 68 (args -> args COMMA expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 136

    (7) declaration -> CONSOLE DOT WRITELINE LPAREN expression . RPAREN SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RPAREN          shift and go to state 160
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 137

    (8) declaration -> IF LPAREN expression RPAREN LBRACE . declarations RBRACE else_part
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declarations                   shift and go to state 161
    declaration                    shift and go to state 3
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 138

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond . SEMICOLON for_iter RPAREN LBRACE declarations RBRACE

    SEMICOLON       shift and go to state 162


state 139

    (17) for_cond -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 17 (for_cond -> expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 140

    (13) for_init -> type ID ASSIGN . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 163

state 141

    (14) for_init -> ID ASSIGN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 14 (for_init -> ID ASSIGN expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 142

    (31) expression -> NEW LIST LT type . GT LPAREN RPAREN
    (32) expression -> NEW LIST LT type . GT LBRACE list_elements RBRACE

    GT              shift and go to state 164


state 143

    (36) expression -> ID LBRACKET expression RBRACKET .

    SEMICOLON       reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 36 (expression -> ID LBRACKET expression RBRACKET .)


state 144

    (67) expression -> ID LPAREN args RPAREN .

    SEMICOLON       reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    PLUS            reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    MINUS           reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    TIMES           reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    DIVIDE          reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    GT              reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    LT              reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    GE              reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    LE              reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    EQ              reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    NE              reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    AND             reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    OR              reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    RBRACKET        reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    RPAREN          reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    COMMA           reduce using rule 67 (expression -> ID LPAREN args RPAREN .)
    RBRACE          reduce using rule 67 (expression -> ID LPAREN args RPAREN .)


state 145

    (57) expression -> CONSOLE DOT READLINE LPAREN . RPAREN

    RPAREN          shift and go to state 165


state 146

    (58) expression -> INT DOT PARSE LPAREN . expression RPAREN
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 166

state 147

    (73) declaration -> access_modifier CLASS ID LBRACE class_members . RBRACE
    (79) class_members -> class_members . class_member
    (82) class_member -> . access_modifier type ID SEMICOLON
    (83) class_member -> . access_modifier type ID ASSIGN expression SEMICOLON
    (84) class_member -> . type ID SEMICOLON
    (85) class_member -> . type ID ASSIGN expression SEMICOLON
    (86) class_member -> . access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (87) class_member -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (88) class_member -> . access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE
    (89) class_member -> . VOID ID LPAREN params RPAREN LBRACE declarations RBRACE
    (90) class_member -> . access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE
    (91) class_member -> . ID LPAREN params RPAREN LBRACE declarations RBRACE
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          shift and go to state 167
    VOID            shift and go to state 126
    ID              shift and go to state 121
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

  ! VOID            [ reduce using rule 78 (access_modifier -> .) ]
  ! ID              [ reduce using rule 78 (access_modifier -> .) ]
  ! INT             [ reduce using rule 78 (access_modifier -> .) ]
  ! FLOAT           [ reduce using rule 78 (access_modifier -> .) ]
  ! BOOL            [ reduce using rule 78 (access_modifier -> .) ]
  ! STRING          [ reduce using rule 78 (access_modifier -> .) ]
  ! CHAR            [ reduce using rule 78 (access_modifier -> .) ]
  ! VAR             [ reduce using rule 78 (access_modifier -> .) ]
  ! DOUBLE          [ reduce using rule 78 (access_modifier -> .) ]
  ! LIST            [ reduce using rule 78 (access_modifier -> .) ]

    access_modifier                shift and go to state 124
    class_member                   shift and go to state 150
    type                           shift and go to state 125
    list_type                      shift and go to state 19

state 148

    (91) class_member -> ID LPAREN . params RPAREN LBRACE declarations RBRACE
    (63) params -> . params COMMA param
    (64) params -> . param
    (65) params -> .
    (66) param -> . type ID
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

    RPAREN          reduce using rule 65 (params -> .)
    COMMA           reduce using rule 65 (params -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

    params                         shift and go to state 168
    param                          shift and go to state 91
    type                           shift and go to state 89
    list_type                      shift and go to state 19

state 149

    (74) declaration -> CLASS ID LBRACE class_members RBRACE .

    CONSOLE         reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    IF              reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    FOR             reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    ID              reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    RETURN          reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    CLASS           reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    INT             reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    FLOAT           reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    BOOL            reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    STRING          reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    CHAR            reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    VAR             reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    DOUBLE          reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    PUBLIC          reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    PRIVATE         reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    PROTECTED       reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    LIST            reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    $end            reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)
    RBRACE          reduce using rule 74 (declaration -> CLASS ID LBRACE class_members RBRACE .)


state 150

    (79) class_members -> class_members class_member .

    RBRACE          reduce using rule 79 (class_members -> class_members class_member .)
    VOID            reduce using rule 79 (class_members -> class_members class_member .)
    ID              reduce using rule 79 (class_members -> class_members class_member .)
    PUBLIC          reduce using rule 79 (class_members -> class_members class_member .)
    PRIVATE         reduce using rule 79 (class_members -> class_members class_member .)
    PROTECTED       reduce using rule 79 (class_members -> class_members class_member .)
    INT             reduce using rule 79 (class_members -> class_members class_member .)
    FLOAT           reduce using rule 79 (class_members -> class_members class_member .)
    BOOL            reduce using rule 79 (class_members -> class_members class_member .)
    STRING          reduce using rule 79 (class_members -> class_members class_member .)
    CHAR            reduce using rule 79 (class_members -> class_members class_member .)
    VAR             reduce using rule 79 (class_members -> class_members class_member .)
    DOUBLE          reduce using rule 79 (class_members -> class_members class_member .)
    LIST            reduce using rule 79 (class_members -> class_members class_member .)


state 151

    (82) class_member -> access_modifier type . ID SEMICOLON
    (83) class_member -> access_modifier type . ID ASSIGN expression SEMICOLON
    (86) class_member -> access_modifier type . ID LPAREN params RPAREN LBRACE declarations RBRACE

    ID              shift and go to state 169


state 152

    (90) class_member -> access_modifier ID . LPAREN params RPAREN LBRACE declarations RBRACE

    LPAREN          shift and go to state 170


state 153

    (88) class_member -> access_modifier VOID . ID LPAREN params RPAREN LBRACE declarations RBRACE

    ID              shift and go to state 171


state 154

    (84) class_member -> type ID . SEMICOLON
    (85) class_member -> type ID . ASSIGN expression SEMICOLON
    (87) class_member -> type ID . LPAREN params RPAREN LBRACE declarations RBRACE

    SEMICOLON       shift and go to state 172
    ASSIGN          shift and go to state 173
    LPAREN          shift and go to state 174


state 155

    (89) class_member -> VOID ID . LPAREN params RPAREN LBRACE declarations RBRACE

    LPAREN          shift and go to state 175


state 156

    (62) declaration -> type ID LPAREN params RPAREN LBRACE . declarations RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    type                           shift and go to state 4
    declarations                   shift and go to state 176
    declaration                    shift and go to state 3
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 157

    (63) params -> params COMMA param .

    RPAREN          reduce using rule 63 (params -> params COMMA param .)
    COMMA           reduce using rule 63 (params -> params COMMA param .)


state 158

    (37) declaration -> ID LBRACKET expression RBRACKET ASSIGN expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       shift and go to state 177
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 159

    (38) declaration -> ID DOT ADD LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 178


state 160

    (7) declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 179


state 161

    (8) declaration -> IF LPAREN expression RPAREN LBRACE declarations . RBRACE else_part
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          shift and go to state 180
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declaration                    shift and go to state 24
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 162

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON . for_iter RPAREN LBRACE declarations RBRACE
    (19) for_iter -> . ID ASSIGN expression
    (20) for_iter -> . expression
    (21) for_iter -> .
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    ID              shift and go to state 182
    RPAREN          reduce using rule 21 (for_iter -> .)
    NEW             shift and go to state 34
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    for_iter                       shift and go to state 181
    expression                     shift and go to state 183

state 163

    (13) for_init -> type ID ASSIGN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       reduce using rule 13 (for_init -> type ID ASSIGN expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 164

    (31) expression -> NEW LIST LT type GT . LPAREN RPAREN
    (32) expression -> NEW LIST LT type GT . LBRACE list_elements RBRACE

    LPAREN          shift and go to state 184
    LBRACE          shift and go to state 185


state 165

    (57) expression -> CONSOLE DOT READLINE LPAREN RPAREN .

    SEMICOLON       reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    PLUS            reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    MINUS           reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    TIMES           reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    DIVIDE          reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    GT              reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    LT              reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    GE              reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    LE              reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    EQ              reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    NE              reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    AND             reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    OR              reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    RBRACKET        reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    RPAREN          reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    COMMA           reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)
    RBRACE          reduce using rule 57 (expression -> CONSOLE DOT READLINE LPAREN RPAREN .)


state 166

    (58) expression -> INT DOT PARSE LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RPAREN          shift and go to state 186
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 167

    (73) declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .

    CONSOLE         reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    IF              reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    FOR             reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    ID              reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    RETURN          reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    CLASS           reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    INT             reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    FLOAT           reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    BOOL            reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    STRING          reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    CHAR            reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    VAR             reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    DOUBLE          reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    PUBLIC          reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    PRIVATE         reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    PROTECTED       reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    LIST            reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    $end            reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)
    RBRACE          reduce using rule 73 (declaration -> access_modifier CLASS ID LBRACE class_members RBRACE .)


state 168

    (91) class_member -> ID LPAREN params . RPAREN LBRACE declarations RBRACE
    (63) params -> params . COMMA param

    RPAREN          shift and go to state 187
    COMMA           shift and go to state 131


state 169

    (82) class_member -> access_modifier type ID . SEMICOLON
    (83) class_member -> access_modifier type ID . ASSIGN expression SEMICOLON
    (86) class_member -> access_modifier type ID . LPAREN params RPAREN LBRACE declarations RBRACE

    SEMICOLON       shift and go to state 188
    ASSIGN          shift and go to state 189
    LPAREN          shift and go to state 190


state 170

    (90) class_member -> access_modifier ID LPAREN . params RPAREN LBRACE declarations RBRACE
    (63) params -> . params COMMA param
    (64) params -> . param
    (65) params -> .
    (66) param -> . type ID
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

    RPAREN          reduce using rule 65 (params -> .)
    COMMA           reduce using rule 65 (params -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

    params                         shift and go to state 191
    param                          shift and go to state 91
    type                           shift and go to state 89
    list_type                      shift and go to state 19

state 171

    (88) class_member -> access_modifier VOID ID . LPAREN params RPAREN LBRACE declarations RBRACE

    LPAREN          shift and go to state 192


state 172

    (84) class_member -> type ID SEMICOLON .

    RBRACE          reduce using rule 84 (class_member -> type ID SEMICOLON .)
    VOID            reduce using rule 84 (class_member -> type ID SEMICOLON .)
    ID              reduce using rule 84 (class_member -> type ID SEMICOLON .)
    PUBLIC          reduce using rule 84 (class_member -> type ID SEMICOLON .)
    PRIVATE         reduce using rule 84 (class_member -> type ID SEMICOLON .)
    PROTECTED       reduce using rule 84 (class_member -> type ID SEMICOLON .)
    INT             reduce using rule 84 (class_member -> type ID SEMICOLON .)
    FLOAT           reduce using rule 84 (class_member -> type ID SEMICOLON .)
    BOOL            reduce using rule 84 (class_member -> type ID SEMICOLON .)
    STRING          reduce using rule 84 (class_member -> type ID SEMICOLON .)
    CHAR            reduce using rule 84 (class_member -> type ID SEMICOLON .)
    VAR             reduce using rule 84 (class_member -> type ID SEMICOLON .)
    DOUBLE          reduce using rule 84 (class_member -> type ID SEMICOLON .)
    LIST            reduce using rule 84 (class_member -> type ID SEMICOLON .)


state 173

    (85) class_member -> type ID ASSIGN . expression SEMICOLON
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 193

state 174

    (87) class_member -> type ID LPAREN . params RPAREN LBRACE declarations RBRACE
    (63) params -> . params COMMA param
    (64) params -> . param
    (65) params -> .
    (66) param -> . type ID
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

    RPAREN          reduce using rule 65 (params -> .)
    COMMA           reduce using rule 65 (params -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

    type                           shift and go to state 89
    params                         shift and go to state 194
    param                          shift and go to state 91
    list_type                      shift and go to state 19

state 175

    (89) class_member -> VOID ID LPAREN . params RPAREN LBRACE declarations RBRACE
    (63) params -> . params COMMA param
    (64) params -> . param
    (65) params -> .
    (66) param -> . type ID
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

    RPAREN          reduce using rule 65 (params -> .)
    COMMA           reduce using rule 65 (params -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

    params                         shift and go to state 195
    param                          shift and go to state 91
    type                           shift and go to state 89
    list_type                      shift and go to state 19

state 176

    (62) declaration -> type ID LPAREN params RPAREN LBRACE declarations . RBRACE
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          shift and go to state 196
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    type                           shift and go to state 4
    declaration                    shift and go to state 24
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 177

    (37) declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .

    CONSOLE         reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    ID              reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    INT             reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    PUBLIC          reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    PRIVATE         reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    PROTECTED       reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    LIST            reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    $end            reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 37 (declaration -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)


state 178

    (38) declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .

    CONSOLE         reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    CLASS           reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    LIST            reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 38 (declaration -> ID DOT ADD LPAREN expression RPAREN SEMICOLON .)


state 179

    (7) declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .

    CONSOLE         reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    CLASS           reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    LIST            reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 7 (declaration -> CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON .)


state 180

    (8) declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE . else_part
    (9) else_part -> . ELSE LBRACE declarations RBRACE
    (10) else_part -> . ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (11) else_part -> .

    ELSE            shift and go to state 198
    CONSOLE         reduce using rule 11 (else_part -> .)
    IF              reduce using rule 11 (else_part -> .)
    FOR             reduce using rule 11 (else_part -> .)
    ID              reduce using rule 11 (else_part -> .)
    RETURN          reduce using rule 11 (else_part -> .)
    CLASS           reduce using rule 11 (else_part -> .)
    INT             reduce using rule 11 (else_part -> .)
    FLOAT           reduce using rule 11 (else_part -> .)
    BOOL            reduce using rule 11 (else_part -> .)
    STRING          reduce using rule 11 (else_part -> .)
    CHAR            reduce using rule 11 (else_part -> .)
    VAR             reduce using rule 11 (else_part -> .)
    DOUBLE          reduce using rule 11 (else_part -> .)
    PUBLIC          reduce using rule 11 (else_part -> .)
    PRIVATE         reduce using rule 11 (else_part -> .)
    PROTECTED       reduce using rule 11 (else_part -> .)
    LIST            reduce using rule 11 (else_part -> .)
    $end            reduce using rule 11 (else_part -> .)
    RBRACE          reduce using rule 11 (else_part -> .)

    else_part                      shift and go to state 197

state 181

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter . RPAREN LBRACE declarations RBRACE

    RPAREN          shift and go to state 199


state 182

    (19) for_iter -> ID . ASSIGN expression
    (36) expression -> ID . LBRACKET expression RBRACKET
    (55) expression -> ID .
    (67) expression -> ID . LPAREN args RPAREN

    ASSIGN          shift and go to state 200
    LBRACKET        shift and go to state 79
    PLUS            reduce using rule 55 (expression -> ID .)
    MINUS           reduce using rule 55 (expression -> ID .)
    TIMES           reduce using rule 55 (expression -> ID .)
    DIVIDE          reduce using rule 55 (expression -> ID .)
    GT              reduce using rule 55 (expression -> ID .)
    LT              reduce using rule 55 (expression -> ID .)
    GE              reduce using rule 55 (expression -> ID .)
    LE              reduce using rule 55 (expression -> ID .)
    EQ              reduce using rule 55 (expression -> ID .)
    NE              reduce using rule 55 (expression -> ID .)
    AND             reduce using rule 55 (expression -> ID .)
    OR              reduce using rule 55 (expression -> ID .)
    RPAREN          reduce using rule 55 (expression -> ID .)
    LPAREN          shift and go to state 80


state 183

    (20) for_iter -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RPAREN          reduce using rule 20 (for_iter -> expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 184

    (31) expression -> NEW LIST LT type GT LPAREN . RPAREN

    RPAREN          shift and go to state 201


state 185

    (32) expression -> NEW LIST LT type GT LBRACE . list_elements RBRACE
    (33) list_elements -> . list_elements COMMA expression
    (34) list_elements -> . expression
    (35) list_elements -> .
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    RBRACE          reduce using rule 35 (list_elements -> .)
    COMMA           reduce using rule 35 (list_elements -> .)
    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    list_elements                  shift and go to state 202
    expression                     shift and go to state 203

state 186

    (58) expression -> INT DOT PARSE LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    PLUS            reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    MINUS           reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    TIMES           reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    GT              reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    LT              reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    GE              reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    LE              reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    EQ              reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    NE              reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    AND             reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    OR              reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    COMMA           reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)
    RBRACE          reduce using rule 58 (expression -> INT DOT PARSE LPAREN expression RPAREN .)


state 187

    (91) class_member -> ID LPAREN params RPAREN . LBRACE declarations RBRACE

    LBRACE          shift and go to state 204


state 188

    (82) class_member -> access_modifier type ID SEMICOLON .

    RBRACE          reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    VOID            reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    ID              reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    PUBLIC          reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    PRIVATE         reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    PROTECTED       reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    INT             reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    FLOAT           reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    BOOL            reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    STRING          reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    CHAR            reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    VAR             reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    DOUBLE          reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)
    LIST            reduce using rule 82 (class_member -> access_modifier type ID SEMICOLON .)


state 189

    (83) class_member -> access_modifier type ID ASSIGN . expression SEMICOLON
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 205

state 190

    (86) class_member -> access_modifier type ID LPAREN . params RPAREN LBRACE declarations RBRACE
    (63) params -> . params COMMA param
    (64) params -> . param
    (65) params -> .
    (66) param -> . type ID
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

    RPAREN          reduce using rule 65 (params -> .)
    COMMA           reduce using rule 65 (params -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

    type                           shift and go to state 89
    params                         shift and go to state 206
    param                          shift and go to state 91
    list_type                      shift and go to state 19

state 191

    (90) class_member -> access_modifier ID LPAREN params . RPAREN LBRACE declarations RBRACE
    (63) params -> params . COMMA param

    RPAREN          shift and go to state 207
    COMMA           shift and go to state 131


state 192

    (88) class_member -> access_modifier VOID ID LPAREN . params RPAREN LBRACE declarations RBRACE
    (63) params -> . params COMMA param
    (64) params -> . param
    (65) params -> .
    (66) param -> . type ID
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (30) list_type -> . LIST LT type GT

    RPAREN          reduce using rule 65 (params -> .)
    COMMA           reduce using rule 65 (params -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    LIST            shift and go to state 23

    params                         shift and go to state 208
    param                          shift and go to state 91
    type                           shift and go to state 89
    list_type                      shift and go to state 19

state 193

    (85) class_member -> type ID ASSIGN expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       shift and go to state 209
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 194

    (87) class_member -> type ID LPAREN params . RPAREN LBRACE declarations RBRACE
    (63) params -> params . COMMA param

    RPAREN          shift and go to state 210
    COMMA           shift and go to state 131


state 195

    (89) class_member -> VOID ID LPAREN params . RPAREN LBRACE declarations RBRACE
    (63) params -> params . COMMA param

    RPAREN          shift and go to state 211
    COMMA           shift and go to state 131


state 196

    (62) declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .

    CONSOLE         reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    IF              reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    FOR             reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    ID              reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    RETURN          reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    CLASS           reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    INT             reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    FLOAT           reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    BOOL            reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    STRING          reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    CHAR            reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VAR             reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    DOUBLE          reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PUBLIC          reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PRIVATE         reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PROTECTED       reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    LIST            reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    $end            reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    RBRACE          reduce using rule 62 (declaration -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)


state 197

    (8) declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .

    CONSOLE         reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    IF              reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    FOR             reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    ID              reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    RETURN          reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    CLASS           reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    INT             reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    FLOAT           reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    BOOL            reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    STRING          reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    CHAR            reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    VAR             reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    DOUBLE          reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    PUBLIC          reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    PRIVATE         reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    PROTECTED       reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    LIST            reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    $end            reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    RBRACE          reduce using rule 8 (declaration -> IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)


state 198

    (9) else_part -> ELSE . LBRACE declarations RBRACE
    (10) else_part -> ELSE . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part

    LBRACE          shift and go to state 212
    IF              shift and go to state 213


state 199

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN . LBRACE declarations RBRACE

    LBRACE          shift and go to state 214


state 200

    (19) for_iter -> ID ASSIGN . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 215

state 201

    (31) expression -> NEW LIST LT type GT LPAREN RPAREN .

    SEMICOLON       reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    PLUS            reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    MINUS           reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    TIMES           reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    DIVIDE          reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    GT              reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    LT              reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    GE              reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    LE              reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    EQ              reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    NE              reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    AND             reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    OR              reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    RBRACKET        reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    RPAREN          reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    COMMA           reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)
    RBRACE          reduce using rule 31 (expression -> NEW LIST LT type GT LPAREN RPAREN .)


state 202

    (32) expression -> NEW LIST LT type GT LBRACE list_elements . RBRACE
    (33) list_elements -> list_elements . COMMA expression

    RBRACE          shift and go to state 216
    COMMA           shift and go to state 217


state 203

    (34) list_elements -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RBRACE          reduce using rule 34 (list_elements -> expression .)
    COMMA           reduce using rule 34 (list_elements -> expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 204

    (91) class_member -> ID LPAREN params RPAREN LBRACE . declarations RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declarations                   shift and go to state 218
    declaration                    shift and go to state 3
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 205

    (83) class_member -> access_modifier type ID ASSIGN expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    SEMICOLON       shift and go to state 219
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 206

    (86) class_member -> access_modifier type ID LPAREN params . RPAREN LBRACE declarations RBRACE
    (63) params -> params . COMMA param

    RPAREN          shift and go to state 220
    COMMA           shift and go to state 131


state 207

    (90) class_member -> access_modifier ID LPAREN params RPAREN . LBRACE declarations RBRACE

    LBRACE          shift and go to state 221


state 208

    (88) class_member -> access_modifier VOID ID LPAREN params . RPAREN LBRACE declarations RBRACE
    (63) params -> params . COMMA param

    RPAREN          shift and go to state 222
    COMMA           shift and go to state 131


state 209

    (85) class_member -> type ID ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    PUBLIC          reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    PRIVATE         reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    PROTECTED       reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)
    LIST            reduce using rule 85 (class_member -> type ID ASSIGN expression SEMICOLON .)


state 210

    (87) class_member -> type ID LPAREN params RPAREN . LBRACE declarations RBRACE

    LBRACE          shift and go to state 223


state 211

    (89) class_member -> VOID ID LPAREN params RPAREN . LBRACE declarations RBRACE

    LBRACE          shift and go to state 224


state 212

    (9) else_part -> ELSE LBRACE . declarations RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declarations                   shift and go to state 225
    declaration                    shift and go to state 3
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 213

    (10) else_part -> ELSE IF . LPAREN expression RPAREN LBRACE declarations RBRACE else_part

    LPAREN          shift and go to state 226


state 214

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE . declarations RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declarations                   shift and go to state 227
    declaration                    shift and go to state 3
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 215

    (19) for_iter -> ID ASSIGN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RPAREN          reduce using rule 19 (for_iter -> ID ASSIGN expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 216

    (32) expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .

    SEMICOLON       reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    PLUS            reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    MINUS           reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    TIMES           reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    DIVIDE          reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    GT              reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    LT              reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    GE              reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    LE              reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    EQ              reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    NE              reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    AND             reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    OR              reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    RBRACKET        reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    RPAREN          reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    COMMA           reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)
    RBRACE          reduce using rule 32 (expression -> NEW LIST LT type GT LBRACE list_elements RBRACE .)


state 217

    (33) list_elements -> list_elements COMMA . expression
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 228

state 218

    (91) class_member -> ID LPAREN params RPAREN LBRACE declarations . RBRACE
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          shift and go to state 229
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declaration                    shift and go to state 24
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 219

    (83) class_member -> access_modifier type ID ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    PUBLIC          reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    PRIVATE         reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    PROTECTED       reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    CHAR            reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)
    LIST            reduce using rule 83 (class_member -> access_modifier type ID ASSIGN expression SEMICOLON .)


state 220

    (86) class_member -> access_modifier type ID LPAREN params RPAREN . LBRACE declarations RBRACE

    LBRACE          shift and go to state 230


state 221

    (90) class_member -> access_modifier ID LPAREN params RPAREN LBRACE . declarations RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    access_modifier                shift and go to state 10
    declarations                   shift and go to state 231
    declaration                    shift and go to state 3
    type                           shift and go to state 4
    list_type                      shift and go to state 19

state 222

    (88) class_member -> access_modifier VOID ID LPAREN params RPAREN . LBRACE declarations RBRACE

    LBRACE          shift and go to state 232


state 223

    (87) class_member -> type ID LPAREN params RPAREN LBRACE . declarations RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    type                           shift and go to state 4
    declarations                   shift and go to state 233
    declaration                    shift and go to state 3
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 224

    (89) class_member -> VOID ID LPAREN params RPAREN LBRACE . declarations RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declarations                   shift and go to state 234
    declaration                    shift and go to state 3
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 225

    (9) else_part -> ELSE LBRACE declarations . RBRACE
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          shift and go to state 235
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declaration                    shift and go to state 24
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 226

    (10) else_part -> ELSE IF LPAREN . expression RPAREN LBRACE declarations RBRACE else_part
    (31) expression -> . NEW LIST LT type GT LPAREN RPAREN
    (32) expression -> . NEW LIST LT type GT LBRACE list_elements RBRACE
    (36) expression -> . ID LBRACKET expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression LT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression EQ expression
    (48) expression -> . expression NE expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_CONST
    (51) expression -> . FLOAT_CONST
    (52) expression -> . TRUE
    (53) expression -> . FALSE
    (54) expression -> . STRING_CONST
    (55) expression -> . ID
    (56) expression -> . MINUS expression
    (57) expression -> . CONSOLE DOT READLINE LPAREN RPAREN
    (58) expression -> . INT DOT PARSE LPAREN expression RPAREN
    (59) expression -> . expression AND expression
    (60) expression -> . expression OR expression
    (61) expression -> . NOT expression
    (67) expression -> . ID LPAREN args RPAREN

    NEW             shift and go to state 34
    ID              shift and go to state 36
    LPAREN          shift and go to state 35
    INT_CONST       shift and go to state 38
    FLOAT_CONST     shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    STRING_CONST    shift and go to state 42
    MINUS           shift and go to state 37
    CONSOLE         shift and go to state 43
    INT             shift and go to state 44
    NOT             shift and go to state 45

    expression                     shift and go to state 236

state 227

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations . RBRACE
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          shift and go to state 237
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declaration                    shift and go to state 24
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 228

    (33) list_elements -> list_elements COMMA expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RBRACE          reduce using rule 33 (list_elements -> list_elements COMMA expression .)
    COMMA           reduce using rule 33 (list_elements -> list_elements COMMA expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 229

    (91) class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .

    RBRACE          reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VOID            reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    ID              reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PUBLIC          reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PRIVATE         reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PROTECTED       reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    INT             reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    FLOAT           reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    BOOL            reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    STRING          reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    CHAR            reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VAR             reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    DOUBLE          reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    LIST            reduce using rule 91 (class_member -> ID LPAREN params RPAREN LBRACE declarations RBRACE .)


state 230

    (86) class_member -> access_modifier type ID LPAREN params RPAREN LBRACE . declarations RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    access_modifier                shift and go to state 10
    type                           shift and go to state 4
    declarations                   shift and go to state 238
    declaration                    shift and go to state 3
    list_type                      shift and go to state 19

state 231

    (90) class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations . RBRACE
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          shift and go to state 239
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    access_modifier                shift and go to state 10
    declaration                    shift and go to state 24
    type                           shift and go to state 4
    list_type                      shift and go to state 19

state 232

    (88) class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE . declarations RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    access_modifier                shift and go to state 10
    declarations                   shift and go to state 240
    declaration                    shift and go to state 3
    type                           shift and go to state 4
    list_type                      shift and go to state 19

state 233

    (87) class_member -> type ID LPAREN params RPAREN LBRACE declarations . RBRACE
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          shift and go to state 241
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    type                           shift and go to state 4
    declaration                    shift and go to state 24
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 234

    (89) class_member -> VOID ID LPAREN params RPAREN LBRACE declarations . RBRACE
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          shift and go to state 242
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declaration                    shift and go to state 24
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 235

    (9) else_part -> ELSE LBRACE declarations RBRACE .

    CONSOLE         reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    IF              reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    FOR             reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    ID              reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    RETURN          reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    CLASS           reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    INT             reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    FLOAT           reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    BOOL            reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    STRING          reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    CHAR            reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    VAR             reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    DOUBLE          reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    PUBLIC          reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    PRIVATE         reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    PROTECTED       reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    LIST            reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    $end            reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)
    RBRACE          reduce using rule 9 (else_part -> ELSE LBRACE declarations RBRACE .)


state 236

    (10) else_part -> ELSE IF LPAREN expression . RPAREN LBRACE declarations RBRACE else_part
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . LT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . EQ expression
    (48) expression -> expression . NE expression
    (59) expression -> expression . AND expression
    (60) expression -> expression . OR expression

    RPAREN          shift and go to state 243
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 69
    LT              shift and go to state 70
    GE              shift and go to state 71
    LE              shift and go to state 72
    EQ              shift and go to state 73
    NE              shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 237

    (12) declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .

    CONSOLE         reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    IF              reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    FOR             reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    ID              reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    RETURN          reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    CLASS           reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    INT             reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    FLOAT           reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    BOOL            reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    STRING          reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    CHAR            reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    VAR             reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    DOUBLE          reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    PUBLIC          reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    PRIVATE         reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    PROTECTED       reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    LIST            reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    $end            reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)
    RBRACE          reduce using rule 12 (declaration -> FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE .)


state 238

    (86) class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations . RBRACE
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          shift and go to state 244
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    access_modifier                shift and go to state 10
    type                           shift and go to state 4
    declaration                    shift and go to state 24
    list_type                      shift and go to state 19

state 239

    (90) class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .

    RBRACE          reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VOID            reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    ID              reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PUBLIC          reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PRIVATE         reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PROTECTED       reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    INT             reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    FLOAT           reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    BOOL            reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    STRING          reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    CHAR            reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VAR             reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    DOUBLE          reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    LIST            reduce using rule 90 (class_member -> access_modifier ID LPAREN params RPAREN LBRACE declarations RBRACE .)


state 240

    (88) class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations . RBRACE
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          shift and go to state 245
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    access_modifier                shift and go to state 10
    declaration                    shift and go to state 24
    type                           shift and go to state 4
    list_type                      shift and go to state 19

state 241

    (87) class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .

    RBRACE          reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VOID            reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    ID              reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PUBLIC          reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PRIVATE         reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PROTECTED       reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    INT             reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    FLOAT           reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    BOOL            reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    STRING          reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    CHAR            reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VAR             reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    DOUBLE          reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    LIST            reduce using rule 87 (class_member -> type ID LPAREN params RPAREN LBRACE declarations RBRACE .)


state 242

    (89) class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .

    RBRACE          reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VOID            reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    ID              reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PUBLIC          reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PRIVATE         reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PROTECTED       reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    INT             reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    FLOAT           reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    BOOL            reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    STRING          reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    CHAR            reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VAR             reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    DOUBLE          reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    LIST            reduce using rule 89 (class_member -> VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)


state 243

    (10) else_part -> ELSE IF LPAREN expression RPAREN . LBRACE declarations RBRACE else_part

    LBRACE          shift and go to state 246


state 244

    (86) class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .

    RBRACE          reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VOID            reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    ID              reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PUBLIC          reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PRIVATE         reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PROTECTED       reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    INT             reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    FLOAT           reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    BOOL            reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    STRING          reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    CHAR            reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VAR             reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    DOUBLE          reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    LIST            reduce using rule 86 (class_member -> access_modifier type ID LPAREN params RPAREN LBRACE declarations RBRACE .)


state 245

    (88) class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .

    RBRACE          reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VOID            reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    ID              reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PUBLIC          reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PRIVATE         reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    PROTECTED       reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    INT             reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    FLOAT           reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    BOOL            reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    STRING          reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    CHAR            reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    VAR             reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    DOUBLE          reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)
    LIST            reduce using rule 88 (class_member -> access_modifier VOID ID LPAREN params RPAREN LBRACE declarations RBRACE .)


state 246

    (10) else_part -> ELSE IF LPAREN expression RPAREN LBRACE . declarations RBRACE else_part
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> .
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    RBRACE          reduce using rule 4 (declarations -> .)
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CONSOLE         [ reduce using rule 4 (declarations -> .) ]
  ! IF              [ reduce using rule 4 (declarations -> .) ]
  ! FOR             [ reduce using rule 4 (declarations -> .) ]
  ! ID              [ reduce using rule 4 (declarations -> .) ]
  ! RETURN          [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 4 (declarations -> .) ]
  ! INT             [ reduce using rule 4 (declarations -> .) ]
  ! FLOAT           [ reduce using rule 4 (declarations -> .) ]
  ! BOOL            [ reduce using rule 4 (declarations -> .) ]
  ! STRING          [ reduce using rule 4 (declarations -> .) ]
  ! CHAR            [ reduce using rule 4 (declarations -> .) ]
  ! VAR             [ reduce using rule 4 (declarations -> .) ]
  ! DOUBLE          [ reduce using rule 4 (declarations -> .) ]
  ! PUBLIC          [ reduce using rule 4 (declarations -> .) ]
  ! PRIVATE         [ reduce using rule 4 (declarations -> .) ]
  ! PROTECTED       [ reduce using rule 4 (declarations -> .) ]
  ! LIST            [ reduce using rule 4 (declarations -> .) ]
  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declarations                   shift and go to state 247
    declaration                    shift and go to state 3
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 247

    (10) else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations . RBRACE else_part
    (2) declarations -> declarations . declaration
    (5) declaration -> . type ID ASSIGN expression SEMICOLON
    (6) declaration -> . type ID SEMICOLON
    (7) declaration -> . CONSOLE DOT WRITELINE LPAREN expression RPAREN SEMICOLON
    (8) declaration -> . IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (12) declaration -> . FOR LPAREN for_init SEMICOLON for_cond SEMICOLON for_iter RPAREN LBRACE declarations RBRACE
    (37) declaration -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (38) declaration -> . ID DOT ADD LPAREN expression RPAREN SEMICOLON
    (62) declaration -> . type ID LPAREN params RPAREN LBRACE declarations RBRACE
    (71) declaration -> . ID LPAREN args RPAREN SEMICOLON
    (72) declaration -> . RETURN expression SEMICOLON
    (73) declaration -> . access_modifier CLASS ID LBRACE class_members RBRACE
    (74) declaration -> . CLASS ID LBRACE class_members RBRACE
    (92) declaration -> . ID ASSIGN expression SEMICOLON
    (22) type -> . INT
    (23) type -> . FLOAT
    (24) type -> . BOOL
    (25) type -> . STRING
    (26) type -> . CHAR
    (27) type -> . VAR
    (28) type -> . DOUBLE
    (29) type -> . list_type
    (75) access_modifier -> . PUBLIC
    (76) access_modifier -> . PRIVATE
    (77) access_modifier -> . PROTECTED
    (78) access_modifier -> .
    (30) list_type -> . LIST LT type GT

  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          shift and go to state 248
    CONSOLE         shift and go to state 6
    IF              shift and go to state 7
    FOR             shift and go to state 8
    ID              shift and go to state 5
    RETURN          shift and go to state 9
    CLASS           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    CHAR            shift and go to state 16
    VAR             shift and go to state 17
    DOUBLE          shift and go to state 18
    PUBLIC          shift and go to state 20
    PRIVATE         shift and go to state 21
    PROTECTED       shift and go to state 22
    LIST            shift and go to state 23

  ! CLASS           [ reduce using rule 78 (access_modifier -> .) ]

    declaration                    shift and go to state 24
    type                           shift and go to state 4
    access_modifier                shift and go to state 10
    list_type                      shift and go to state 19

state 248

    (10) else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE . else_part
    (9) else_part -> . ELSE LBRACE declarations RBRACE
    (10) else_part -> . ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part
    (11) else_part -> .

    ELSE            shift and go to state 198
    CONSOLE         reduce using rule 11 (else_part -> .)
    IF              reduce using rule 11 (else_part -> .)
    FOR             reduce using rule 11 (else_part -> .)
    ID              reduce using rule 11 (else_part -> .)
    RETURN          reduce using rule 11 (else_part -> .)
    CLASS           reduce using rule 11 (else_part -> .)
    INT             reduce using rule 11 (else_part -> .)
    FLOAT           reduce using rule 11 (else_part -> .)
    BOOL            reduce using rule 11 (else_part -> .)
    STRING          reduce using rule 11 (else_part -> .)
    CHAR            reduce using rule 11 (else_part -> .)
    VAR             reduce using rule 11 (else_part -> .)
    DOUBLE          reduce using rule 11 (else_part -> .)
    PUBLIC          reduce using rule 11 (else_part -> .)
    PRIVATE         reduce using rule 11 (else_part -> .)
    PROTECTED       reduce using rule 11 (else_part -> .)
    LIST            reduce using rule 11 (else_part -> .)
    $end            reduce using rule 11 (else_part -> .)
    RBRACE          reduce using rule 11 (else_part -> .)

    else_part                      shift and go to state 249

state 249

    (10) else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .

    CONSOLE         reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    IF              reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    FOR             reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    ID              reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    RETURN          reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    CLASS           reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    INT             reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    FLOAT           reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    BOOL            reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    STRING          reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    CHAR            reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    VAR             reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    DOUBLE          reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    PUBLIC          reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    PRIVATE         reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    PROTECTED       reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    LIST            reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    $end            reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)
    RBRACE          reduce using rule 10 (else_part -> ELSE IF LPAREN expression RPAREN LBRACE declarations RBRACE else_part .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CONSOLE in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 0 resolved as shift
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 0 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 0 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 0 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 0 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 0 resolved as shift
WARNING: shift/reduce conflict for LIST in state 0 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 2 resolved as shift
WARNING: shift/reduce conflict for VOID in state 86 resolved as shift
WARNING: shift/reduce conflict for ID in state 86 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 86 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 86 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 86 resolved as shift
WARNING: shift/reduce conflict for VOID in state 86 resolved as shift
WARNING: shift/reduce conflict for ID in state 86 resolved as shift
WARNING: shift/reduce conflict for INT in state 86 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 86 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 86 resolved as shift
WARNING: shift/reduce conflict for STRING in state 86 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 86 resolved as shift
WARNING: shift/reduce conflict for VAR in state 86 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 86 resolved as shift
WARNING: shift/reduce conflict for LIST in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for GT in state 106 resolved as shift
WARNING: shift/reduce conflict for LT in state 106 resolved as shift
WARNING: shift/reduce conflict for GE in state 106 resolved as shift
WARNING: shift/reduce conflict for LE in state 106 resolved as shift
WARNING: shift/reduce conflict for EQ in state 106 resolved as shift
WARNING: shift/reduce conflict for NE in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 107 resolved as shift
WARNING: shift/reduce conflict for GT in state 107 resolved as shift
WARNING: shift/reduce conflict for LT in state 107 resolved as shift
WARNING: shift/reduce conflict for GE in state 107 resolved as shift
WARNING: shift/reduce conflict for LE in state 107 resolved as shift
WARNING: shift/reduce conflict for EQ in state 107 resolved as shift
WARNING: shift/reduce conflict for NE in state 107 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 108 resolved as shift
WARNING: shift/reduce conflict for GT in state 108 resolved as shift
WARNING: shift/reduce conflict for LT in state 108 resolved as shift
WARNING: shift/reduce conflict for GE in state 108 resolved as shift
WARNING: shift/reduce conflict for LE in state 108 resolved as shift
WARNING: shift/reduce conflict for EQ in state 108 resolved as shift
WARNING: shift/reduce conflict for NE in state 108 resolved as shift
WARNING: shift/reduce conflict for AND in state 108 resolved as shift
WARNING: shift/reduce conflict for OR in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 109 resolved as shift
WARNING: shift/reduce conflict for GT in state 109 resolved as shift
WARNING: shift/reduce conflict for LT in state 109 resolved as shift
WARNING: shift/reduce conflict for GE in state 109 resolved as shift
WARNING: shift/reduce conflict for LE in state 109 resolved as shift
WARNING: shift/reduce conflict for EQ in state 109 resolved as shift
WARNING: shift/reduce conflict for NE in state 109 resolved as shift
WARNING: shift/reduce conflict for AND in state 109 resolved as shift
WARNING: shift/reduce conflict for OR in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 110 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 110 resolved as shift
WARNING: shift/reduce conflict for GT in state 110 resolved as shift
WARNING: shift/reduce conflict for LT in state 110 resolved as shift
WARNING: shift/reduce conflict for GE in state 110 resolved as shift
WARNING: shift/reduce conflict for LE in state 110 resolved as shift
WARNING: shift/reduce conflict for EQ in state 110 resolved as shift
WARNING: shift/reduce conflict for NE in state 110 resolved as shift
WARNING: shift/reduce conflict for AND in state 110 resolved as shift
WARNING: shift/reduce conflict for OR in state 110 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 111 resolved as shift
WARNING: shift/reduce conflict for GT in state 111 resolved as shift
WARNING: shift/reduce conflict for LT in state 111 resolved as shift
WARNING: shift/reduce conflict for GE in state 111 resolved as shift
WARNING: shift/reduce conflict for LE in state 111 resolved as shift
WARNING: shift/reduce conflict for EQ in state 111 resolved as shift
WARNING: shift/reduce conflict for NE in state 111 resolved as shift
WARNING: shift/reduce conflict for AND in state 111 resolved as shift
WARNING: shift/reduce conflict for OR in state 111 resolved as shift
WARNING: shift/reduce conflict for VOID in state 120 resolved as shift
WARNING: shift/reduce conflict for ID in state 120 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 120 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 120 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 120 resolved as shift
WARNING: shift/reduce conflict for VOID in state 120 resolved as shift
WARNING: shift/reduce conflict for ID in state 120 resolved as shift
WARNING: shift/reduce conflict for INT in state 120 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 120 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 120 resolved as shift
WARNING: shift/reduce conflict for STRING in state 120 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 120 resolved as shift
WARNING: shift/reduce conflict for VAR in state 120 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 120 resolved as shift
WARNING: shift/reduce conflict for LIST in state 120 resolved as shift
WARNING: shift/reduce conflict for VOID in state 122 resolved as shift
WARNING: shift/reduce conflict for ID in state 122 resolved as shift
WARNING: shift/reduce conflict for INT in state 122 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 122 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 122 resolved as shift
WARNING: shift/reduce conflict for STRING in state 122 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 122 resolved as shift
WARNING: shift/reduce conflict for VAR in state 122 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 122 resolved as shift
WARNING: shift/reduce conflict for LIST in state 122 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 137 resolved as shift
WARNING: shift/reduce conflict for IF in state 137 resolved as shift
WARNING: shift/reduce conflict for FOR in state 137 resolved as shift
WARNING: shift/reduce conflict for ID in state 137 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 137 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 137 resolved as shift
WARNING: shift/reduce conflict for INT in state 137 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 137 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 137 resolved as shift
WARNING: shift/reduce conflict for STRING in state 137 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 137 resolved as shift
WARNING: shift/reduce conflict for VAR in state 137 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 137 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 137 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 137 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 137 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 137 resolved as shift
WARNING: shift/reduce conflict for LIST in state 137 resolved as shift
WARNING: shift/reduce conflict for VOID in state 147 resolved as shift
WARNING: shift/reduce conflict for ID in state 147 resolved as shift
WARNING: shift/reduce conflict for INT in state 147 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 147 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 147 resolved as shift
WARNING: shift/reduce conflict for STRING in state 147 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 147 resolved as shift
WARNING: shift/reduce conflict for VAR in state 147 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 147 resolved as shift
WARNING: shift/reduce conflict for LIST in state 147 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 156 resolved as shift
WARNING: shift/reduce conflict for IF in state 156 resolved as shift
WARNING: shift/reduce conflict for FOR in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 156 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 156 resolved as shift
WARNING: shift/reduce conflict for INT in state 156 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 156 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 156 resolved as shift
WARNING: shift/reduce conflict for STRING in state 156 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 156 resolved as shift
WARNING: shift/reduce conflict for VAR in state 156 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 156 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 156 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 156 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 156 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 156 resolved as shift
WARNING: shift/reduce conflict for LIST in state 156 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 161 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 176 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 204 resolved as shift
WARNING: shift/reduce conflict for IF in state 204 resolved as shift
WARNING: shift/reduce conflict for FOR in state 204 resolved as shift
WARNING: shift/reduce conflict for ID in state 204 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 204 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 204 resolved as shift
WARNING: shift/reduce conflict for INT in state 204 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 204 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 204 resolved as shift
WARNING: shift/reduce conflict for STRING in state 204 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 204 resolved as shift
WARNING: shift/reduce conflict for VAR in state 204 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 204 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 204 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 204 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 204 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 204 resolved as shift
WARNING: shift/reduce conflict for LIST in state 204 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 212 resolved as shift
WARNING: shift/reduce conflict for IF in state 212 resolved as shift
WARNING: shift/reduce conflict for FOR in state 212 resolved as shift
WARNING: shift/reduce conflict for ID in state 212 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 212 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 212 resolved as shift
WARNING: shift/reduce conflict for INT in state 212 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 212 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 212 resolved as shift
WARNING: shift/reduce conflict for STRING in state 212 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 212 resolved as shift
WARNING: shift/reduce conflict for VAR in state 212 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 212 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 212 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 212 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 212 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 212 resolved as shift
WARNING: shift/reduce conflict for LIST in state 212 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 214 resolved as shift
WARNING: shift/reduce conflict for IF in state 214 resolved as shift
WARNING: shift/reduce conflict for FOR in state 214 resolved as shift
WARNING: shift/reduce conflict for ID in state 214 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 214 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 214 resolved as shift
WARNING: shift/reduce conflict for INT in state 214 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 214 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 214 resolved as shift
WARNING: shift/reduce conflict for STRING in state 214 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 214 resolved as shift
WARNING: shift/reduce conflict for VAR in state 214 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 214 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 214 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 214 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 214 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 214 resolved as shift
WARNING: shift/reduce conflict for LIST in state 214 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 218 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 221 resolved as shift
WARNING: shift/reduce conflict for IF in state 221 resolved as shift
WARNING: shift/reduce conflict for FOR in state 221 resolved as shift
WARNING: shift/reduce conflict for ID in state 221 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 221 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 221 resolved as shift
WARNING: shift/reduce conflict for INT in state 221 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 221 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 221 resolved as shift
WARNING: shift/reduce conflict for STRING in state 221 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 221 resolved as shift
WARNING: shift/reduce conflict for VAR in state 221 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 221 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 221 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 221 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 221 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 221 resolved as shift
WARNING: shift/reduce conflict for LIST in state 221 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 223 resolved as shift
WARNING: shift/reduce conflict for IF in state 223 resolved as shift
WARNING: shift/reduce conflict for FOR in state 223 resolved as shift
WARNING: shift/reduce conflict for ID in state 223 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 223 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 223 resolved as shift
WARNING: shift/reduce conflict for INT in state 223 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 223 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 223 resolved as shift
WARNING: shift/reduce conflict for STRING in state 223 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 223 resolved as shift
WARNING: shift/reduce conflict for VAR in state 223 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 223 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 223 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 223 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 223 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 223 resolved as shift
WARNING: shift/reduce conflict for LIST in state 223 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 224 resolved as shift
WARNING: shift/reduce conflict for IF in state 224 resolved as shift
WARNING: shift/reduce conflict for FOR in state 224 resolved as shift
WARNING: shift/reduce conflict for ID in state 224 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 224 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 224 resolved as shift
WARNING: shift/reduce conflict for INT in state 224 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 224 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 224 resolved as shift
WARNING: shift/reduce conflict for STRING in state 224 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 224 resolved as shift
WARNING: shift/reduce conflict for VAR in state 224 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 224 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 224 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 224 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 224 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 224 resolved as shift
WARNING: shift/reduce conflict for LIST in state 224 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 225 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 227 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 230 resolved as shift
WARNING: shift/reduce conflict for IF in state 230 resolved as shift
WARNING: shift/reduce conflict for FOR in state 230 resolved as shift
WARNING: shift/reduce conflict for ID in state 230 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 230 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 230 resolved as shift
WARNING: shift/reduce conflict for INT in state 230 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 230 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 230 resolved as shift
WARNING: shift/reduce conflict for STRING in state 230 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 230 resolved as shift
WARNING: shift/reduce conflict for VAR in state 230 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 230 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 230 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 230 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 230 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 230 resolved as shift
WARNING: shift/reduce conflict for LIST in state 230 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 231 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 232 resolved as shift
WARNING: shift/reduce conflict for IF in state 232 resolved as shift
WARNING: shift/reduce conflict for FOR in state 232 resolved as shift
WARNING: shift/reduce conflict for ID in state 232 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 232 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 232 resolved as shift
WARNING: shift/reduce conflict for INT in state 232 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 232 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 232 resolved as shift
WARNING: shift/reduce conflict for STRING in state 232 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 232 resolved as shift
WARNING: shift/reduce conflict for VAR in state 232 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 232 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 232 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 232 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 232 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 232 resolved as shift
WARNING: shift/reduce conflict for LIST in state 232 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 233 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 234 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 238 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 240 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 246 resolved as shift
WARNING: shift/reduce conflict for IF in state 246 resolved as shift
WARNING: shift/reduce conflict for FOR in state 246 resolved as shift
WARNING: shift/reduce conflict for ID in state 246 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 246 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 246 resolved as shift
WARNING: shift/reduce conflict for INT in state 246 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 246 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 246 resolved as shift
WARNING: shift/reduce conflict for STRING in state 246 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 246 resolved as shift
WARNING: shift/reduce conflict for VAR in state 246 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 246 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 246 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 246 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 246 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 246 resolved as shift
WARNING: shift/reduce conflict for LIST in state 246 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 247 resolved as shift
WARNING: reduce/reduce conflict in state 86 resolved using rule (access_modifier -> <empty>)
WARNING: rejected rule (class_members -> <empty>) in state 86
WARNING: reduce/reduce conflict in state 120 resolved using rule (access_modifier -> <empty>)
WARNING: rejected rule (class_members -> <empty>) in state 120
