Sintaxis:
Línea 4: declaracion_variable : float f = 2.5
Línea 5: declaracion_variable : ('list_type', 'double') listaDoubles = ('new_list_init', 'double', [1.1, 2.2])
Línea 7: declaracion_variable : var autoVar
Línea 8: asignacion : autoVar = auto
Línea 11: declaracion_variable : var sinAsignar
Línea 12: impresion : Console.WriteLine(sinAsignar)
Línea 15: declaracion_variable : ('list_type', ('list_type', 'string')) listaDeListas
Línea 19: return : return ('+', 'a', 'b')
Línea 18: funcion : int Sumar([('int', 'a'), ('int', 'b')]) { ... }
Línea 22: return : return 0
Línea 21: funcion : bool Falso([]) { ... }
Línea 27: campo : string nombre
Línea 28: campo : int edad
Línea 30: asignacion : nombre = n
Línea 31: asignacion : edad = e
Línea 29: constructor : public Persona([('string', 'n'), ('int', 'e')]) { ... }
Línea 34: impresion : Console.WriteLine(('+', 'Hola, soy ', 'nombre'))
Línea 33: metodo_void : public void Saludar([]) { ... }
Línea 26: clase : class Persona { ... }
Error de sintaxis en la línea 38: token 'p'
Línea 38: llamada_funcion : Persona(['Ana', 30])
Error de sintaxis en la línea 39: token 'Saludar'
Línea 43: impresion : Console.WriteLine(f es menor que 3)
Línea 45: impresion : Console.WriteLine(f es mayor o igual que 3)
Línea 44: else : else { ... }
Línea 42: if : if (('<', 'f', 3.0)) { ... } }
Línea 50: impresion : Console.WriteLine(i)
Línea 49: for : for (('decl_var_init', 'int', 'i', 0); ('<', 'i', 5); ('assign', 'i', ('+', 'i', 1))) { ... }
Línea 53: declaracion_variable : int j = 0
Error de sintaxis en la línea 54: token '{'
Línea 55: impresion : Console.WriteLine(j)
Línea 56: asignacion : j = ('+', 'j', 1)
Error de sintaxis en la línea 57: token '}'