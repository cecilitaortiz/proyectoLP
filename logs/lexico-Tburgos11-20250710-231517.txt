Tokens reconocidos:
Línea 1: PUBLIC -> public
Línea 1: CLASS -> class
Línea 1: ID -> Animal
Línea 1: LBRACE -> {
Línea 2: PUBLIC -> public
Línea 2: STRING -> string
Línea 2: ID -> tipo
Línea 2: SEMICOLON -> ;
Línea 3: PUBLIC -> public
Línea 3: INT -> int
Línea 3: ID -> patas
Línea 3: SEMICOLON -> ;
Línea 4: RBRACE -> }
Línea 5: PUBLIC -> public
Línea 5: CLASS -> class
Línea 5: ID -> Perro
Línea 5: LBRACE -> {
Línea 6: PUBLIC -> public
Línea 6: VOID -> void
Línea 6: ID -> Ladrar
Línea 6: LPAREN -> (
Línea 6: RPAREN -> )
Línea 6: LBRACE -> {
Línea 7: CONSOLE -> Console
Línea 7: DOT -> .
Línea 7: WRITELINE -> WriteLine
Línea 7: LPAREN -> (
Línea 7: STRING_CONST -> Guau guau
Línea 7: RPAREN -> )
Línea 7: SEMICOLON -> ;
Línea 8: RBRACE -> }
Línea 9: RBRACE -> }
Línea 10: PUBLIC -> public
Línea 10: CLASS -> class
Línea 10: ID -> App
Línea 10: LBRACE -> {
Línea 11: PUBLIC -> public
Línea 11: ID -> static
Línea 11: LPAREN -> (
Línea 11: STRING -> string
Línea 11: ID -> args
Línea 11: RPAREN -> )
Línea 11: LBRACE -> {
Línea 12: INT -> int
Línea 12: LBRACKET -> [
Línea 12: RBRACKET -> ]
Línea 12: ID -> edades
Línea 12: ASSIGN -> =
Línea 12: NEW -> new
Línea 12: INT -> int
Línea 12: LBRACKET -> [
Línea 12: INT_CONST -> 3
Línea 12: RBRACKET -> ]
Línea 12: SEMICOLON -> ;
Línea 13: ID -> edades
Línea 13: LBRACKET -> [
Línea 13: INT_CONST -> 0
Línea 13: RBRACKET -> ]
Línea 13: ASSIGN -> =
Línea 13: INT_CONST -> 5
Línea 13: SEMICOLON -> ;
Línea 14: ID -> edades
Línea 14: LBRACKET -> [
Línea 14: INT_CONST -> 1
Línea 14: RBRACKET -> ]
Línea 14: ASSIGN -> =
Línea 14: INT_CONST -> 8
Línea 14: SEMICOLON -> ;
Línea 15: ID -> edades
Línea 15: LBRACKET -> [
Línea 15: INT_CONST -> 2
Línea 15: RBRACKET -> ]
Línea 15: ASSIGN -> =
Línea 15: INT_CONST -> 3
Línea 15: SEMICOLON -> ;
Línea 16: IF -> if
Línea 16: LPAREN -> (
Línea 16: ID -> edades
Línea 16: LBRACKET -> [
Línea 16: INT_CONST -> 0
Línea 16: RBRACKET -> ]
Línea 16: GT -> >
Línea 16: INT_CONST -> 4
Línea 16: AND -> &&
Línea 16: ID -> edades
Línea 16: LBRACKET -> [
Línea 16: INT_CONST -> 2
Línea 16: RBRACKET -> ]
Línea 16: LT -> <
Línea 16: INT_CONST -> 4
Línea 16: RPAREN -> )
Línea 16: LBRACE -> {
Línea 17: CONSOLE -> Console
Línea 17: DOT -> .
Línea 17: WRITELINE -> WriteLine
Línea 17: LPAREN -> (
Línea 17: STRING_CONST -> Condición verdadera
Línea 17: RPAREN -> )
Línea 17: SEMICOLON -> ;
Línea 18: RBRACE -> }
Línea 19: ID -> Perro
Línea 19: ID -> miPerro
Línea 19: ASSIGN -> =
Línea 19: NEW -> new
Línea 19: ID -> Perro
Línea 19: LPAREN -> (
Línea 19: RPAREN -> )
Línea 19: SEMICOLON -> ;
Línea 20: ID -> miPerro
Línea 20: DOT -> .
Línea 20: ID -> tipo
Línea 20: ASSIGN -> =
Línea 20: STRING_CONST -> Canino
Línea 20: SEMICOLON -> ;
Línea 21: ID -> miPerro
Línea 21: DOT -> .
Línea 21: ID -> patas
Línea 21: ASSIGN -> =
Línea 21: INT_CONST -> 4
Línea 21: SEMICOLON -> ;
Línea 22: ID -> miPerro
Línea 22: DOT -> .
Línea 22: ID -> Ladrar
Línea 22: LPAREN -> (
Línea 22: RPAREN -> )
Línea 22: SEMICOLON -> ;
Línea 24: INT -> int
Línea 24: ID -> resultado
Línea 24: ASSIGN -> =
Línea 24: ID -> ObtenerTexto
Línea 24: LPAREN -> (
Línea 24: RPAREN -> )
Línea 24: SEMICOLON -> ;
Línea 25: RBRACE -> }
Línea 26: PUBLIC -> public
Línea 26: ID -> static
Línea 26: STRING -> string
Línea 26: ID -> ObtenerTexto
Línea 26: LPAREN -> (
Línea 26: RPAREN -> )
Línea 26: LBRACE -> {
Línea 27: RETURN -> return
Línea 27: STRING_CONST -> Texto de prueba
Línea 27: SEMICOLON -> ;
Línea 28: RBRACE -> }
Línea 29: RBRACE -> }