Tokens reconocidos:
Línea 1: INT -> int
Línea 1: ID -> Sumar
Línea 1: LPAREN -> (
Línea 1: INT -> int
Línea 1: ID -> a
Línea 1: COMMA -> ,
Línea 1: INT -> int
Línea 1: ID -> b
Línea 1: RPAREN -> )
Línea 1: LBRACE -> {
Línea 2: INT -> int
Línea 2: ID -> resultado
Línea 2: ASSIGN -> =
Línea 2: ID -> a
Línea 2: PLUS -> +
Línea 2: ID -> b
Línea 2: SEMICOLON -> ;
Línea 3: RETURN -> return
Línea 3: ID -> resultado
Línea 3: SEMICOLON -> ;
Línea 4: RBRACE -> }
Línea 5: INT -> int
Línea 5: ID -> Main
Línea 5: LPAREN -> (
Línea 5: RPAREN -> )
Línea 5: LBRACE -> {
Línea 6: LIST -> List
Línea 6: LT -> <
Línea 6: INT -> int
Línea 6: GT -> >
Línea 6: ID -> numeros
Línea 6: SEMICOLON -> ;
Línea 7: ID -> numeros
Línea 7: ASSIGN -> =
Línea 7: NEW -> new
Línea 7: LIST -> List
Línea 7: LT -> <
Línea 7: INT -> int
Línea 7: GT -> >
Línea 7: LPAREN -> (
Línea 7: RPAREN -> )
Línea 7: SEMICOLON -> ;
Línea 8: ID -> numeros
Línea 8: DOT -> .
Línea 8: ID -> Add
Línea 8: LPAREN -> (
Línea 8: INT_CONST -> 10
Línea 8: RPAREN -> )
Línea 8: SEMICOLON -> ;
Línea 9: ID -> numeros
Línea 9: DOT -> .
Línea 9: ID -> Add
Línea 9: LPAREN -> (
Línea 9: INT_CONST -> 20
Línea 9: RPAREN -> )
Línea 9: SEMICOLON -> ;
Línea 10: ID -> numeros
Línea 10: DOT -> .
Línea 10: ID -> Add
Línea 10: LPAREN -> (
Línea 10: INT_CONST -> 30
Línea 10: RPAREN -> )
Línea 10: SEMICOLON -> ;
Línea 12: INT -> int
Línea 12: ID -> suma
Línea 12: ASSIGN -> =
Línea 12: INT_CONST -> 0
Línea 12: SEMICOLON -> ;
Línea 13: FOR -> for
Línea 13: LPAREN -> (
Línea 13: INT -> int
Línea 13: ID -> i
Línea 13: ASSIGN -> =
Línea 13: INT_CONST -> 0
Línea 13: SEMICOLON -> ;
Línea 13: ID -> i
Línea 13: LT -> <
Línea 13: INT_CONST -> 3
Línea 13: SEMICOLON -> ;
Línea 13: ID -> i
Línea 13: ASSIGN -> =
Línea 13: ID -> i
Línea 13: PLUS -> +
Línea 13: INT_CONST -> 1
Línea 13: RPAREN -> )
Línea 13: LBRACE -> {
Línea 14: ID -> suma
Línea 14: ASSIGN -> =
Línea 14: ID -> suma
Línea 14: PLUS -> +
Línea 14: ID -> numeros
Línea 14: LBRACKET -> [
Línea 14: ID -> i
Línea 14: RBRACKET -> ]
Línea 14: SEMICOLON -> ;
Línea 15: RBRACE -> }
Línea 17: CONSOLE -> Console
Línea 17: DOT -> .
Línea 17: WRITELINE -> WriteLine
Línea 17: LPAREN -> (
Línea 17: STRING_CONST -> La suma es:
Línea 17: RPAREN -> )
Línea 17: SEMICOLON -> ;
Línea 18: CONSOLE -> Console
Línea 18: DOT -> .
Línea 18: WRITELINE -> WriteLine
Línea 18: LPAREN -> (
Línea 18: ID -> suma
Línea 18: RPAREN -> )
Línea 18: SEMICOLON -> ;
Línea 20: INT -> int
Línea 20: ID -> resultado
Línea 20: ASSIGN -> =
Línea 20: ID -> Sumar
Línea 20: LPAREN -> (
Línea 20: ID -> numeros
Línea 20: LBRACKET -> [
Línea 20: INT_CONST -> 0
Línea 20: RBRACKET -> ]
Línea 20: COMMA -> ,
Línea 20: ID -> numeros
Línea 20: LBRACKET -> [
Línea 20: INT_CONST -> 1
Línea 20: RBRACKET -> ]
Línea 20: RPAREN -> )
Línea 20: SEMICOLON -> ;
Línea 21: CONSOLE -> Console
Línea 21: DOT -> .
Línea 21: WRITELINE -> WriteLine
Línea 21: LPAREN -> (
Línea 21: STRING_CONST -> Suma de los dos primeros:
Línea 21: RPAREN -> )
Línea 21: SEMICOLON -> ;
Línea 22: CONSOLE -> Console
Línea 22: DOT -> .
Línea 22: WRITELINE -> WriteLine
Línea 22: LPAREN -> (
Línea 22: ID -> resultado
Línea 22: RPAREN -> )
Línea 22: SEMICOLON -> ;
Línea 24: ID -> numeros
Línea 24: LBRACKET -> [
Línea 24: INT_CONST -> 1
Línea 24: RBRACKET -> ]
Línea 24: ASSIGN -> =
Línea 24: INT_CONST -> 50
Línea 24: SEMICOLON -> ;
Línea 25: CONSOLE -> Console
Línea 25: DOT -> .
Línea 25: WRITELINE -> WriteLine
Línea 25: LPAREN -> (
Línea 25: STRING_CONST -> Nuevo valor en la posición 1:
Línea 25: RPAREN -> )
Línea 25: SEMICOLON -> ;
Línea 26: CONSOLE -> Console
Línea 26: DOT -> .
Línea 26: WRITELINE -> WriteLine
Línea 26: LPAREN -> (
Línea 26: ID -> numeros
Línea 26: LBRACKET -> [
Línea 26: INT_CONST -> 1
Línea 26: RBRACKET -> ]
Línea 26: RPAREN -> )
Línea 26: SEMICOLON -> ;
Línea 27: RBRACE -> }