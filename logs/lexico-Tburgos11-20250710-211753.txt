Tokens reconocidos:
Línea 1: INT -> int
Línea 1: ID -> Sumar
Línea 1: LPAREN -> (
Línea 1: INT -> int
Línea 1: ID -> a
Línea 1: COMMA -> ,
Línea 1: INT -> int
Línea 1: ID -> b
Línea 1: RPAREN -> )
Línea 1: LBRACE -> {
Línea 2: RETURN -> return
Línea 2: ID -> a
Línea 2: PLUS -> +
Línea 2: ID -> b
Línea 2: SEMICOLON -> ;
Línea 3: RBRACE -> }
Línea 5: FLOAT -> float
Línea 5: ID -> Promedio
Línea 5: LPAREN -> (
Línea 5: INT -> int
Línea 5: ID -> x
Línea 5: COMMA -> ,
Línea 5: INT -> int
Línea 5: ID -> y
Línea 5: RPAREN -> )
Línea 5: LBRACE -> {
Línea 6: RETURN -> return
Línea 6: LPAREN -> (
Línea 6: ID -> x
Línea 6: PLUS -> +
Línea 6: ID -> y
Línea 6: RPAREN -> )
Línea 6: DIVIDE -> /
Línea 6: FLOAT_CONST -> 2.0
Línea 6: SEMICOLON -> ;
Línea 7: RBRACE -> }
Línea 9: INT -> int
Línea 9: ID -> resultado
Línea 9: ASSIGN -> =
Línea 9: ID -> Sumar
Línea 9: LPAREN -> (
Línea 9: INT_CONST -> 10
Línea 9: COMMA -> ,
Línea 9: MINUS -> -
Línea 9: INT_CONST -> 3
Línea 9: RPAREN -> )
Línea 9: SEMICOLON -> ;
Línea 10: CONSOLE -> Console
Línea 10: DOT -> .
Línea 10: WRITELINE -> WriteLine
Línea 10: LPAREN -> (
Línea 10: ID -> resultado
Línea 10: RPAREN -> )
Línea 10: SEMICOLON -> ;
Línea 12: INT -> int
Línea 12: ID -> otro
Línea 12: ASSIGN -> =
Línea 12: ID -> Sumar
Línea 12: LPAREN -> (
Línea 12: ID -> Sumar
Línea 12: LPAREN -> (
Línea 12: INT_CONST -> 1
Línea 12: COMMA -> ,
Línea 12: INT_CONST -> 2
Línea 12: RPAREN -> )
Línea 12: COMMA -> ,
Línea 12: INT_CONST -> 5
Línea 12: RPAREN -> )
Línea 12: SEMICOLON -> ;
Línea 13: CONSOLE -> Console
Línea 13: DOT -> .
Línea 13: WRITELINE -> WriteLine
Línea 13: LPAREN -> (
Línea 13: ID -> otro
Línea 13: RPAREN -> )
Línea 13: SEMICOLON -> ;
Línea 15: INT -> int
Línea 15: ID -> a
Línea 15: ASSIGN -> =
Línea 15: INT_CONST -> 5
Línea 15: SEMICOLON -> ;
Línea 16: IF -> if
Línea 16: LPAREN -> (
Línea 16: ID -> a
Línea 16: GT -> >
Línea 16: INT_CONST -> 0
Línea 16: RPAREN -> )
Línea 16: LBRACE -> {
Línea 17: CONSOLE -> Console
Línea 17: DOT -> .
Línea 17: WRITELINE -> WriteLine
Línea 17: LPAREN -> (
Línea 17: ID -> a
Línea 17: RPAREN -> )
Línea 17: SEMICOLON -> ;
Línea 18: RBRACE -> }
Línea 20: INT -> int
Línea 20: ID -> b
Línea 20: ASSIGN -> =
Línea 20: MINUS -> -
Línea 20: INT_CONST -> 1
Línea 20: SEMICOLON -> ;
Línea 21: IF -> if
Línea 21: LPAREN -> (
Línea 21: ID -> b
Línea 21: GT -> >
Línea 21: INT_CONST -> 0
Línea 21: RPAREN -> )
Línea 21: LBRACE -> {
Línea 22: CONSOLE -> Console
Línea 22: DOT -> .
Línea 22: WRITELINE -> WriteLine
Línea 22: LPAREN -> (
Línea 22: ID -> b
Línea 22: RPAREN -> )
Línea 22: SEMICOLON -> ;
Línea 23: RBRACE -> }
Línea 23: ELSE -> else
Línea 23: LBRACE -> {
Línea 24: CONSOLE -> Console
Línea 24: DOT -> .
Línea 24: WRITELINE -> WriteLine
Línea 24: LPAREN -> (
Línea 24: INT_CONST -> 0
Línea 24: RPAREN -> )
Línea 24: SEMICOLON -> ;
Línea 25: RBRACE -> }
Línea 27: INT -> int
Línea 27: ID -> c
Línea 27: ASSIGN -> =
Línea 27: INT_CONST -> 0
Línea 27: SEMICOLON -> ;
Línea 28: IF -> if
Línea 28: LPAREN -> (
Línea 28: ID -> c
Línea 28: GT -> >
Línea 28: INT_CONST -> 0
Línea 28: RPAREN -> )
Línea 28: LBRACE -> {
Línea 29: CONSOLE -> Console
Línea 29: DOT -> .
Línea 29: WRITELINE -> WriteLine
Línea 29: LPAREN -> (
Línea 29: STRING_CONST -> positivo
Línea 29: RPAREN -> )
Línea 29: SEMICOLON -> ;
Línea 30: RBRACE -> }
Línea 30: ELSE -> else
Línea 30: IF -> if
Línea 30: LPAREN -> (
Línea 30: ID -> c
Línea 30: EQ -> ==
Línea 30: INT_CONST -> 0
Línea 30: RPAREN -> )
Línea 30: LBRACE -> {
Línea 31: CONSOLE -> Console
Línea 31: DOT -> .
Línea 31: WRITELINE -> WriteLine
Línea 31: LPAREN -> (
Línea 31: STRING_CONST -> cero
Línea 31: RPAREN -> )
Línea 31: SEMICOLON -> ;
Línea 32: RBRACE -> }
Línea 32: ELSE -> else
Línea 32: IF -> if
Línea 32: LPAREN -> (
Línea 32: ID -> c
Línea 32: EQ -> ==
Línea 32: MINUS -> -
Línea 32: INT_CONST -> 1
Línea 32: RPAREN -> )
Línea 32: LBRACE -> {
Línea 33: CONSOLE -> Console
Línea 33: DOT -> .
Línea 33: WRITELINE -> WriteLine
Línea 33: LPAREN -> (
Línea 33: STRING_CONST -> menos uno
Línea 33: RPAREN -> )
Línea 33: SEMICOLON -> ;
Línea 34: RBRACE -> }
Línea 34: ELSE -> else
Línea 34: LBRACE -> {
Línea 35: CONSOLE -> Console
Línea 35: DOT -> .
Línea 35: WRITELINE -> WriteLine
Línea 35: LPAREN -> (
Línea 35: STRING_CONST -> negativo
Línea 35: RPAREN -> )
Línea 35: SEMICOLON -> ;
Línea 36: RBRACE -> }
Línea 38: FOR -> for
Línea 38: LPAREN -> (
Línea 38: INT -> int
Línea 38: ID -> i
Línea 38: ASSIGN -> =
Línea 38: INT_CONST -> 0
Línea 38: SEMICOLON -> ;
Línea 38: ID -> i
Línea 38: LT -> <
Línea 38: INT_CONST -> 3
Línea 38: SEMICOLON -> ;
Línea 38: ID -> i
Línea 38: ASSIGN -> =
Línea 38: ID -> i
Línea 38: PLUS -> +
Línea 38: INT_CONST -> 1
Línea 38: RPAREN -> )
Línea 38: LBRACE -> {
Línea 39: CONSOLE -> Console
Línea 39: DOT -> .
Línea 39: WRITELINE -> WriteLine
Línea 39: LPAREN -> (
Línea 39: ID -> i
Línea 39: RPAREN -> )
Línea 39: SEMICOLON -> ;
Línea 40: RBRACE -> }
Línea 42: LIST -> List
Línea 42: LT -> <
Línea 42: INT -> int
Línea 42: GT -> >
Línea 42: ID -> lista
Línea 42: SEMICOLON -> ;
Línea 43: ID -> lista
Línea 43: ASSIGN -> =
Línea 43: NEW -> new
Línea 43: LIST -> List
Línea 43: LT -> <
Línea 43: INT -> int
Línea 43: GT -> >
Línea 43: LPAREN -> (
Línea 43: RPAREN -> )
Línea 43: SEMICOLON -> ;
Línea 45: ID -> lista
Línea 45: DOT -> .
Línea 45: ID -> Add
Línea 45: LPAREN -> (
Línea 45: INT_CONST -> 10
Línea 45: RPAREN -> )
Línea 45: SEMICOLON -> ;
Línea 46: ID -> lista
Línea 46: DOT -> .
Línea 46: ID -> Add
Línea 46: LPAREN -> (
Línea 46: INT_CONST -> 20
Línea 46: RPAREN -> )
Línea 46: SEMICOLON -> ;
Línea 47: ID -> lista
Línea 47: LBRACKET -> [
Línea 47: INT_CONST -> 0
Línea 47: RBRACKET -> ]
Línea 47: ASSIGN -> =
Línea 47: INT_CONST -> 99
Línea 47: SEMICOLON -> ;
Línea 48: CONSOLE -> Console
Línea 48: DOT -> .
Línea 48: WRITELINE -> WriteLine
Línea 48: LPAREN -> (
Línea 48: ID -> lista
Línea 48: LBRACKET -> [
Línea 48: INT_CONST -> 0
Línea 48: RBRACKET -> ]
Línea 48: RPAREN -> )
Línea 48: SEMICOLON -> ;