Tokens reconocidos:
Línea 4: FLOAT -> float
Línea 4: ID -> f
Línea 4: ASSIGN -> =
Línea 4: FLOAT_CONST -> 2.5
Línea 4: SEMICOLON -> ;
Línea 5: LIST -> List
Línea 5: LT -> <
Línea 5: DOUBLE -> double
Línea 5: GT -> >
Línea 5: ID -> listaDoubles
Línea 5: ASSIGN -> =
Línea 5: NEW -> new
Línea 5: LIST -> List
Línea 5: LT -> <
Línea 5: DOUBLE -> double
Línea 5: GT -> >
Línea 5: LBRACE -> {
Línea 5: FLOAT_CONST -> 1.1
Línea 5: COMMA -> ,
Línea 5: FLOAT_CONST -> 2.2
Línea 5: RBRACE -> }
Línea 5: SEMICOLON -> ;
Línea 7: VAR -> var
Línea 7: ID -> autoVar
Línea 7: SEMICOLON -> ;
Línea 8: ID -> autoVar
Línea 8: ASSIGN -> =
Línea 8: STRING_CONST -> auto
Línea 8: SEMICOLON -> ;
Línea 11: VAR -> var
Línea 11: ID -> sinAsignar
Línea 11: SEMICOLON -> ;
Línea 12: CONSOLE -> Console
Línea 12: DOT -> .
Línea 12: WRITELINE -> WriteLine
Línea 12: LPAREN -> (
Línea 12: ID -> sinAsignar
Línea 12: RPAREN -> )
Línea 12: SEMICOLON -> ;
Línea 15: LIST -> List
Línea 15: LT -> <
Línea 15: LIST -> List
Línea 15: LT -> <
Línea 15: STRING -> string
Línea 15: GT -> >
Línea 15: GT -> >
Línea 15: ID -> listaDeListas
Línea 15: SEMICOLON -> ;
Línea 18: INT -> int
Línea 18: ID -> Sumar
Línea 18: LPAREN -> (
Línea 18: INT -> int
Línea 18: ID -> a
Línea 18: COMMA -> ,
Línea 18: INT -> int
Línea 18: ID -> b
Línea 18: RPAREN -> )
Línea 18: LBRACE -> {
Línea 19: RETURN -> return
Línea 19: ID -> a
Línea 19: PLUS -> +
Línea 19: ID -> b
Línea 19: SEMICOLON -> ;
Línea 20: RBRACE -> }
Línea 21: BOOL -> bool
Línea 21: ID -> Falso
Línea 21: LPAREN -> (
Línea 21: RPAREN -> )
Línea 21: LBRACE -> {
Línea 22: RETURN -> return
Línea 22: INT_CONST -> 0
Línea 22: SEMICOLON -> ;
Línea 23: RBRACE -> }
Línea 26: IF -> if
Línea 26: LPAREN -> (
Línea 26: ID -> f
Línea 26: LT -> <
Línea 26: FLOAT_CONST -> 3.0
Línea 26: RPAREN -> )
Línea 26: LBRACE -> {
Línea 27: CONSOLE -> Console
Línea 27: DOT -> .
Línea 27: WRITELINE -> WriteLine
Línea 27: LPAREN -> (
Línea 27: STRING_CONST -> f es menor que 3
Línea 27: RPAREN -> )
Línea 27: SEMICOLON -> ;
Línea 28: RBRACE -> }
Línea 28: ELSE -> else
Línea 28: LBRACE -> {
Línea 29: CONSOLE -> Console
Línea 29: DOT -> .
Línea 29: WRITELINE -> WriteLine
Línea 29: LPAREN -> (
Línea 29: STRING_CONST -> f es mayor o igual que 3
Línea 29: RPAREN -> )
Línea 29: SEMICOLON -> ;
Línea 30: RBRACE -> }