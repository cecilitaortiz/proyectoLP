Tokens reconocidos:
Línea 1: USING -> using
Línea 1: ID -> System
Línea 1: SEMICOLON -> ;
Línea 3: INT -> int
Línea 3: ID -> a
Línea 3: ASSIGN -> =
Línea 3: INT_CONST -> 5
Línea 3: SEMICOLON -> ;
Línea 4: IF -> if
Línea 4: LPAREN -> (
Línea 4: ID -> a
Línea 4: GT -> >
Línea 4: INT_CONST -> 0
Línea 4: RPAREN -> )
Línea 4: LBRACE -> {
Línea 5: CONSOLE -> Console
Línea 5: DOT -> .
Línea 5: WRITELINE -> WriteLine
Línea 5: LPAREN -> (
Línea 5: ID -> a
Línea 5: RPAREN -> )
Línea 5: SEMICOLON -> ;
Línea 6: RBRACE -> }
Línea 8: INT -> int
Línea 8: ID -> b
Línea 8: ASSIGN -> =
Línea 8: MINUS -> -
Línea 8: INT_CONST -> 1
Línea 8: SEMICOLON -> ;
Línea 9: IF -> if
Línea 9: LPAREN -> (
Línea 9: ID -> b
Línea 9: GT -> >
Línea 9: INT_CONST -> 0
Línea 9: RPAREN -> )
Línea 9: LBRACE -> {
Línea 10: CONSOLE -> Console
Línea 10: DOT -> .
Línea 10: WRITELINE -> WriteLine
Línea 10: LPAREN -> (
Línea 10: ID -> b
Línea 10: RPAREN -> )
Línea 10: SEMICOLON -> ;
Línea 11: RBRACE -> }
Línea 11: ELSE -> else
Línea 11: LBRACE -> {
Línea 12: CONSOLE -> Console
Línea 12: DOT -> .
Línea 12: WRITELINE -> WriteLine
Línea 12: LPAREN -> (
Línea 12: INT_CONST -> 0
Línea 12: RPAREN -> )
Línea 12: SEMICOLON -> ;
Línea 13: RBRACE -> }
Línea 15: INT -> int
Línea 15: ID -> c
Línea 15: ASSIGN -> =
Línea 15: INT_CONST -> 0
Línea 15: SEMICOLON -> ;
Línea 16: IF -> if
Línea 16: LPAREN -> (
Línea 16: ID -> c
Línea 16: GT -> >
Línea 16: INT_CONST -> 0
Línea 16: RPAREN -> )
Línea 16: LBRACE -> {
Línea 17: CONSOLE -> Console
Línea 17: DOT -> .
Línea 17: WRITELINE -> WriteLine
Línea 17: LPAREN -> (
Línea 17: STRING_CONST -> positivo
Línea 17: RPAREN -> )
Línea 17: SEMICOLON -> ;
Línea 18: RBRACE -> }
Línea 18: ELSE -> else
Línea 18: IF -> if
Línea 18: LPAREN -> (
Línea 18: ID -> c
Línea 18: EQ -> ==
Línea 18: INT_CONST -> 0
Línea 18: RPAREN -> )
Línea 18: LBRACE -> {
Línea 19: CONSOLE -> Console
Línea 19: DOT -> .
Línea 19: WRITELINE -> WriteLine
Línea 19: LPAREN -> (
Línea 19: STRING_CONST -> cero
Línea 19: RPAREN -> )
Línea 19: SEMICOLON -> ;
Línea 20: RBRACE -> }
Línea 20: ELSE -> else
Línea 20: IF -> if
Línea 20: LPAREN -> (
Línea 20: ID -> c
Línea 20: EQ -> ==
Línea 20: MINUS -> -
Línea 20: INT_CONST -> 1
Línea 20: RPAREN -> )
Línea 20: LBRACE -> {
Línea 21: CONSOLE -> Console
Línea 21: DOT -> .
Línea 21: WRITELINE -> WriteLine
Línea 21: LPAREN -> (
Línea 21: STRING_CONST -> menos uno
Línea 21: RPAREN -> )
Línea 21: SEMICOLON -> ;
Línea 22: RBRACE -> }
Línea 22: ELSE -> else
Línea 22: LBRACE -> {
Línea 23: CONSOLE -> Console
Línea 23: DOT -> .
Línea 23: WRITELINE -> WriteLine
Línea 23: LPAREN -> (
Línea 23: STRING_CONST -> negativo
Línea 23: RPAREN -> )
Línea 23: SEMICOLON -> ;
Línea 24: RBRACE -> }
Línea 26: FOR -> for
Línea 26: LPAREN -> (
Línea 26: INT -> int
Línea 26: ID -> i
Línea 26: ASSIGN -> =
Línea 26: INT_CONST -> 0
Línea 26: SEMICOLON -> ;
Línea 26: ID -> i
Línea 26: LT -> <
Línea 26: INT_CONST -> 3
Línea 26: SEMICOLON -> ;
Línea 26: ID -> i
Línea 26: ASSIGN -> =
Línea 26: ID -> i
Línea 26: PLUS -> +
Línea 26: INT_CONST -> 1
Línea 26: RPAREN -> )
Línea 26: LBRACE -> {
Línea 27: CONSOLE -> Console
Línea 27: DOT -> .
Línea 27: WRITELINE -> WriteLine
Línea 27: LPAREN -> (
Línea 27: ID -> i
Línea 27: RPAREN -> )
Línea 27: SEMICOLON -> ;
Línea 28: RBRACE -> }
Línea 30: FOR -> for
Línea 30: LPAREN -> (
Línea 30: ID -> j
Línea 30: ASSIGN -> =
Línea 30: INT_CONST -> 10
Línea 30: SEMICOLON -> ;
Línea 30: ID -> j
Línea 30: GT -> >
Línea 30: INT_CONST -> 0
Línea 30: SEMICOLON -> ;
Línea 30: ID -> j
Línea 30: ASSIGN -> =
Línea 30: ID -> j
Línea 30: MINUS -> -
Línea 30: INT_CONST -> 1
Línea 30: RPAREN -> )
Línea 30: LBRACE -> {
Línea 31: CONSOLE -> Console
Línea 31: DOT -> .
Línea 31: WRITELINE -> WriteLine
Línea 31: LPAREN -> (
Línea 31: ID -> j
Línea 31: RPAREN -> )
Línea 31: SEMICOLON -> ;
Línea 32: RBRACE -> }