Tokens reconocidos:
--- Tokens para Thomas_prueba.cs ---
Línea 1: USING -> using
Línea 1: ID -> System
Línea 1: SEMICOLON -> ;
Línea 1: CLASS -> class
Línea 1: ID -> ThomasPrueba
Línea 1: LBRACE -> {
Línea 1: PUBLIC -> public
Línea 1: VOID -> void
Línea 1: ID -> LogicaYIncremento
Línea 1: LPAREN -> (
Línea 1: RPAREN -> )
Línea 1: LBRACE -> {
Línea 1: INT -> int
Línea 1: ID -> x
Línea 1: EQUALS -> =
Línea 1: INT -> 10
Línea 1: SEMICOLON -> ;
Línea 1: INT -> int
Línea 1: ID -> y
Línea 1: EQUALS -> =
Línea 1: INT -> 5
Línea 1: SEMICOLON -> ;
Línea 1: BOOL -> bool
Línea 1: ID -> a
Línea 1: EQUALS -> =
Línea 1: TRUE -> true
Línea 1: SEMICOLON -> ;
Línea 1: BOOL -> bool
Línea 1: ID -> b
Línea 1: EQUALS -> =
Línea 1: FALSE -> false
Línea 1: SEMICOLON -> ;
Línea 1: BOOL -> bool
Línea 1: ID -> resultado1
Línea 1: EQUALS -> =
Línea 1: ID -> a
Línea 1: AND -> &&
Línea 1: ID -> b
Línea 1: SEMICOLON -> ;
Línea 1: BOOL -> bool
Línea 1: ID -> resultado2
Línea 1: EQUALS -> =
Línea 1: ID -> a
Línea 1: OR -> ||
Línea 1: ID -> b
Línea 1: SEMICOLON -> ;
Línea 1: BOOL -> bool
Línea 1: ID -> resultado3
Línea 1: EQUALS -> =
Línea 1: NOT -> !
Línea 1: ID -> a
Línea 1: SEMICOLON -> ;
Línea 1: ID -> x
Línea 1: INCREMENT -> ++
Línea 1: SEMICOLON -> ;
Línea 1: ID -> y
Línea 1: DECREMENT -> --
Línea 1: SEMICOLON -> ;
Línea 1: INCREMENT -> ++
Línea 1: ID -> x
Línea 1: SEMICOLON -> ;
Línea 1: DECREMENT -> --
Línea 1: ID -> y
Línea 1: SEMICOLON -> ;
Línea 1: RBRACE -> }
Línea 1: RBRACE -> }

--- Tokens para Cecilia_prueba.cs ---
Línea 1: USING -> using
Línea 1: ID -> System
Línea 1: SEMICOLON -> ;
Línea 1: USING -> using
Línea 1: ID -> System
Línea 1: DOT -> .
Línea 1: ID -> Collections
Línea 1: DOT -> .
Línea 1: ID -> Generic
Línea 1: SEMICOLON -> ;
Línea 1: PUBLIC -> public
Línea 1: CLASS -> class
Línea 1: ID -> CeciliaPrueba
Línea 1: LBRACE -> {
Línea 1: PUBLIC -> public
Línea 1: INT -> int
Línea 1: ID -> MiMetodo
Línea 1: LPAREN -> (
Línea 1: INT -> int
Línea 1: ID -> a
Línea 1: COMMA -> ,
Línea 1: DOUBLE -> double
Línea 1: ID -> b
Línea 1: RPAREN -> )
Línea 1: LBRACE -> {
Línea 1: INT -> int
Línea 1: ID -> resultado
Línea 1: EQUALS -> =
Línea 1: ID -> a
Línea 1: PLUS -> +
Línea 1: LPAREN -> (
Línea 1: INT -> int
Línea 1: RPAREN -> )
Línea 1: ID -> b
Línea 1: SEMICOLON -> ;
Línea 1: IF -> if
Línea 1: LPAREN -> (
Línea 1: ID -> resultado
Línea 1: GT -> >
Línea 1: INT -> 10
Línea 1: RPAREN -> )
Línea 1: LBRACE -> {
Línea 1: RETURN -> return
Línea 1: ID -> resultado
Línea 1: SEMICOLON -> ;
Línea 1: RBRACE -> }
Línea 1: ELSE -> else
Línea 1: LBRACE -> {
Línea 1: RETURN -> return
Línea 1: INT -> 0
Línea 1: SEMICOLON -> ;
Línea 1: RBRACE -> }
Línea 1: RBRACE -> }
Línea 1: PUBLIC -> public
Línea 1: VOID -> void
Línea 1: ID -> Declaraciones
Línea 1: LPAREN -> (
Línea 1: RPAREN -> )
Línea 1: LBRACE -> {
Línea 1: INT -> int
Línea 1: ID -> entero
Línea 1: EQUALS -> =
Línea 1: INT -> 5
Línea 1: SEMICOLON -> ;
Línea 1: DOUBLE -> double
Línea 1: ID -> doble
Línea 1: EQUALS -> =
Línea 1: FLOAT -> 3.14
Línea 1: SEMICOLON -> ;
Línea 1: FLOAT -> float
Línea 1: ID -> flotante
Línea 1: EQUALS -> =
Línea 1: FLOAT -> 2.5
Línea 1: ID -> f
Línea 1: SEMICOLON -> ;
Línea 1: BOOL -> bool
Línea 1: ID -> bandera
Línea 1: EQUALS -> =
Línea 1: TRUE -> true
Línea 1: SEMICOLON -> ;
Línea 1: STRINGTYPE -> string
Línea 1: ID -> texto
Línea 1: EQUALS -> =
Línea 1: STRING -> Hola mundo
Línea 1: SEMICOLON -> ;
Línea 1: CHAR -> char
Línea 1: ID -> letra
Línea 1: EQUALS -> =
Línea 1: APOSTROPHE -> '
Línea 1: ID -> A
Línea 1: APOSTROPHE -> '
Línea 1: SEMICOLON -> ;
Línea 1: VAR -> var
Línea 1: ID -> variable
Línea 1: EQUALS -> =
Línea 1: INT -> 100
Línea 1: SEMICOLON -> ;
Línea 1: LIST -> List
Línea 1: LT -> <
Línea 1: INT -> int
Línea 1: GT -> >
Línea 1: ID -> lista
Línea 1: EQUALS -> =
Línea 1: NEW -> new
Línea 1: LIST -> List
Línea 1: LT -> <
Línea 1: INT -> int
Línea 1: GT -> >
Línea 1: LPAREN -> (
Línea 1: RPAREN -> )
Línea 1: SEMICOLON -> ;
Línea 1: RBRACE -> }
Línea 1: RBRACE -> }
