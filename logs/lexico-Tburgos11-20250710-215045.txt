Tokens reconocidos:
Línea 2: INT -> int
Línea 2: ID -> a
Línea 2: ASSIGN -> =
Línea 2: INT_CONST -> 5
Línea 2: SEMICOLON -> ;
Línea 3: FLOAT -> float
Línea 3: ID -> b
Línea 3: ASSIGN -> =
Línea 3: FLOAT_CONST -> 3.14
Línea 3: SEMICOLON -> ;
Línea 4: BOOL -> bool
Línea 4: ID -> flag
Línea 4: ASSIGN -> =
Línea 4: TRUE -> true
Línea 4: SEMICOLON -> ;
Línea 5: STRING -> string
Línea 5: ID -> mensaje
Línea 5: ASSIGN -> =
Línea 5: STRING_CONST -> Hola mundo
Línea 5: SEMICOLON -> ;
Línea 8: LIST -> List
Línea 8: LT -> <
Línea 8: INT -> int
Línea 8: GT -> >
Línea 8: ID -> numeros
Línea 8: SEMICOLON -> ;
Línea 9: LIST -> List
Línea 9: LT -> <
Línea 9: INT -> int
Línea 9: GT -> >
Línea 9: ID -> otros
Línea 9: ASSIGN -> =
Línea 9: NEW -> new
Línea 9: LIST -> List
Línea 9: LT -> <
Línea 9: INT -> int
Línea 9: GT -> >
Línea 9: LPAREN -> (
Línea 9: RPAREN -> )
Línea 9: SEMICOLON -> ;
Línea 10: ID -> numeros
Línea 10: ASSIGN -> =
Línea 10: NEW -> new
Línea 10: LIST -> List
Línea 10: LT -> <
Línea 10: INT -> int
Línea 10: GT -> >
Línea 10: LPAREN -> (
Línea 10: RPAREN -> )
Línea 10: SEMICOLON -> ;
Línea 11: ID -> numeros
Línea 11: DOT -> .
Línea 11: ADD -> Add
Línea 11: LPAREN -> (
Línea 11: INT_CONST -> 10
Línea 11: RPAREN -> )
Línea 11: SEMICOLON -> ;
Línea 12: ID -> numeros
Línea 12: DOT -> .
Línea 12: ADD -> Add
Línea 12: LPAREN -> (
Línea 12: ID -> a
Línea 12: RPAREN -> )
Línea 12: SEMICOLON -> ;
Línea 13: ID -> numeros
Línea 13: LBRACKET -> [
Línea 13: INT_CONST -> 0
Línea 13: RBRACKET -> ]
Línea 13: ASSIGN -> =
Línea 13: INT_CONST -> 20
Línea 13: SEMICOLON -> ;
Línea 14: INT -> int
Línea 14: ID -> primero
Línea 14: ASSIGN -> =
Línea 14: ID -> numeros
Línea 14: LBRACKET -> [
Línea 14: INT_CONST -> 0
Línea 14: RBRACKET -> ]
Línea 14: SEMICOLON -> ;
Línea 17: IF -> if
Línea 17: LPAREN -> (
Línea 17: ID -> a
Línea 17: GT -> >
Línea 17: INT_CONST -> 0
Línea 17: RPAREN -> )
Línea 17: LBRACE -> {
Línea 18: CONSOLE -> Console
Línea 18: DOT -> .
Línea 18: WRITELINE -> WriteLine
Línea 18: LPAREN -> (
Línea 18: STRING_CONST -> a es positivo
Línea 18: RPAREN -> )
Línea 18: SEMICOLON -> ;
Línea 19: RBRACE -> }
Línea 19: ELSE -> else
Línea 19: IF -> if
Línea 19: LPAREN -> (
Línea 19: ID -> a
Línea 19: EQ -> ==
Línea 19: INT_CONST -> 0
Línea 19: RPAREN -> )
Línea 19: LBRACE -> {
Línea 20: CONSOLE -> Console
Línea 20: DOT -> .
Línea 20: WRITELINE -> WriteLine
Línea 20: LPAREN -> (
Línea 20: STRING_CONST -> a es cero
Línea 20: RPAREN -> )
Línea 20: SEMICOLON -> ;
Línea 21: RBRACE -> }
Línea 21: ELSE -> else
Línea 21: LBRACE -> {
Línea 22: CONSOLE -> Console
Línea 22: DOT -> .
Línea 22: WRITELINE -> WriteLine
Línea 22: LPAREN -> (
Línea 22: STRING_CONST -> a es negativo
Línea 22: RPAREN -> )
Línea 22: SEMICOLON -> ;
Línea 23: RBRACE -> }
Línea 26: FOR -> for
Línea 26: LPAREN -> (
Línea 26: INT -> int
Línea 26: ID -> i
Línea 26: ASSIGN -> =
Línea 26: INT_CONST -> 0
Línea 26: SEMICOLON -> ;
Línea 26: ID -> i
Línea 26: LT -> <
Línea 26: INT_CONST -> 3
Línea 26: SEMICOLON -> ;
Línea 26: ID -> i
Línea 26: ASSIGN -> =
Línea 26: ID -> i
Línea 26: PLUS -> +
Línea 26: INT_CONST -> 1
Línea 26: RPAREN -> )
Línea 26: LBRACE -> {
Línea 27: ID -> numeros
Línea 27: DOT -> .
Línea 27: ADD -> Add
Línea 27: LPAREN -> (
Línea 27: ID -> i
Línea 27: RPAREN -> )
Línea 27: SEMICOLON -> ;
Línea 28: CONSOLE -> Console
Línea 28: DOT -> .
Línea 28: WRITELINE -> WriteLine
Línea 28: LPAREN -> (
Línea 28: ID -> numeros
Línea 28: LBRACKET -> [
Línea 28: ID -> i
Línea 28: RBRACKET -> ]
Línea 28: RPAREN -> )
Línea 28: SEMICOLON -> ;
Línea 29: RBRACE -> }
Línea 32: INT -> int
Línea 32: ID -> Sumar
Línea 32: LPAREN -> (
Línea 32: INT -> int
Línea 32: ID -> x
Línea 32: COMMA -> ,
Línea 32: INT -> int
Línea 32: ID -> y
Línea 32: RPAREN -> )
Línea 32: LBRACE -> {
Línea 33: INT -> int
Línea 33: ID -> resultado
Línea 33: ASSIGN -> =
Línea 33: ID -> x
Línea 33: PLUS -> +
Línea 33: ID -> y
Línea 33: SEMICOLON -> ;
Línea 34: RETURN -> return
Línea 34: ID -> resultado
Línea 34: SEMICOLON -> ;
Línea 35: RBRACE -> }
Línea 38: INT -> int
Línea 38: ID -> suma
Línea 38: ASSIGN -> =
Línea 38: ID -> Sumar
Línea 38: LPAREN -> (
Línea 38: ID -> a
Línea 38: COMMA -> ,
Línea 38: INT_CONST -> 2
Línea 38: RPAREN -> )
Línea 38: SEMICOLON -> ;
Línea 41: CONSOLE -> Console
Línea 41: DOT -> .
Línea 41: WRITELINE -> WriteLine
Línea 41: LPAREN -> (
Línea 41: STRING_CONST -> Ingrese un número:
Línea 41: RPAREN -> )
Línea 41: SEMICOLON -> ;
Línea 42: INT -> int
Línea 42: ID -> n
Línea 42: ASSIGN -> =
Línea 42: INT -> int
Línea 42: DOT -> .
Línea 42: PARSE -> Parse
Línea 42: LPAREN -> (
Línea 42: CONSOLE -> Console
Línea 42: DOT -> .
Línea 42: READLINE -> ReadLine
Línea 42: LPAREN -> (
Línea 42: RPAREN -> )
Línea 42: RPAREN -> )
Línea 42: SEMICOLON -> ;
Línea 45: IF -> if
Línea 45: LPAREN -> (
Línea 45: ID -> flag
Línea 45: AND -> &&
Línea 45: LPAREN -> (
Línea 45: ID -> n
Línea 45: GT -> >
Línea 45: INT_CONST -> 0
Línea 45: OR -> ||
Línea 45: ID -> n
Línea 45: EQ -> ==
Línea 45: INT_CONST -> 0
Línea 45: RPAREN -> )
Línea 45: RPAREN -> )
Línea 45: LBRACE -> {
Línea 46: CONSOLE -> Console
Línea 46: DOT -> .
Línea 46: WRITELINE -> WriteLine
Línea 46: LPAREN -> (
Línea 46: STRING_CONST -> n es no negativo y flag es true
Línea 46: RPAREN -> )
Línea 46: SEMICOLON -> ;
Línea 47: RBRACE -> }