Tokens reconocidos:
Línea 1: INT -> int
Línea 1: ID -> a
Línea 1: ASSIGN -> =
Línea 1: INT_CONST -> 5
Línea 1: SEMICOLON -> ;
Línea 2: IF -> if
Línea 2: LPAREN -> (
Línea 2: ID -> a
Línea 2: GT -> >
Línea 2: INT_CONST -> 0
Línea 2: RPAREN -> )
Línea 2: LBRACE -> {
Línea 3: CONSOLE -> Console
Línea 3: DOT -> .
Línea 3: WRITELINE -> WriteLine
Línea 3: LPAREN -> (
Línea 3: ID -> a
Línea 3: RPAREN -> )
Línea 3: SEMICOLON -> ;
Línea 4: RBRACE -> }
Línea 6: INT -> int
Línea 6: ID -> b
Línea 6: ASSIGN -> =
Línea 6: INT_CONST -> 1
Línea 6: SEMICOLON -> ;
Línea 7: IF -> if
Línea 7: LPAREN -> (
Línea 7: ID -> b
Línea 7: GT -> >
Línea 7: INT_CONST -> 0
Línea 7: RPAREN -> )
Línea 7: LBRACE -> {
Línea 8: CONSOLE -> Console
Línea 8: DOT -> .
Línea 8: WRITELINE -> WriteLine
Línea 8: LPAREN -> (
Línea 8: ID -> b
Línea 8: RPAREN -> )
Línea 8: SEMICOLON -> ;
Línea 9: RBRACE -> }
Línea 9: ELSE -> else
Línea 9: LBRACE -> {
Línea 10: CONSOLE -> Console
Línea 10: DOT -> .
Línea 10: WRITELINE -> WriteLine
Línea 10: LPAREN -> (
Línea 10: INT_CONST -> 0
Línea 10: RPAREN -> )
Línea 10: SEMICOLON -> ;
Línea 11: RBRACE -> }
Línea 13: INT -> int
Línea 13: ID -> c
Línea 13: ASSIGN -> =
Línea 13: INT_CONST -> 0
Línea 13: SEMICOLON -> ;
Línea 14: IF -> if
Línea 14: LPAREN -> (
Línea 14: ID -> c
Línea 14: GT -> >
Línea 14: INT_CONST -> 0
Línea 14: RPAREN -> )
Línea 14: LBRACE -> {
Línea 15: CONSOLE -> Console
Línea 15: DOT -> .
Línea 15: WRITELINE -> WriteLine
Línea 15: LPAREN -> (
Línea 15: STRING_CONST -> positivo
Línea 15: RPAREN -> )
Línea 15: SEMICOLON -> ;
Línea 16: RBRACE -> }
Línea 16: ELSE -> else
Línea 16: IF -> if
Línea 16: LPAREN -> (
Línea 16: ID -> c
Línea 16: EQ -> ==
Línea 16: INT_CONST -> 0
Línea 16: RPAREN -> )
Línea 16: LBRACE -> {
Línea 17: CONSOLE -> Console
Línea 17: DOT -> .
Línea 17: WRITELINE -> WriteLine
Línea 17: LPAREN -> (
Línea 17: STRING_CONST -> cero
Línea 17: RPAREN -> )
Línea 17: SEMICOLON -> ;
Línea 18: RBRACE -> }
Línea 18: ELSE -> else
Línea 18: IF -> if
Línea 18: LPAREN -> (
Línea 18: ID -> c
Línea 18: EQ -> ==
Línea 18: INT_CONST -> 1
Línea 18: RPAREN -> )
Línea 18: LBRACE -> {
Línea 19: CONSOLE -> Console
Línea 19: DOT -> .
Línea 19: WRITELINE -> WriteLine
Línea 19: LPAREN -> (
Línea 19: STRING_CONST -> menos uno
Línea 19: RPAREN -> )
Línea 19: SEMICOLON -> ;
Línea 20: RBRACE -> }
Línea 20: ELSE -> else
Línea 20: LBRACE -> {
Línea 21: CONSOLE -> Console
Línea 21: DOT -> .
Línea 21: WRITELINE -> WriteLine
Línea 21: LPAREN -> (
Línea 21: STRING_CONST -> negativo
Línea 21: RPAREN -> )
Línea 21: SEMICOLON -> ;
Línea 22: RBRACE -> }
Línea 24: FOR -> for
Línea 24: LPAREN -> (
Línea 24: INT -> int
Línea 24: ID -> i
Línea 24: ASSIGN -> =
Línea 24: INT_CONST -> 0
Línea 24: SEMICOLON -> ;
Línea 24: ID -> i
Línea 24: LT -> <
Línea 24: INT_CONST -> 3
Línea 24: SEMICOLON -> ;
Línea 24: ID -> i
Línea 24: ASSIGN -> =
Línea 24: ID -> i
Línea 24: PLUS -> +
Línea 24: INT_CONST -> 1
Línea 24: RPAREN -> )
Línea 24: LBRACE -> {
Línea 25: CONSOLE -> Console
Línea 25: DOT -> .
Línea 25: WRITELINE -> WriteLine
Línea 25: LPAREN -> (
Línea 25: ID -> i
Línea 25: RPAREN -> )
Línea 25: SEMICOLON -> ;
Línea 26: RBRACE -> }
Línea 28: FOR -> for
Línea 28: LPAREN -> (
Línea 28: ID -> j
Línea 28: ASSIGN -> =
Línea 28: INT_CONST -> 10
Línea 28: SEMICOLON -> ;
Línea 28: ID -> j
Línea 28: GT -> >
Línea 28: INT_CONST -> 0
Línea 28: SEMICOLON -> ;
Línea 28: ID -> j
Línea 28: ASSIGN -> =
Línea 28: ID -> j
Línea 28: MINUS -> -
Línea 28: INT_CONST -> 1
Línea 28: RPAREN -> )
Línea 28: LBRACE -> {
Línea 29: CONSOLE -> Console
Línea 29: DOT -> .
Línea 29: WRITELINE -> WriteLine
Línea 29: LPAREN -> (
Línea 29: ID -> j
Línea 29: RPAREN -> )
Línea 29: SEMICOLON -> ;
Línea 30: RBRACE -> }