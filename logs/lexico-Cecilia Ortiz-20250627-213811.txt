Tokens reconocidos:
Línea 1: INT -> int
Línea 1: ID -> Sumar
Línea 1: LPAREN -> (
Línea 1: INT -> int
Línea 1: ID -> a
Línea 1: COMMA -> ,
Línea 1: INT -> int
Línea 1: ID -> b
Línea 1: RPAREN -> )
Línea 1: LBRACE -> {
Línea 2: RETURN -> return
Línea 2: ID -> a
Línea 2: PLUS -> +
Línea 2: ID -> b
Línea 2: SEMICOLON -> ;
Línea 3: RBRACE -> }
Línea 5: INT -> int
Línea 5: ID -> resultado
Línea 5: ASSIGN -> =
Línea 5: ID -> Sumar
Línea 5: LPAREN -> (
Línea 5: INT_CONST -> 10
Línea 5: COMMA -> ,
Línea 5: MINUS -> -
Línea 5: INT_CONST -> 3
Línea 5: RPAREN -> )
Línea 5: SEMICOLON -> ;
Línea 6: CONSOLE -> Console
Línea 6: DOT -> .
Línea 6: WRITELINE -> WriteLine
Línea 6: LPAREN -> (
Línea 6: ID -> resultado
Línea 6: RPAREN -> )
Línea 6: SEMICOLON -> ;
Línea 8: INT -> int
Línea 8: ID -> otro
Línea 8: ASSIGN -> =
Línea 8: ID -> Sumar
Línea 8: LPAREN -> (
Línea 8: ID -> Sumar
Línea 8: LPAREN -> (
Línea 8: INT_CONST -> 1
Línea 8: COMMA -> ,
Línea 8: INT_CONST -> 2
Línea 8: RPAREN -> )
Línea 8: COMMA -> ,
Línea 8: INT_CONST -> 5
Línea 8: RPAREN -> )
Línea 8: SEMICOLON -> ;
Línea 9: CONSOLE -> Console
Línea 9: DOT -> .
Línea 9: WRITELINE -> WriteLine
Línea 9: LPAREN -> (
Línea 9: ID -> otro
Línea 9: RPAREN -> )
Línea 9: SEMICOLON -> ;
Línea 11: INT -> int
Línea 11: ID -> a
Línea 11: ASSIGN -> =
Línea 11: INT_CONST -> 5
Línea 11: SEMICOLON -> ;
Línea 12: IF -> if
Línea 12: LPAREN -> (
Línea 12: ID -> a
Línea 12: GT -> >
Línea 12: INT_CONST -> 0
Línea 12: RPAREN -> )
Línea 12: LBRACE -> {
Línea 13: CONSOLE -> Console
Línea 13: DOT -> .
Línea 13: WRITELINE -> WriteLine
Línea 13: LPAREN -> (
Línea 13: ID -> a
Línea 13: RPAREN -> )
Línea 13: SEMICOLON -> ;
Línea 14: RBRACE -> }
Línea 16: INT -> int
Línea 16: ID -> b
Línea 16: ASSIGN -> =
Línea 16: MINUS -> -
Línea 16: INT_CONST -> 1
Línea 16: SEMICOLON -> ;
Línea 17: IF -> if
Línea 17: LPAREN -> (
Línea 17: ID -> b
Línea 17: GT -> >
Línea 17: INT_CONST -> 0
Línea 17: RPAREN -> )
Línea 17: LBRACE -> {
Línea 18: CONSOLE -> Console
Línea 18: DOT -> .
Línea 18: WRITELINE -> WriteLine
Línea 18: LPAREN -> (
Línea 18: ID -> b
Línea 18: RPAREN -> )
Línea 18: SEMICOLON -> ;
Línea 19: RBRACE -> }
Línea 19: ELSE -> else
Línea 19: LBRACE -> {
Línea 20: CONSOLE -> Console
Línea 20: DOT -> .
Línea 20: WRITELINE -> WriteLine
Línea 20: LPAREN -> (
Línea 20: INT_CONST -> 0
Línea 20: RPAREN -> )
Línea 20: SEMICOLON -> ;
Línea 21: RBRACE -> }
Línea 23: INT -> int
Línea 23: ID -> c
Línea 23: ASSIGN -> =
Línea 23: INT_CONST -> 0
Línea 23: SEMICOLON -> ;
Línea 24: IF -> if
Línea 24: LPAREN -> (
Línea 24: ID -> c
Línea 24: GT -> >
Línea 24: INT_CONST -> 0
Línea 24: RPAREN -> )
Línea 24: LBRACE -> {
Línea 25: CONSOLE -> Console
Línea 25: DOT -> .
Línea 25: WRITELINE -> WriteLine
Línea 25: LPAREN -> (
Línea 25: STRING_CONST -> positivo
Línea 25: RPAREN -> )
Línea 25: SEMICOLON -> ;
Línea 26: RBRACE -> }
Línea 26: ELSE -> else
Línea 26: IF -> if
Línea 26: LPAREN -> (
Línea 26: ID -> c
Línea 26: EQ -> ==
Línea 26: INT_CONST -> 0
Línea 26: RPAREN -> )
Línea 26: LBRACE -> {
Línea 27: CONSOLE -> Console
Línea 27: DOT -> .
Línea 27: WRITELINE -> WriteLine
Línea 27: LPAREN -> (
Línea 27: STRING_CONST -> cero
Línea 27: RPAREN -> )
Línea 27: SEMICOLON -> ;
Línea 28: RBRACE -> }
Línea 28: ELSE -> else
Línea 28: IF -> if
Línea 28: LPAREN -> (
Línea 28: ID -> c
Línea 28: EQ -> ==
Línea 28: MINUS -> -
Línea 28: INT_CONST -> 1
Línea 28: RPAREN -> )
Línea 28: LBRACE -> {
Línea 29: CONSOLE -> Console
Línea 29: DOT -> .
Línea 29: WRITELINE -> WriteLine
Línea 29: LPAREN -> (
Línea 29: STRING_CONST -> menos uno
Línea 29: RPAREN -> )
Línea 29: SEMICOLON -> ;
Línea 30: RBRACE -> }
Línea 30: ELSE -> else
Línea 30: LBRACE -> {
Línea 31: CONSOLE -> Console
Línea 31: DOT -> .
Línea 31: WRITELINE -> WriteLine
Línea 31: LPAREN -> (
Línea 31: STRING_CONST -> negativo
Línea 31: RPAREN -> )
Línea 31: SEMICOLON -> ;
Línea 32: RBRACE -> }
Línea 34: FOR -> for
Línea 34: LPAREN -> (
Línea 34: INT -> int
Línea 34: ID -> i
Línea 34: ASSIGN -> =
Línea 34: INT_CONST -> 0
Línea 34: SEMICOLON -> ;
Línea 34: ID -> i
Línea 34: LT -> <
Línea 34: INT_CONST -> 3
Línea 34: SEMICOLON -> ;
Línea 34: ID -> i
Línea 34: ASSIGN -> =
Línea 34: ID -> i
Línea 34: PLUS -> +
Línea 34: INT_CONST -> 1
Línea 34: RPAREN -> )
Línea 34: LBRACE -> {
Línea 35: CONSOLE -> Console
Línea 35: DOT -> .
Línea 35: WRITELINE -> WriteLine
Línea 35: LPAREN -> (
Línea 35: ID -> i
Línea 35: RPAREN -> )
Línea 35: SEMICOLON -> ;
Línea 36: RBRACE -> }
Línea 38: FOR -> for
Línea 38: LPAREN -> (
Línea 38: ID -> j
Línea 38: ASSIGN -> =
Línea 38: INT_CONST -> 10
Línea 38: SEMICOLON -> ;
Línea 38: ID -> j
Línea 38: GT -> >
Línea 38: INT_CONST -> 0
Línea 38: SEMICOLON -> ;
Línea 38: ID -> j
Línea 38: ASSIGN -> =
Línea 38: ID -> j
Línea 38: MINUS -> -
Línea 38: INT_CONST -> 1
Línea 38: RPAREN -> )
Línea 38: LBRACE -> {
Línea 39: CONSOLE -> Console
Línea 39: DOT -> .
Línea 39: WRITELINE -> WriteLine
Línea 39: LPAREN -> (
Línea 39: ID -> j
Línea 39: RPAREN -> )
Línea 39: SEMICOLON -> ;
Línea 40: RBRACE -> }