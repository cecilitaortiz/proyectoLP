Tokens reconocidos:
Línea 4: INT -> int
Línea 4: ID -> a
Línea 4: ASSIGN -> =
Línea 4: INT_CONST -> 5
Línea 4: SEMICOLON -> ;
Línea 5: DOUBLE -> double
Línea 5: ID -> b
Línea 5: ASSIGN -> =
Línea 5: FLOAT_CONST -> 3.14
Línea 5: SEMICOLON -> ;
Línea 6: BOOL -> bool
Línea 6: ID -> flag
Línea 6: ASSIGN -> =
Línea 6: TRUE -> true
Línea 6: SEMICOLON -> ;
Línea 7: STRING -> string
Línea 7: ID -> texto
Línea 7: ASSIGN -> =
Línea 7: STRING_CONST -> Hola
Línea 7: SEMICOLON -> ;
Línea 8: CHAR -> char
Línea 8: ID -> c
Línea 8: ASSIGN -> =
Línea 8: STRING_CONST -> x
Línea 8: SEMICOLON -> ;
Línea 10: LIST -> List
Línea 10: LT -> <
Línea 10: INT -> int
Línea 10: GT -> >
Línea 10: ID -> listaEnteros
Línea 10: SEMICOLON -> ;
Línea 11: ID -> listaEnteros
Línea 11: ASSIGN -> =
Línea 11: NEW -> new
Línea 11: LIST -> List
Línea 11: LT -> <
Línea 11: INT -> int
Línea 11: GT -> >
Línea 11: LPAREN -> (
Línea 11: RPAREN -> )
Línea 11: SEMICOLON -> ;
Línea 12: ID -> listaEnteros
Línea 12: ASSIGN -> =
Línea 12: NEW -> new
Línea 12: LIST -> List
Línea 12: LT -> <
Línea 12: INT -> int
Línea 12: GT -> >
Línea 12: LBRACE -> {
Línea 12: INT_CONST -> 1
Línea 12: COMMA -> ,
Línea 12: INT_CONST -> 2
Línea 12: COMMA -> ,
Línea 12: INT_CONST -> 3
Línea 12: RBRACE -> }
Línea 12: SEMICOLON -> ;
Línea 14: VAR -> var
Línea 14: ID -> x
Línea 14: ASSIGN -> =
Línea 14: INT_CONST -> 10
Línea 14: SEMICOLON -> ;
Línea 15: VAR -> var
Línea 15: ID -> y
Línea 15: ASSIGN -> =
Línea 15: STRING_CONST -> cadena
Línea 15: SEMICOLON -> ;
Línea 16: VAR -> var
Línea 16: ID -> z
Línea 16: SEMICOLON -> ;
Línea 17: ID -> z
Línea 17: ASSIGN -> =
Línea 17: FLOAT_CONST -> 2.5
Línea 17: SEMICOLON -> ;
Línea 19: IF -> if
Línea 19: LPAREN -> (
Línea 19: ID -> a
Línea 19: GT -> >
Línea 19: INT_CONST -> 3
Línea 19: RPAREN -> )
Línea 19: LBRACE -> {
Línea 20: CONSOLE -> Console
Línea 20: DOT -> .
Línea 20: WRITELINE -> WriteLine
Línea 20: LPAREN -> (
Línea 20: STRING_CONST -> a es mayor que 3
Línea 20: RPAREN -> )
Línea 20: SEMICOLON -> ;
Línea 21: RBRACE -> }
Línea 21: ELSE -> else
Línea 21: LBRACE -> {
Línea 22: CONSOLE -> Console
Línea 22: DOT -> .
Línea 22: WRITELINE -> WriteLine
Línea 22: LPAREN -> (
Línea 22: STRING_CONST -> a no es mayor que 3
Línea 22: RPAREN -> )
Línea 22: SEMICOLON -> ;
Línea 23: RBRACE -> }
Línea 26: DOUBLE -> double
Línea 26: ID -> Sumar
Línea 26: LPAREN -> (
Línea 26: DOUBLE -> double
Línea 26: ID -> p1
Línea 26: COMMA -> ,
Línea 26: DOUBLE -> double
Línea 26: ID -> p2
Línea 26: RPAREN -> )
Línea 26: LBRACE -> {
Línea 27: RETURN -> return
Línea 27: ID -> p1
Línea 27: PLUS -> +
Línea 27: ID -> p2
Línea 27: SEMICOLON -> ;
Línea 28: RBRACE -> }
Línea 29: DOUBLE -> double
Línea 29: ID -> resultado
Línea 29: ASSIGN -> =
Línea 29: ID -> Sumar
Línea 29: LPAREN -> (
Línea 29: FLOAT_CONST -> 2.0
Línea 29: COMMA -> ,
Línea 29: FLOAT_CONST -> 3.0
Línea 29: RPAREN -> )
Línea 29: SEMICOLON -> ;