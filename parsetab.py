
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL DOUBLE FLOAT ID INT LBRACE LPAREN RBRACE RPAREN SEMICOLON STRINGTYPE VOIDfunction : type ID LPAREN RPAREN LBRACE RBRACEfunction : type ID LPAREN RPAREN LBRACE body RBRACEtype : INT\n| DOUBLE\n| FLOAT\n| BOOL\n| STRINGTYPE\n| VOIDbody : statement_liststatement_list : statement\n| statement_list statementstatement : SEMICOLON'
    
_lr_action_items = {'INT':([0,],[3,]),'DOUBLE':([0,],[4,]),'FLOAT':([0,],[5,]),'BOOL':([0,],[6,]),'STRINGTYPE':([0,],[7,]),'VOID':([0,],[8,]),'$end':([1,13,18,],[0,-1,-2,]),'ID':([2,3,4,5,6,7,8,],[9,-3,-4,-5,-6,-7,-8,]),'LPAREN':([9,],[10,]),'RPAREN':([10,],[11,]),'LBRACE':([11,],[12,]),'RBRACE':([12,14,15,16,17,19,],[13,18,-9,-10,-12,-11,]),'SEMICOLON':([12,15,16,17,19,],[17,17,-10,-12,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,],[1,]),'type':([0,],[2,]),'body':([12,],[14,]),'statement_list':([12,],[15,]),'statement':([12,15,],[16,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> function","S'",1,None,None,None),
  ('function -> type ID LPAREN RPAREN LBRACE RBRACE','function',6,'p_function_empty_body','analizador_sintactico.py',98),
  ('function -> type ID LPAREN RPAREN LBRACE body RBRACE','function',7,'p_function_with_body','analizador_sintactico.py',102),
  ('type -> INT','type',1,'p_type','analizador_sintactico.py',106),
  ('type -> DOUBLE','type',1,'p_type','analizador_sintactico.py',107),
  ('type -> FLOAT','type',1,'p_type','analizador_sintactico.py',108),
  ('type -> BOOL','type',1,'p_type','analizador_sintactico.py',109),
  ('type -> STRINGTYPE','type',1,'p_type','analizador_sintactico.py',110),
  ('type -> VOID','type',1,'p_type','analizador_sintactico.py',111),
  ('body -> statement_list','body',1,'p_body','analizador_sintactico.py',115),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analizador_sintactico.py',119),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','analizador_sintactico.py',120),
  ('statement -> SEMICOLON','statement',1,'p_statement','analizador_sintactico.py',124),
]
